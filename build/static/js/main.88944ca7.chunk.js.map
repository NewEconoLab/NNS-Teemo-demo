{"version":3,"sources":["store.ts","Tools/neoHelper.tsx","Tools/nnsHelper.tsx","components/divDefault.tsx","components/divNnsCenter.tsx","components/divNnsResolver.tsx","components/divAuction.tsx","components/divNnsCredit.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Store","_this","this","Object","classCallCheck","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","updateLastWSmsgSec","lastWSmsgSec","Date","getTime","lastWSmsgTime","socketInit","socket","socketReadyState","readyState","time","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","pushEvent","eventName","eventData","event","CustomEvent","detail","window","dispatchEvent","getDelay","parseInt","toFixed","_descriptor18","_descriptor19","init","setInterval","minPerDay","auctionMinPerDay","nns_domaincenter","nns_resolver","nns_auction","nns_auction_hash","nns_credit","NEP_5_CGAS","NEP_5_NNC","network","observable","action","computed","addr","_this2","address","net","_this3","nns","_this4","blockHeight","blockTime","blockHash","timeDiff","txid","_this5","txids","unshift","_this6","close","blockDatas","WebSocket","webSocketURL","onclose","console","log","notification","warning","message","description","onerror","error","onopen","send","success","onmessage","data","socketMsgs","JSON","parse","txidIndex","length","tx","findIndex","element","info","blockInsertTime","svrSystemTime","blockHeightDataArray","shift","pop","blockData","lastBlockTime","addEventListener","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","_this7","isTeemoReady","Teemo","NEO","getAccount","then","updateAddress","catch","isConnected","t0","getNetworks","t1","sent","defaultNetwork","updateNetwork","call","stop","_x","apply","arguments","_ref2","_callee2","_context2","_x2","NeoHelper","store","getBlock","blockIndex","result","fetch","rpcUrl","json","abrupt","getAddressFromScriptHash","hex2a","hexx","hex","toString","str","i","substr","String","fromCharCode","hex2Int","byte2Hex","hex2Byte","reverse","hex2TimeStr","timetrans","hexReverse","uint8arr","hexStr","toLowerCase","Uint8Array","len","push","timestamp","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","sec2HMS","sec","h","m","s","NNSHelper","invokeRead_nameHashArray","namehash","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","invokeResp","value","undefined","split","Symbol","iterator","done","type","return","finish","invokeRead","stringify","stack","scriptHash","operation","DivDefault","observer","NNSh","props","state","resData","react_default","createElement","Fragment","spin","tip","spinning","title","className","list","bordered","dataSource","pagination","onChange","page","pageSize","renderItem","item","Item","key","id","Meta","avatar","src","txCount","React","Component","DivNnsCenter","butGetInvokeReadClick","e","invokeGetOwnerInfo","nnsOwnerInfoData","stack0","nnsOwnerInfo","t2","t3","t4","owner","register","resolver","TTL","parentOwner","domain","parenthash","root","setState","input","placeholder","updateNNS","target","defaultValue","es_button","onClick","DivNnsResolver","invokeRead_resolve","resolverData","t5","DivAuction","possibleConstructorReturn","getPrototypeOf","nnsInput","resDataRead","reqDataWrite","resDataWrite","inputAmount","loadingR","loadingW","CGASBalance","auctionBalance","bidBalance","auctionDay","auctionStateInfo","auctionStarter","domainTTL","startBlockSelling","endBlock","maxPrice","maxBuyer","lastBlock","CGASopValue","drawerVisible","intervalID","doOnEvent","getInvokeRead_getBanlance","calcAuctionDay","startTimeS","invokeRead_CGAS_getBanlance","invokeRead_auction_getBanlance","invokeRead_auction_getAuctionState","invokeRead_auction_getBalanceOfBid","InvokeReadGroupInput","stack2","AuctionStateInfo","resData2","group","invokeReadGroup","Math","pow","t6","t7","t8","t9","t10","t11","t12","_ref3","_callee3","_context3","butInvoke_doCGASin_click","_callee4","invoke_CGAS_doCGASinStep0","invoke_auction_doCGASinStep1","InvokeGroupInput","resp","_context4","fee","merge","invokeGroup","forEach","res","addTxidSended","butInvoke_doCGASout_click","_callee5","invoke_auction_doCGASout","_context5","invoke","butInvoke_doStartAuction_click","_callee6","invoke_auction_doStartAuction","_context6","butInvoke_doBid_click","_callee7","invoke_auction_doBid","_context7","butInvoke_doBidSettlementAndCollect_click","_callee8","invoke_auction_doBidSettlement","invoke_auction_doCollect","_context8","butInvoke_doRenew_click","_callee9","invoke_auction_doRenew","_context9","createRef","_callee10","_context10","removeEventListener","clearInterval","es_switch","checked","checkedChildren","unCheckedChildren","defaultChecked","_ref11","_callee11","newNns","_context11","updateAuctionMinPerDay","replace","current","_x3","divider","row","gutter","col","span","statistic","suffix","prefix","icon","CGASopChange","bind","ref","input_number","min","max","step","amountChange","disabled","align","drawer","placement","closable","onClose","visible","timeline","color","DivNnsCredit","getInvokeRead","invokeRead_credit","creditData","creditInfo","fullDomainName","butInvokeCreditAuthenticateClick","invoke_credit_authenticate","invokeCreditAuthenticateResp","butInvokeCreditRevokeClick","invoke_credit_revoke","invokeCreditRevokeResp","Header","Layout","Content","Footer","Sider","App","menuID","menuClick","div_main","divDefault","divNnsCenter","divNnsResolver","divAuction","divNnsCredit","layout","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","menu","theme","mode","defaultSelectedKeys","style","background","padding","margin","minHeight","textAlign","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88944ca7.chunk.js","sourcesContent":["import {observable, action, computed, autorun} from 'mobx';\r\nimport { notification } from 'antd';\r\nimport NeoHelper from './Tools/neoHelper';\r\n\r\nclass Store {\r\n    constructor(){\r\n        this.init()\r\n        setInterval(this.updateLastWSmsgSec,1000)\r\n    }\r\n\r\n    @observable isTeemoReady = false\r\n    @observable isConnected = true\r\n    \r\n    @observable auctionMinPerDay = 5\r\n    @action updateAuctionMinPerDay(minPerDay:number){\r\n        this.auctionMinPerDay = minPerDay\r\n    }\r\n    @computed get nns_auction_hash(){\r\n        if(this.auctionMinPerDay == 5) return \"5fd8c2aed0eec0fa103f6fba16748b453baf5b2e\"\r\n        else return \"4c7cca112a8c5666bce5da373010fc0920d0e0d2\"\r\n    }\r\n\r\n    @computed get scriptHash(){\r\n        return {\r\n            nns_domaincenter : \"348387116c4a75e420663277d9c02049907128c7\",\r\n            nns_resolver : \"6e2aea28af9c5febea0774759b1b76398e3167f1\",\r\n            nns_auction: this.nns_auction_hash,\r\n            nns_credit : \"77bf387c9b5f2e2c33ef8507478b103285c55b11\",\r\n            NEP_5_CGAS:\"74f2dc36a68fdc4682034178eb2220729231db76\",\r\n            NEP_5_NNC:\"fc732edee1efdf968c23c20a9628eaa5a6ccb934\"\r\n        }\r\n    } \r\n\r\n    @observable network = 'TestNet'\r\n    @observable address:string = 'A**********************'\r\n    @observable nns:string='qmz.test'\r\n    @action public updateAddress = (addr:string) =>{\r\n        this.address = addr\r\n    }\r\n    @action public updateNetwork = (net:string) =>{\r\n        this.network = net\r\n    }\r\n    @action public updateNNS = (nns:string) =>{\r\n        this.nns = nns\r\n    }\r\n    @computed get rpcUrl(){\r\n        if(this.network=='MainNet') return 'http://seed.nel.group:10332'\r\n        else return 'http://test.nel.group:20332'\r\n    }\r\n\r\n    @computed get webSocketURL(){\r\n        if(this.network=='MainNet') return 'ws://47.99.35.147:82/ws/mainnet'\r\n        else return 'ws://47.99.35.147:82/ws/testnet'\r\n    }\r\n\r\n    updateLastWSmsgSec = () =>{     \r\n        this.lastWSmsgSec=(new Date().getTime() - this.lastWSmsgTime)/1000\r\n\r\n        //webstock 如果2分钟取不到最新块，会发送心跳数据包\r\n        if(this.lastWSmsgSec>75){\r\n            \r\n            this.lastWSmsgTime=new Date().getTime(),\r\n            this.lastWSmsgSec=0\r\n\r\n            this.socketInit()\r\n        }\r\n\r\n        if(this.socket) this.socketReadyState = this.socket.readyState\r\n    }\r\n\r\n    socket: any;\r\n    time = new Date().getTime()\r\n    @observable socketReadyState = -1\r\n    @observable socketMsgs:Array<any> = []\r\n    @observable blockDatas=[{\r\n        blockHeight:-1,\r\n        blockTime:0,\r\n        blockHash:'',\r\n        timeDiff:0\r\n      }]\r\n    @observable lastBlockTime=0\r\n    @observable lastWSmsgTime=new Date().getTime()\r\n    @observable lastWSmsgSec=0\r\n\r\n    // @computed get lastBlockTime(){\r\n    //     if(this.blockData.length >1){\r\n    //         return this.blockData[0].time\r\n    //     }\r\n    //     else return 0\r\n    // }\r\n    @observable txids:string[] = []\r\n    @action public addTxidSended =(txid:string) =>{\r\n        this.txids.unshift('0x' + txid)\r\n    }\r\n\r\n    pushEvent =(eventName:string,eventData:any) =>{\r\n        var event = new CustomEvent(eventName, { \r\n            detail: eventData\r\n        });\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    getDelay = (time:number) =>{\r\n        return parseInt((new Date().getTime()/1000 - time).toFixed(0)) + 's'\r\n    }\r\n\r\n    @action socketInit =() =>{\r\n        if(this.socket){\r\n            this.socket.close()\r\n        }\r\n\r\n        this.blockDatas=[{\r\n            blockHeight:-1,\r\n            blockTime:0,\r\n            blockHash:'',\r\n            timeDiff:0\r\n          }]\r\n\r\n        this.socket = new WebSocket(this.webSocketURL);\r\n    \r\n        this.socket.onclose = (event:any) => {\r\n            console.log(event);\r\n            notification.warning({message:'websocket',description:'close'})\r\n        };\r\n        this.socket.onerror = (event:any) => {\r\n            console.log(event);\r\n            notification.error({message:'websocket',description:'error'})\r\n        };\r\n        this.socket.onopen = (event:any) =>{\r\n            console.log(event);\r\n            this.socket.send('Hello Server!');\r\n            notification.success({message:'websocket',description:'open on ' + this.webSocketURL})\r\n        }\r\n        this.socket.onmessage = (event:any) =>{\r\n            console.log(event);\r\n            console.log(event.data);\r\n\r\n            this.socketMsgs.unshift(event.data);\r\n\r\n            this.lastWSmsgTime = new Date().getTime()\r\n    \r\n            //let timeDiff = new Date().getTime() - this.time;\r\n            this.time = new Date().getTime()\r\n            //console.log(timeDiff.toString() + 'ms')\r\n            var data = JSON.parse(event.data).data\r\n            if(data.blockHeight != null){\r\n                var txidIndex = -1\r\n                if(this.txids.length>0){                  \r\n                    txidIndex = data.tx.findIndex((element:any)=>{\r\n                        return element.txid === this.txids[0]\r\n                    })\r\n                    //console.log({txid:this.txids[0]},data.tx,txidIndex)\r\n                }\r\n                notification.info({message:data.blockHeight,description:'delay: ' + this.getDelay(data.blockTime) + '/' + this.getDelay(data.blockInsertTime) + '/' + this.getDelay(data.svrSystemTime) + '||txidIndex:' + txidIndex})\r\n\r\n                var blockHeightDataArray = this.blockDatas\r\n\r\n                if(blockHeightDataArray[0].blockHeight == -1 ) blockHeightDataArray.shift()\r\n                if(blockHeightDataArray.length>=50) blockHeightDataArray.pop()\r\n\r\n                let timeDiff = 0\r\n                if(blockHeightDataArray.length > 0) timeDiff = (data.blockTime - blockHeightDataArray[0].blockTime)\r\n                let blockData = data // {height:data.blockHeight,time:data.blockTime,hash:data.blockHash,timeDiff:timeDiff}\r\n                blockData['timeDiff'] = timeDiff\r\n                blockData['txidIndex'] = txidIndex\r\n                blockData['txCount'] = data.tx.length\r\n                blockHeightDataArray.unshift(blockData)\r\n                this.pushEvent('newBlockEvent',blockData)            \r\n        \r\n                this.blockDatas = blockHeightDataArray\r\n                this.lastBlockTime = data.blockTime\r\n            }\r\n        }\r\n    }\r\n\r\n    @action init=()=>{\r\n        console.log(\"this is init\");\r\n        \r\n        window.addEventListener('Teemo.NEO.READY',async (data)=>{\r\n            console.log(\"inject READY \");\r\n            notification.success({message:'Teemo',description:'Teemo.NEO.READY'})     \r\n\r\n            this.isTeemoReady = true\r\n\r\n            var account\r\n            Teemo.NEO.getAccount()\r\n            .then((data)=>{\r\n                console.log('account',data)\r\n                this.updateAddress(data.address)\r\n            })\r\n            .catch((error)=>{\r\n                console.log('account',error)\r\n                this.isConnected=false\r\n            })         \r\n\r\n            this.updateNetwork((await Teemo.NEO.getNetworks()).defaultNetwork)          \r\n\r\n            this.socketInit()\r\n\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.NETWORK_CHANGED',(data:any)=>{\r\n            console.log(\"NETWORK_CHANGED\");\r\n            console.log(data);\r\n\r\n            this.updateNetwork(data.detail.defaultNetwork)\r\n            this.socketInit()\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.CONNECTED',async (data:any)=>{\r\n            console.log(\"CONNECTED\");\r\n            console.log(data);\r\n\r\n            notification.success({message:'Teemo',description:'Teemo.NEO.CONNECTED'})\r\n            this.isConnected = true\r\n            \r\n            this.updateAddress(data.detail.address)\r\n            this.updateNetwork((await Teemo.NEO.getNetworks()).defaultNetwork)\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.DISCONNECTED',(data:any)=>{\r\n            console.log(\"DISCONNECTED\");\r\n            console.log(data);\r\n\r\n            notification.warning({message:'Teemo',description:'Teemo.NEO.DISCONNECTED'})\r\n            this.isConnected = false\r\n\r\n            this.updateAddress('A**********************')\r\n            this.updateNetwork('TestNet')\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.ACCOUNT_CHANGED',(data:any)=>{\r\n            console.log(\"ACCOUNT_CHANGED\");\r\n            console.log(data);\r\n\r\n            notification.warning({message:'Teemo',description:'Teemo.NEO.ACCOUNT_CHANGED'})\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport default Store","import { async } from \"q\";\r\n\r\nclass NeoHelper {\r\n    public static getAddressFromScriptHash = () =>{\r\n        //根据合约notify输出的scripthash，转换为NEO地址\r\n    }\r\n\r\n    store:any\r\n    constructor(store:any){\r\n        this.store=store\r\n    }\r\n\r\n    public getBlock = async (blockIndex:number) =>{\r\n      let result = await fetch(this.store.rpcUrl + '?jsonrpc=2.0&method=getblock&params=[' + blockIndex +',1]&id=1', {\r\n        // method: 'post',\r\n        // headers: {\r\n        //   'user-agent': 'Mozilla/4.0 MDN Example',\r\n        //   'content-type': 'application/json'\r\n        // },\r\n        // body: JSON.stringify({\r\n        //   \"jsonrpc\": \"2.0\",\r\n        //   \"method\": \"getblock\",\r\n        //   \"params\": [blockIndex, 1],\r\n        //   \"id\": 1\r\n        // })\r\n      });\r\n      let data = await result.json();\r\n      return data;\r\n    }\r\n\r\n    public static hex2a = (hexx:string) => {\r\n        var hex = hexx.toString();//force conversion\r\n        var str = '';\r\n        for (var i = 0; (i < hex.length && hex.substr(i, 2) !== '00'); i += 2)\r\n            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\r\n        return str;\r\n    }\r\n\r\n    public static hex2Int = (hexx:string) =>{\r\n      if(hexx=='') return 0\r\n      return parseInt(NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse()), 16)\r\n    }\r\n\r\n    public static hex2TimeStr = (hexx:string) =>{\r\n      return NeoHelper.timetrans(parseInt(NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse()), 16))\r\n    }\r\n\r\n    public static hexReverse = (hexx:string)=>{\r\n      return NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse())\r\n    }\r\n\r\n    public static byte2Hex = (uint8arr:Uint8Array) => {\r\n        if (!uint8arr) {\r\n          return '';\r\n        }\r\n        \r\n        var hexStr = '';\r\n        for (var i = 0; i < uint8arr.length; i++) {\r\n          var hex = (uint8arr[i] & 0xff).toString(16);\r\n          hex = (hex.length === 1) ? '0' + hex : hex;\r\n          hexStr += hex;\r\n        }\r\n        \r\n        return hexStr.toLowerCase();\r\n    }\r\n\r\n    public static hex2Byte = (str:string) => {\r\n        if (!str) {\r\n          return new Uint8Array();\r\n        }\r\n        \r\n        var a = [];\r\n        for (var i = 0, len = str.length; i < len; i+=2) {\r\n          a.push(parseInt(str.substr(i,2),16));\r\n        }\r\n        \r\n        return new Uint8Array(a);\r\n    }\r\n\r\n    public static timetrans = (timestamp:number)=>{\r\n        var date = new Date(timestamp*1000);//如果date为13位不需要乘1000\r\n        var Y = date.getFullYear() + '-';\r\n        var M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';\r\n        var D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\r\n        var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\r\n        var m = (date.getMinutes() <10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\r\n        var s = (date.getSeconds() <10 ? '0' + date.getSeconds() : date.getSeconds());\r\n        return Y+M+D+h+m+s;\r\n    }\r\n\r\n    public static sec2HMS = (sec:number) =>{\r\n      let h=0\r\n      let m=0\r\n      let s=0\r\n      if((sec % 3600) > 0){\r\n        h = parseInt((sec/3600).toString())\r\n        sec = sec - h*3600\r\n      } \r\n      if((sec % 60) > 0){\r\n        m = parseInt((sec/60).toString())\r\n        sec = sec - m*60\r\n      }\r\n      s = sec\r\n\r\n      let mStr='00'\r\n      let sStr='00'\r\n      if(m <10) mStr = '0' + m \r\n        else mStr=m.toString()\r\n      if(s <10) sStr = '0' + s\r\n        else sStr = s.toString()\r\n\r\n      return h + ':' + mStr + ':' + sStr\r\n    }\r\n}\r\n\r\nexport default NeoHelper;","import { async } from \"q\";\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\n\r\n\r\n\r\nclass NNSHelper {\r\n    store:any\r\n    invokeRead_nameHashArray:any\r\n    constructor(store:any) {\r\n        this.store = store\r\n        this.invokeRead_nameHashArray = {\r\n            \"scriptHash\": store.scriptHash.nns_domaincenter,\r\n            \"operation\": \"nameHashArray\",\r\n            \"arguments\": [\r\n                {\"type\":\"Array\",\"value\":[]},\r\n            ],\r\n            \"network\": store.network\r\n        }\r\n    }\r\n\r\n    public namehash = async (nns:string) => {\r\n        var namehash = \"\"\r\n\r\n        this.invokeRead_nameHashArray.arguments[0].value = [];\r\n        for (const str of nns.split('.').reverse()) {\r\n            ((this.invokeRead_nameHashArray.arguments as Argument[])[0].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n        //console.log(invokeRead_nameHashArray)\r\n        //console.log(JSON.stringify(invokeRead_nameHashArray))\r\n        var invokeResp:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(this.invokeRead_nameHashArray)) as InvokeReadInput)\r\n        //console.log(invokeResp)\r\n        namehash = invokeResp.stack[0].value\r\n\r\n        return namehash\r\n    }\r\n}\r\n\r\nexport default NNSHelper;","import {\r\n    List, message, Avatar, Spin,\r\n  } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\n@observer\r\nclass DivDefault extends React.Component<any,any> {\r\n    NNSh = new NNSHelper(this.props.store);\r\n\r\n    state = {\r\n      resData : '{}'\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <> \r\n        <Spin tip='连接Teemo……' spinning={!this.props.store.isTeemoReady}>          \r\n          <p>{this.props.title}</p>\r\n          <p>{this.props.store.address}</p>\r\n          <p>{this.props.store.network}||{this.props.store.rpcUrl}||{this.props.store.webSocketURL}||isConnected:{this.props.store.isConnected.toString()}||{this.props.store.nns}</p>\r\n          {/* <p>block: {this.props.blockHeight}</p>\r\n          <p>notify: {this.props.notifyHeight}</p> */}\r\n          <pre>{JSON.stringify(this.props.store.scriptHash,null,2)}</pre>          \r\n          <div>\r\n            <div className=\"demo-loading-container\">\r\n              <Spin />\r\n              {/* <p>readyState: {this.props.store.socketReadyState}</p> */}\r\n              <p>LastWSmsg: {this.props.store.lastWSmsgSec}s</p>\r\n              <p>LastBlockTime: {NeoHelper.timetrans(this.props.store.lastBlockTime)}(before {NeoHelper.sec2HMS(parseInt((new Date().getTime()/1000 - this.props.store.lastBlockTime).toFixed(0)))})</p>\r\n            </div>\r\n            <List\r\n              bordered = {true}\r\n              dataSource={this.props.store.blockDatas}\r\n              pagination={{\r\n                onChange: (page) => {\r\n                  console.log(page);\r\n                },\r\n                pageSize: 5,\r\n              }}\r\n              renderItem={(item: { id: number; blockHeight: number; timeDiff: number; blockTime:number; blockHash:string ; txCount:number }) => (\r\n                <List.Item key={item.id}>\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src=\"https://neo-cdn.azureedge.net/images/favicon.png\" />}\r\n                    title={item.blockHeight}\r\n                    description={item.blockHash + \" tx:\" + item.txCount}\r\n                  />\r\n                  <div>({item.timeDiff + 's'}){NeoHelper.timetrans(item.blockTime)}</div>\r\n                </List.Item>\r\n              )}\r\n            ></List>\r\n          </div>\r\n        </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivDefault;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface OwnerInfo\r\n{\r\n    owner:string//如果长度=0 表示没有初始化\r\n    register : string \r\n    resolver: string ;\r\n    TTL: string ;\r\n    parentOwner: string ;//当此域名注册时，他爹的所有者，记录这个，则可以检测域名的爹变了\r\n    domain: string ;//如果长度=0 表示没有初始化\r\n    parenthash: string ;\r\n    root: string ;//是不是根合约\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nclass DivNnsCenter extends React.Component<any,any> {\r\n    // NNSh = new NNSHelper(this.props.store); \r\n\r\n    state = {\r\n        resData : '{}'\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        let invokeGetOwnerInfo =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_domaincenter,\r\n            \"operation\": \"getOwnerInfo\",\r\n            \"arguments\": [\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns)},\r\n            ],\r\n            \"network\": this.props.store.network\r\n        } \r\n\r\n        // invokeGetOwnerInfo.arguments[0].value = await this.NNSh.namehash(this.props.store.nns)\r\n        //console.log(JSON.stringify(invokeGetOwnerInfo,null,2))\r\n\r\n        var nnsOwnerInfoData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeGetOwnerInfo)) as InvokeReadInput)\r\n        var stack0:any = nnsOwnerInfoData.stack[0].value;\r\n        //console.log(JSON.stringify(nnsOwnerInfoData,null,2))\r\n        var nnsOwnerInfo:OwnerInfo = {\r\n            owner:stack0[0].value,\r\n            register:stack0[1].value,\r\n            resolver:stack0[2].value,\r\n            TTL:stack0[3].value,\r\n            parentOwner:stack0[4].value,\r\n            domain:stack0[5].value,\r\n            parenthash:stack0[6].value,\r\n            root:stack0[7].value,\r\n        }\r\n        nnsOwnerInfo.domain = NeoHelper.hex2a(nnsOwnerInfo.domain)\r\n        nnsOwnerInfo.TTL = NeoHelper.hex2TimeStr(nnsOwnerInfo.TTL)\r\n        if(nnsOwnerInfo.owner != '') nnsOwnerInfo.owner = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.byte2Hex(NeoHelper.hex2Byte(nnsOwnerInfo.owner).reverse()))\r\n        this.setState({\r\n            resData: JSON.stringify(nnsOwnerInfo, null, 2)                                 \r\n        });\r\n\r\n        //this.invokeRead(JSON.stringify(invokeRead3))\r\n    }\r\n\r\n    // handelChange(e:any){\r\n    //     this.setState({\r\n    //         inputValue:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            {/* <Input id=\"NNSinput\" placeholder=\"输入要查询的NSS域名\" onChange={this.handelChange.bind(this)} defaultValue={this.state.inputValue}/> */}\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS所有者信息</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsCenter;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\n// interface IProps{\r\n//     title:string\r\n//     scriptHash:any\r\n// }\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nclass DivNnsResolver extends React.Component<any,any> {\r\n    // NNSh = new NNSHelper(this.props.store);\r\n    \r\n    state = {\r\n        resData : '{}'\r\n    }  \r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        let invokeRead_resolve =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_resolver,\r\n            \"operation\": \"resolve\",\r\n            \"arguments\": [\r\n                {\"type\":\"String\",\"value\":\"addr\"},\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns)}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // invokeRead_resolve.arguments[1].value = await this.NNSh.namehash(this.props.store.nns)\r\n\r\n        //console.log(this.invokeRead_resolve)\r\n        var resolverData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_resolve)) as InvokeReadInput)       \r\n        //console.log(resolverData);\r\n\r\n        this.setState({\r\n            resData:NeoHelper.hex2a(resolverData.stack[0].value)==''?'未映射':NeoHelper.hex2a(resolverData.stack[0].value)                                 \r\n        });\r\n    }\r\n\r\n    // handelChange(e:any){\r\n    //     this.setState({\r\n    //         inputValue:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            {/* <Input placeholder=\"输入要查询的NSS域名\" onChange={this.handelChange.bind(this)} defaultValue={this.state.inputValue}/> */}\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">解析NNS</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsResolver;","import React, { Component } from 'react';\r\nimport {autorun} from 'mobx'\r\nimport {Button,Input,Spin,Statistic, Row, Col, Icon,Timeline,Drawer,Switch,InputNumber,Divider} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\nimport ReactDOM from 'react-dom';\r\n\r\ninterface AuctionState\r\n{\r\n    id:string; //拍卖id,就是拍卖生成的auctionid\r\n    auctionStarter:string;//域名开拍的人\r\n    parenthash:string ;//拍卖内容\r\n    domain:string ;//拍卖内容\r\n    domainTTL:string ;//域名的TTL,用这个信息来判断域名是否发生了变化\r\n    startBlockSelling:number ;//开始销售块\r\n    endBlock:number ;//结束块\r\n    maxPrice:number ;//最高出价\r\n    maxBuyer:string ;//最大出价者\r\n    lastBlock:number ;//最后出价块\r\n}\r\n\r\ninterface NNScredit\r\n{\r\n    namehash:string\r\n    fullDomainName:string \r\n    TTL:string\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nclass DivAuction extends React.Component<any,any> {\r\n    //NNSh = new NNSHelper(this.props.store);\r\n    //NEOh = new NeoHelper(this.props.store);\r\n    nnsInput:any\r\n    constructor(props:any){\r\n        super(props)\r\n        this.nnsInput = React.createRef();\r\n    }  \r\n\r\n    state = {\r\n        resDataRead : '{}',\r\n        reqDataWrite : '{}',\r\n        resDataWrite : '{}',\r\n        inputAmount: 0,\r\n        loadingR : true,\r\n        loadingW : false,\r\n        CGASBalance:0,\r\n        auctionBalance:0,\r\n        bidBalance:0,\r\n        auctionDay:0,\r\n        auctionStateInfo:{\r\n            \"id\": \"\",\r\n            \"auctionStarter\": \"\",\r\n            \"parenthash\": \"\",\r\n            \"domain\": \"\",\r\n            \"domainTTL\": \"\",\r\n            \"startBlockSelling\": 0,\r\n            \"endBlock\": \"\",\r\n            \"maxPrice\": \"\",\r\n            \"maxBuyer\": \"\",\r\n            \"lastBlock\": \"\"\r\n          },\r\n        CGASopValue:0,\r\n        drawerVisible: false\r\n    }  \r\n\r\n    intervalID:any\r\n    componentDidMount(){\r\n\r\n        this.intervalID = setInterval(async ()=>{\r\n            this.setState({\r\n                auctionDay :await this.calcAuctionDay(this.state.auctionStateInfo.startBlockSelling)\r\n            })           \r\n        },1000)\r\n\r\n        this.getInvokeRead_getBanlance()\r\n\r\n        // console.log(\"teemoReady:\" ,this.props.teemoReady)\r\n        // if(this.props.teemoReady)\r\n        // {\r\n        //     console.log(1)\r\n        //     this.getInvokeRead_getBanlance()\r\n        // }\r\n        // else{\r\n        //     console.log(0)\r\n        //     var intervalID = setInterval(()=>{\r\n        //         console.log(\"teemoReady:\" ,this.props.teemoReady)\r\n        //         if(this.props.teemoReady)\r\n        //         {\r\n        //             setTimeout(()=>{this.getInvokeRead_getBanlance()},1000)                   \r\n        //             clearInterval(intervalID)\r\n        //         }               \r\n        //     },1000) \r\n        // }      \r\n\r\n        window.addEventListener (\"newBlockEvent\", this.doOnEvent, false)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"newBlockEvent\", this.doOnEvent, false);\r\n        clearInterval(this.intervalID)\r\n    }\r\n\r\n    doOnEvent = (e:any) =>{\r\n        console.log('newBlockEvent',e)\r\n        if(e.detail.txidIndex > -1){\r\n            this.getInvokeRead_getBanlance()\r\n        }   \r\n    }\r\n\r\n    calcAuctionDay =async (blockIndex:number) =>{\r\n        var startTimeS = (await new NeoHelper(this.props.store).getBlock(blockIndex)).result.time as number\r\n        return  (new Date().getTime()/1000 - startTimeS)/ 60 / this.props.store.auctionMinPerDay  //每天分钟数\r\n    }\r\n\r\n    getInvokeRead_getBanlance = async () =>{\r\n        let invokeRead_CGAS_getBanlance =  {\r\n            \"scriptHash\": this.props.store.scriptHash.NEP_5_CGAS,\r\n            \"operation\": \"balanceOf\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n        let invokeRead_auction_getBanlance =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"balanceOf\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }       \r\n        let invokeRead_auction_getAuctionState =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"getAuctionStateByFullhash\",\r\n            \"arguments\": [\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns)}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }        \r\n        let invokeRead_auction_getBalanceOfBid =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"balanceOfBid\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":\"\"}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // invokeRead_CGAS_getBanlance.arguments[0].value =  this.props.store.address//await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        // this.invokeRead_auction_getBanlance.arguments[0].value =  this.props.store.address\r\n\r\n        //this.invokeRead_auction_getAuctionState.arguments[0].value = await new NNSHelper(this.props.store).namehash(this.props.store.nns)\r\n\r\n        //console.log(invokeRead_resolve)\r\n        var InvokeReadGroupInput = {group:[{}]}\r\n        InvokeReadGroupInput.group.pop()\r\n        InvokeReadGroupInput.group.push(invokeRead_CGAS_getBanlance)\r\n        InvokeReadGroupInput.group.push(invokeRead_auction_getBanlance)\r\n        InvokeReadGroupInput.group.push(invokeRead_auction_getAuctionState)\r\n        \r\n        // console.log(JSON.stringify(InvokeReadGroupInput,null,2));\r\n        \r\n        var resData:InvokeScriptResp = await Teemo.NEO.invokeReadGroup(JSON.parse(JSON.stringify(InvokeReadGroupInput)) as InvokeReadGroup)       \r\n        //console.log(resData.stack[3].value);\r\n        //console.log(resData)\r\n\r\n        if(resData.stack[0] != null){\r\n            //console.log('stack',resData.stack)\r\n            var stack2:any = resData.stack[2].value;\r\n            //console.log('stack2',stack2)\r\n\r\n            var AuctionStateInfo:AuctionState = {\r\n                id:stack2[0].value, //拍卖id,就是拍卖生成的auctionid\r\n                auctionStarter:stack2[1].value,//域名开拍的人\r\n                parenthash:stack2[2].value,//拍卖内容\r\n                domain:stack2[3].value,//拍卖内容\r\n                domainTTL:stack2[4].value,//域名的TTL,用这个信息来判断域名是否发生了变化\r\n                startBlockSelling:stack2[5].value,//开始销售块\r\n                endBlock:stack2[6].value,//结束块\r\n                maxPrice:stack2[7].value,//最高出价\r\n                maxBuyer:stack2[8].value,//最大出价者\r\n                lastBlock:stack2[9].value//最后出价块\r\n            }\r\n            AuctionStateInfo.auctionStarter = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.hexReverse(AuctionStateInfo.auctionStarter))\r\n            AuctionStateInfo.domain = NeoHelper.hex2a(AuctionStateInfo.domain)\r\n            AuctionStateInfo.domainTTL = NeoHelper.hex2TimeStr(AuctionStateInfo.domainTTL)\r\n            AuctionStateInfo.maxPrice = AuctionStateInfo.maxPrice/10**8\r\n            if(AuctionStateInfo.maxBuyer != ''){\r\n                AuctionStateInfo.maxBuyer = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.hexReverse(AuctionStateInfo.maxBuyer))\r\n            }      \r\n\r\n            //---第二轮invokescript\r\n\r\n            // this.invokeRead_auction_getBalanceOfBid.arguments[0].value = this.props.store.address\r\n            invokeRead_auction_getBalanceOfBid.arguments[1].value = AuctionStateInfo.id\r\n\r\n            var resData2:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_auction_getBalanceOfBid)) as InvokeArgs)\r\n\r\n            //console.log('AuctionStateInfo',AuctionStateInfo)\r\n\r\n            //var CGAS_balacnce = resData.stack[0].value\r\n            //console.log(NeoHelper.hex2Int(CGAS_balacnce)/10**8)\r\n\r\n            this.setState({\r\n                CGASBalance:NeoHelper.hex2Int(resData.stack[0].value)/10**8,\r\n                auctionBalance:NeoHelper.hex2Int(resData.stack[1].value)/10**8,\r\n                bidBalance:NeoHelper.hex2Int(resData2.stack[0].value)/10**8,\r\n                auctionStateInfo:AuctionStateInfo,\r\n                auctionDay:await this.calcAuctionDay(AuctionStateInfo.startBlockSelling),\r\n                resDataRead:JSON.stringify(AuctionStateInfo,null,2),\r\n                loadingR:false\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                resDataRead:\"查询异常\",\r\n                loadingR:false\r\n            })\r\n        }\r\n\r\n        \r\n\r\n        //console.log(this.state.auctionStateInfo)\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        this.getInvokeRead_getBanlance()\r\n    }\r\n\r\n    butInvoke_doCGASin_click = async () =>{\r\n        let invoke_CGAS_doCGASinStep0 =  {\r\n            \"scriptHash\": this.props.store.scriptHash.NEP_5_CGAS,\r\n            \"operation\": \"transfer\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"Address\",\"value\":await Teemo.NEO.getAddressFromScriptHash(this.props.store.scriptHash.nns_auction)},\r\n                {\"type\":\"Integer\",\"value\":this.state.CGASopValue * (10**8)}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍充值CGAS转账\",\r\n            \"network\": this.props.store.network\r\n        }\r\n        let invoke_auction_doCGASinStep1 =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"setmoneyin\",\r\n            \"arguments\": [\r\n                {\"type\":\"Hook_Txid\",\"value\":0}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍充值确认\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_CGAS_doCGASinStep0.arguments[0].value = this.props.store.address\r\n        // this.invoke_CGAS_doCGASinStep0.arguments[1].value = await Teemo.NEO.getAddressFromScriptHash(this.props.store.scriptHash.nns_auction)\r\n        // this.invoke_CGAS_doCGASinStep0.arguments[2].value = this.state.CGASopValue * (10**8)\r\n\r\n        //console.log(invoke_CGAS_doCGASinStep0)\r\n\r\n        var InvokeGroupInput = {merge:true,group:[{}]}\r\n        InvokeGroupInput.group.pop()\r\n        InvokeGroupInput.group.push(invoke_CGAS_doCGASinStep0)\r\n        InvokeGroupInput.group.push(invoke_auction_doCGASinStep1)\r\n\r\n        //console.log(InvokeGroupInput)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invokeGroup(JSON.parse(JSON.stringify(InvokeGroupInput)) as InvokeGroup)\r\n\r\n        //console.log(resp)\r\n\r\n        resp.forEach(res => {\r\n            this.props.store.addTxidSended(res.txid)\r\n        });\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(InvokeGroupInput,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doCGASout_click = async () =>{\r\n        let invoke_auction_doCGASout =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"getmoneyback\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"Integer\",\"value\":this.state.CGASopValue * (10**8)}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍CGAS提取\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doCGASout.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doCGASout.arguments[1].value = this.state.CGASopValue * (10**8)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doCGASout)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doCGASout,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doStartAuction_click = async () =>{\r\n        let invoke_auction_doStartAuction =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"startAuction\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])},\r\n                {\"type\":\"String\",\"value\":this.props.store.nns.split('.')[0]}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍开标\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doStartAuction.arguments[0].value = this.props.store.address;\r\n        // this.invoke_auction_doStartAuction.arguments[1].value = await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])\r\n        // this.invoke_auction_doStartAuction.arguments[2].value = this.props.store.nns.split('.')[0]\r\n\r\n        //console.log(invoke_auction_doStartAuction)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doStartAuction)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doStartAuction,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doBid_click = async() =>{\r\n        let invoke_auction_doBid =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"raise\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":this.state.auctionStateInfo.id},\r\n                {\"type\":\"Integer\",\"value\":(this.state.inputAmount*(10**8)).toString()}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍加价\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doBid.arguments[0].value = this.props.store.address;\r\n        // this.invoke_auction_doBid.arguments[1].value = this.state.auctionStateInfo.id\r\n        // this.invoke_auction_doBid.arguments[2].value = (this.state.inputAmount*(10**8)).toString()\r\n\r\n        console.log(invoke_auction_doBid)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doBid)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doBid,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        })\r\n    }\r\n\r\n    butInvoke_doBidSettlementAndCollect_click = async() =>{\r\n        let invoke_auction_doBidSettlement =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"bidSettlement\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":this.state.auctionStateInfo.id}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍域名领取\",\r\n            \"network\": this.props.store.network\r\n        }        \r\n        let invoke_auction_doCollect =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"collectDomain\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":this.state.auctionStateInfo.id}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍域名领取\",\r\n            \"network\": this.props.store.network\r\n        }\r\n        // this.invoke_auction_doBidSettlement.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doBidSettlement.arguments[1].value = this.state.auctionStateInfo.id\r\n\r\n        // this.invoke_auction_doCollect.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doCollect.arguments[1].value = this.state.auctionStateInfo.id\r\n\r\n        var InvokeGroupInput = {merge:false,group:[{}]}\r\n        InvokeGroupInput.group.pop()\r\n        InvokeGroupInput.group.push(invoke_auction_doBidSettlement)\r\n        InvokeGroupInput.group.push(invoke_auction_doCollect)\r\n\r\n        //console.log(JSON.stringify(InvokeGroupInput,null,2))\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invokeGroup(JSON.parse(JSON.stringify(InvokeGroupInput)) as InvokeGroup)\r\n\r\n        //console.log(resp)\r\n        resp.forEach(res => {\r\n            this.props.store.addTxidSended(res.txid)\r\n        });\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(InvokeGroupInput,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doRenew_click = async() =>{\r\n        let invoke_auction_doRenew =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"renewDomain\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])},\r\n                {\"type\":\"String\",\"value\":this.props.store.nns.split('.')[0]}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS域名续期\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doRenew.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doRenew.arguments[1].value = await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])\r\n        // this.invoke_auction_doRenew.arguments[2].value = this.props.store.nns.split('.')[0]\r\n\r\n        console.log(invoke_auction_doRenew)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doRenew)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doRenew,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        })\r\n    }\r\n\r\n    CGASopChange(e:any){\r\n        this.setState({\r\n            CGASopValue:e.target.value\r\n        })\r\n    }\r\n\r\n    // addrChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueAddr:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // nnsChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueNns:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    amountChange(e:any){\r\n        this.setState({\r\n            inputAmount:e\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            <Switch checked={this.props.store.auctionMinPerDay == 5?true:false} checkedChildren=\"*.test\" unCheckedChildren=\"*.neo\" defaultChecked onChange={async (e)=>{\r\n                    console.log(e)\r\n                    if(e) \r\n                    {\r\n                        this.props.store.updateAuctionMinPerDay(5)\r\n                        var newNns = this.props.store.nns.replace('.neo','.test')\r\n                        this.props.store.updateNNS(newNns);\r\n                        // console.log(this.nnsInput.current)\r\n                        this.nnsInput.current.state.value = newNns\r\n                    }\r\n                    else {\r\n                        this.props.store.updateAuctionMinPerDay(1440)\r\n                        var newNns = this.props.store.nns.replace('.test','.neo')\r\n                        this.props.store.updateNNS(newNns);\r\n                        this.nnsInput.current.state.value = newNns\r\n                    }\r\n\r\n                    this.setState({\r\n                        CGASBalance:0,\r\n                        auctionBalance:0,\r\n                        bidBalance:0,\r\n                        auctionStateInfo:{\r\n                            \"id\": \"\",\r\n                            \"auctionStarter\": \"\",\r\n                            \"parenthash\": \"\",\r\n                            \"domain\": \"\",\r\n                            \"domainTTL\": \"\",\r\n                            \"startBlockSelling\": 0,\r\n                            \"endBlock\": \"\",\r\n                            \"maxPrice\": \"\",\r\n                            \"maxBuyer\": \"\",\r\n                            \"lastBlock\": \"\"\r\n                          },\r\n                        auctionDay:await this.calcAuctionDay(0),\r\n                        resDataRead:\"{}\"\r\n                    })\r\n                    this.getInvokeRead_getBanlance()                 \r\n                }} />选择根域(流速{this.props.store.auctionMinPerDay}分钟每天)\r\n            <Divider /> \r\n            <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                        <Statistic title=\"钱包账户\" value={this.state.CGASBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Spin>                  \r\n                </Col>\r\n                <Col span={8}>\r\n                    <Row gutter={16}>\r\n                        <Col span={8}>\r\n                            <Button onClick={this.butInvoke_doCGASout_click} ><Icon type=\"left\" />提取</Button>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Input placeholder=\"输入金额\" onChange={this.CGASopChange.bind(this)} defaultValue={this.state.CGASopValue.toString()} />   \r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Button onClick={this.butInvoke_doCGASin_click} >充值<Icon type=\"right\" /></Button>\r\n                        </Col>\r\n                    </Row>                                                     \r\n                </Col>\r\n                <Col span={8}>\r\n                    <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                    <Statistic title=\"合约账户\" value={this.state.auctionBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Spin>                  \r\n                </Col>\r\n            </Row>\r\n            {/* <Input placeholder=\"输入要查询的地址\" onChange={this.addrChange.bind(this)} defaultValue={this.props.store.address}/> */}\r\n            {/* <Input placeholder=\"输入要绑定的NNS\" onChange={this.nnsChange.bind(this)} defaultValue={this.props.store.nns}/> */}\r\n            <Input placeholder=\"输入地址\" onChange={(e)=>{this.props.store.updateAddress(e.target.value)}} defaultValue={this.props.store.address}/>\r\n            <Input ref={this.nnsInput} placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">刷新数据</Button>\r\n            <Divider type=\"vertical\" />\r\n            <Button onClick={this.butInvoke_doStartAuction_click}>开标</Button>           \r\n            <Divider type=\"vertical\" />\r\n            <InputNumber min={0} max={this.state.auctionBalance} step={0.1} onChange={this.amountChange.bind(this)} />=>\r\n            <Button onClick={this.butInvoke_doBid_click}>加价</Button> \r\n            <Divider type=\"vertical\" /> \r\n            <Button onClick={this.butInvoke_doBidSettlementAndCollect_click}>结算与领取</Button>\r\n            <Divider type=\"vertical\" /> \r\n            <Button onClick={this.butInvoke_doRenew_click} disabled={this.state.auctionDay>(365-90)?false:true}>续期{(this.state.auctionDay-(365-90)).toFixed(2)}</Button>             \r\n            <Divider />         \r\n            <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                <Row type=\"flex\" align=\"middle\" gutter={16}>\r\n                    <Col span={3}>\r\n                        <Statistic title=\"开拍天数\" value={this.state.auctionDay.toFixed(2)} suffix=\"天\" prefix={<Icon type=\"clock-circle\" />} />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Switch checked={this.state.drawerVisible} onChange={()=>{this.setState({drawerVisible: !this.state.drawerVisible})}} />显示时间轴  \r\n                    </Col>\r\n                    <Col span={13}>\r\n                        <Statistic title=\"加价总数\" value={this.state.bidBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Col>\r\n                </Row>                                             \r\n                \r\n                {/* <Button type=\"primary\" onClick={()=>{this.setState({drawerVisible: true})}}>查看竞拍阶段</Button> */}\r\n                <Drawer\r\n                    title=\"竞拍阶段\"\r\n                    placement=\"left\"\r\n                    closable={false}\r\n                    onClose={()=>{this.setState({drawerVisible: false})}}\r\n                    visible={this.state.drawerVisible}\r\n                    >\r\n                        <Timeline>\r\n                            <Timeline.Item color={this.state.auctionDay>0?'green':'blue'}>确定期（1-2）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>2?'green':'blue'}>确定期（3）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>3?'green':'blue'}>随机期（4-5）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>5?'green':'blue'}>竞拍结束（5）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>(365-90)?'green':'blue'}>续期期（365-90）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>365?'green':'blue'}>到期（365）</Timeline.Item>\r\n                        </Timeline>\r\n                    </Drawer>\r\n                <pre>{this.state.resDataRead}</pre>\r\n            </Spin>\r\n            {/* <pre>{this.state.reqDataWrite}</pre> */}\r\n            <Spin tip='请求中' spinning={this.state.loadingW}>\r\n                <pre>{this.state.resDataWrite}</pre>\r\n            </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivAuction;","import React, { Component } from 'react';\r\nimport {autorun} from 'mobx'\r\nimport {Button,Input,Spin} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface NNScredit\r\n{\r\n    namehash:string\r\n    fullDomainName:string \r\n    TTL:string\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nclass DivNnsCredit extends React.Component<any,any> {\r\n    state = {\r\n        resDataRead : '{}',\r\n        reqDataWrite : '{}',\r\n        resDataWrite : '{}',\r\n        loadingR : false,\r\n        loadingW : false\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener (\"newBlockEvent\", this.doOnEvent, false)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"newBlockEvent\", this.doOnEvent, false);\r\n    }\r\n\r\n    doOnEvent = (e:any) =>{\r\n        console.log('newBlockEvent',e)\r\n        if(e.detail.txidIndex > -1){\r\n            this.getInvokeRead()\r\n        }  \r\n    }\r\n\r\n    getInvokeRead = async () =>{\r\n        let invokeRead_credit =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_credit,\r\n            \"operation\": \"getCreditInfo\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":\"\"}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        invokeRead_credit.arguments[0].value =  this.props.store.address//await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        console.log(JSON.stringify(invokeRead_credit,null,2))\r\n        var creditData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_credit)) as InvokeReadInput)       \r\n        //console.log(creditData);\r\n\r\n        if(creditData.stack[0] != null){\r\n            var stack0:any = creditData.stack[0].value;\r\n            var creditInfo:NNScredit = {\r\n                namehash:stack0[0].value,\r\n                fullDomainName:stack0[1].value,\r\n                TTL:stack0[2].value,\r\n            }\r\n            creditInfo.fullDomainName = NeoHelper.hex2a(creditInfo.fullDomainName)\r\n            creditInfo.TTL = NeoHelper.hex2TimeStr(creditInfo.TTL)\r\n    \r\n            this.setState({\r\n                resDataRead:JSON.stringify(creditInfo, null, 2),\r\n                loadingR:false                                 \r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                resDataRead:\"从未映射\",\r\n                loadingR:false                                 \r\n            });\r\n        }\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        this.getInvokeRead()\r\n    }\r\n\r\n    butInvokeCreditAuthenticateClick = async(e:any) => {\r\n        let invoke_credit_authenticate =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_credit,\r\n            \"operation\": \"authenticate\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":\"\"},\r\n                {\"type\":\"Array\",\"value\":[]}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS反向解析绑定\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        invoke_credit_authenticate.arguments[0].value = this.props.store.address\r\n        invoke_credit_authenticate.arguments[1].value = []\r\n        for (const str of this.props.store.nns.split('.').reverse()) {\r\n            ((invoke_credit_authenticate.arguments as Argument[])[1].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditAuthenticateResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_authenticate)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditAuthenticateResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_authenticate,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditAuthenticateResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvokeCreditRevokeClick = async(e:any) => {\r\n        let invoke_credit_revoke =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_credit,\r\n            \"operation\": \"revoke\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":\"\"},\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS反向解析解绑\",\r\n            \"network\": this.props.store.network\r\n        }  \r\n\r\n        invoke_credit_revoke.arguments[0].value = this.props.store.address\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditRevokeResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_revoke)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditRevokeResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_revoke,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditRevokeResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                                                                 \r\n        });\r\n    }\r\n\r\n    // addrChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueAddr:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // nnsChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueNns:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            {/* <Input placeholder=\"输入要查询的地址\" onChange={this.addrChange.bind(this)} defaultValue={this.state.inputValueAddr}/>\r\n            <Input placeholder=\"输入要绑定的NNS\" onChange={this.nnsChange.bind(this)} defaultValue={this.state.inputValueNns}/> */}\r\n            <Input placeholder=\"输入地址\" onChange={(e)=>{this.props.store.updateAddress(e.target.value)}} defaultValue={this.props.store.address}/>\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS反向解析信息</Button>\r\n            <Button onClick={this.butInvokeCreditAuthenticateClick}>绑定</Button>\r\n            <Button onClick={this.butInvokeCreditRevokeClick}>解绑</Button>\r\n            <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                <pre>{this.state.resDataRead}</pre>\r\n            </Spin>\r\n            {/* <pre>{this.state.reqDataWrite}</pre> */}\r\n            <Spin tip='请求中' spinning={this.state.loadingW}>\r\n                <pre>{this.state.resDataWrite}</pre>\r\n            </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsCredit;","import React, { Component } from 'react';\nimport './App.css';\nimport { createStore } from 'redux'\nimport { Layout, Menu, Icon, notification, Input,Spin } from 'antd';\nimport { any } from 'prop-types';\n\nimport Store from './store';\nimport DivDefault from './components/divDefault';\nimport DivNnsCenter from './components/divNnsCenter';\nimport DivNnsResolver from './components/divNnsResolver';\nimport DivAuction from './components/divAuction';\nimport DivNnsCredit from './components/divNnsCredit';\nimport MobxTest from './components/mobxTest';\nimport { updateLocale } from 'moment';\n\nimport { observable ,autorun} from \"mobx\";\nimport { Socket } from 'dgram';\nimport Title from 'antd/lib/typography/Title';\n\nconst {\n  Header, Content, Footer, Sider,\n} = Layout;\n\n// const webSocketURL = 'ws://47.99.35.147:82/ws/testnet'\n\nlet div_defult = () =>{\n  return <p>div_defult</p>\n}\n\n// let time = new Date().getTime()\n\nconst store = new Store();\n\nclass App extends Component {\n  state = {\n    menuID: 1\n  }\n\n  menuClick = (e:any) => {\n    console.log('menu Click', e);\n    this.setState({\n      menuID: e.key\n    });\n  } \n  \n  render() {\n    let div_main = null;\n    if (this.state.menuID == 1) {\n      div_main = <DivDefault store={store} title=\"default Page\" />\n    } \n    else if (this.state.menuID == 2) {\n      div_main = <DivNnsCenter store={store} title=\"NNS Domain Center\" />\n    }\n    else if (this.state.menuID == 3) {\n      div_main = <DivNnsResolver store={store} title=\"NNS Resolver\" />\n    }\n    else if (this.state.menuID == 4) {\n      div_main = <DivAuction store={store} title=\"NNS Auction\" />\n    }\n    else if (this.state.menuID == 5) {\n      div_main = <DivNnsCredit store={store} title=\"NNS Credit\" />\n    }\n    else {\n      div_main = div_defult()\n    }\n\n    return (\n      <Layout>\n        <Sider\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          onBreakpoint={(broken) => { console.log(broken); }}\n          onCollapse={(collapsed, type) => { console.log(collapsed, type); }}\n        >\n          <div className=\"logo\" />\n          <Menu onClick={this.menuClick}  theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">Default Page</span>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS Center</span>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS resolver</span>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS Auction</span>\n            </Menu.Item>\n            <Menu.Item key=\"5\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS Credit</span>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <h1>--- NNS Teemo Demo ---</h1>\n          </Header>\n          <Content style={{ margin: '24px 16px 0' }}>\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                {div_main}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>\n            NNS ©2019 Created by NEL\n          </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n        <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}