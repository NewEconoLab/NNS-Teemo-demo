{"version":3,"sources":["store.ts","Tools/neoHelper.tsx","Tools/nnsHelper.tsx","components/divDefault.tsx","components/divNnsCenter.tsx","components/divNnsResolver.tsx","components/divAuction.tsx","components/divNnsCredit.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Store","webSocketURL","_this","this","Object","classCallCheck","updateLastWSmsgSec","lastWSmsgSec","Date","getTime","lastWSmsgTime","socketInit","socketReadyState","socket","readyState","time","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","pushEvent","eventName","eventData","event","CustomEvent","detail","window","dispatchEvent","getDelay","parseInt","toFixed","_descriptor9","setInterval","observable","blockHeight","blockTime","blockHash","timeDiff","action","txid","_this2","txids","unshift","_this3","blockDatas","WebSocket","onclose","console","log","notification","warning","message","description","onerror","error","onopen","send","success","onmessage","data","socketMsgs","JSON","parse","txidIndex","length","tx","findIndex","element","info","blockInsertTime","svrSystemTime","blockHeightDataArray","shift","pop","blockData","lastBlockTime","NeoHelper","getAddressFromScriptHash","getBlock","_callee","blockIndex","result","regenerator_default","a","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","hex2a","hexx","hex","toString","str","i","substr","String","fromCharCode","hex2Int","byte2Hex","hex2Byte","reverse","hex2TimeStr","timetrans","hexReverse","uint8arr","hexStr","toLowerCase","Uint8Array","len","push","timestamp","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","sec2HMS","sec","h","m","s","invokeRead_nameHashArray","scriptHash","operation","arguments","type","value","network","NNSHelper","namehash","_ref","asyncToGenerator","mark","nns","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","invokeResp","undefined","split","Symbol","iterator","done","t0","return","finish","Teemo","NEO","invokeRead","stringify","stack","_x","apply","nns_domaincenter","DivDefault","observer","NNSh","props","state","resData","react_default","createElement","Fragment","title","address","className","spin","store","list","bordered","dataSource","pagination","onChange","page","pageSize","renderItem","item","Item","key","id","Meta","avatar","src","React","Component","invokeGetOwnerInfo","DivNnsCenter","inputValue","butGetInvokeReadClick","e","nnsOwnerInfoData","stack0","nnsOwnerInfo","owner","register","resolver","TTL","parentOwner","domain","parenthash","root","setState","target","input","placeholder","handelChange","bind","defaultValue","es_button","onClick","invokeRead_resolve","DivNnsResolver","resolverData","nns_resolver","invokeRead_CGAS_getBanlance","invokeRead_auction_getBanlance","invokeRead_auction_getAuctionState","invokeRead_auction_getBalanceOfBid","invoke_CGAS_doCGASinStep0","fee","invoke_auction_doCGASinStep1","invoke_auction_doCGASout","invoke_auction_doStartAuction","invoke_auction_doBid","invoke_auction_doBidSettlement","invoke_auction_doCollect","invoke_auction_doRenew","invoke_credit_authenticate","invoke_credit_revoke","DivAuction","resDataRead","reqDataWrite","resDataWrite","inputValueAddr","inputValueNns","inputAmount","loadingR","loadingW","CGASBalance","auctionBalance","bidBalance","auctionDay","auctionStateInfo","auctionStarter","domainTTL","startBlockSelling","endBlock","maxPrice","maxBuyer","lastBlock","CGASopValue","drawerVisible","intervalID","doOnEvent","getInvokeRead_getBanlance","calcAuctionDay","startTimeS","_callee2","InvokeReadGroupInput","stack2","AuctionStateInfo","_context2","group","invokeReadGroup","Math","pow","t1","t2","t3","t4","t5","t6","t7","call","_callee3","_context3","butInvoke_doCGASin_click","_callee4","InvokeGroupInput","resp","_context4","nns_auction","merge","invokeGroup","forEach","res","addTxidSended","butInvoke_doCGASout_click","_callee5","_context5","invoke","butInvoke_doStartAuction_click","_callee6","_context6","butInvoke_doBid_click","_callee7","_context7","butInvoke_doBidSettlementAndCollect_click","_callee8","_context8","butInvoke_doRenew_click","_callee9","_context9","butInvokeCreditAuthenticateClick","_callee10","invokeCreditAuthenticateResp","_context10","butInvokeCreditRevokeClick","_callee11","invokeCreditRevokeResp","_context11","NEP_5_CGAS","_callee12","_context12","teemoReady","setTimeout","clearInterval","addEventListener","removeEventListener","row","gutter","col","span","tip","spinning","statistic","suffix","prefix","icon","CGASopChange","addrChange","nnsChange","divider","input_number","min","max","step","amountChange","disabled","align","es_switch","checked","drawer","placement","closable","onClose","visible","timeline","color","invokeRead_credit","DivNnsCredit","getInvokeRead","creditData","creditInfo","fullDomainName","nns_credit","Header","Layout","Content","Footer","Sider","NEP_5_NNC","App","menuID","average","arr","nums","concat","toConsumableArray","reduce","acc","val","init","_ref2","getAccount","getNetworks","defaultNetwork","menuClick","div_main","divDefault","divNnsCenter","divNnsResolver","divAuction","divNnsCredit","layout","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","menu","theme","mode","defaultSelectedKeys","style","background","padding","margin","minHeight","textAlign","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15efb62e.chunk.js","sourcesContent":["import {observable, action, computed} from 'mobx';\r\nimport { notification } from 'antd';\r\nimport NeoHelper from './Tools/neoHelper';\r\n\r\nclass Store {\r\n    webSocketURL: string;\r\n    constructor(webSocketURL:string){\r\n        this.webSocketURL = webSocketURL\r\n        setInterval(this.updateLastWSmsgSec,1000)\r\n        this.socketInit()\r\n    }\r\n\r\n    updateLastWSmsgSec = () =>{     \r\n        this.lastWSmsgSec=(new Date().getTime() - this.lastWSmsgTime)/1000\r\n\r\n        //webstock 如果2分钟取不到最新块，会发送心跳数据包\r\n        if(this.lastWSmsgSec>75){\r\n            \r\n            this.lastWSmsgTime=new Date().getTime(),\r\n            this.lastWSmsgSec=0\r\n\r\n            this.socketInit()\r\n        }\r\n\r\n        this.socketReadyState = this.socket.readyState\r\n    }\r\n\r\n    socket: any;\r\n    time = new Date().getTime()\r\n    @observable socketReadyState = -1\r\n    @observable socketMsgs:Array<any> = []\r\n    @observable blockDatas=[{\r\n        blockHeight:-1,\r\n        blockTime:0,\r\n        blockHash:'',\r\n        timeDiff:0\r\n      }]\r\n    @observable lastBlockTime=0\r\n    @observable lastWSmsgTime=new Date().getTime()\r\n    @observable lastWSmsgSec=0\r\n\r\n    // @computed get lastBlockTime(){\r\n    //     if(this.blockData.length >1){\r\n    //         return this.blockData[0].time\r\n    //     }\r\n    //     else return 0\r\n    // }\r\n    @observable txids:string[] = []\r\n    @action public addTxidSended =(txid:string) =>{\r\n        this.txids.unshift('0x' + txid)\r\n    }\r\n\r\n    pushEvent =(eventName:string,eventData:any) =>{\r\n        var event = new CustomEvent(eventName, { \r\n            detail: eventData\r\n        });\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    getDelay = (time:number) =>{\r\n        return parseInt((new Date().getTime()/1000 - time).toFixed(0)) + 's'\r\n    }\r\n\r\n    @action socketInit =() =>{\r\n        this.blockDatas=[{\r\n            blockHeight:-1,\r\n            blockTime:0,\r\n            blockHash:'',\r\n            timeDiff:0\r\n          }]\r\n\r\n        this.socket = new WebSocket(this.webSocketURL);\r\n    \r\n        this.socket.onclose = (event:any) => {\r\n            console.log(event);\r\n            notification.warning({message:'websocket',description:'close'})\r\n        };\r\n        this.socket.onerror = (event:any) => {\r\n            console.log(event);\r\n            notification.error({message:'websocket',description:'error'})\r\n        };\r\n        this.socket.onopen = (event:any) =>{\r\n            console.log(event);\r\n            this.socket.send('Hello Server!');\r\n            notification.success({message:'websocket',description:'open'})\r\n        }\r\n        this.socket.onmessage = (event:any) =>{\r\n            console.log(event);\r\n            console.log(event.data);\r\n\r\n            this.socketMsgs.unshift(event.data);\r\n\r\n            this.lastWSmsgTime = new Date().getTime()\r\n    \r\n            //let timeDiff = new Date().getTime() - this.time;\r\n            this.time = new Date().getTime()\r\n            //console.log(timeDiff.toString() + 'ms')\r\n            var data = JSON.parse(event.data).data\r\n            if(data.blockHeight != null){\r\n                var txidIndex = -1\r\n                if(this.txids.length>0){                  \r\n                    txidIndex = data.tx.findIndex((element:any)=>{\r\n                        return element.txid === this.txids[0]\r\n                    })\r\n                    //console.log({txid:this.txids[0]},data.tx,txidIndex)\r\n                }\r\n                notification.info({message:data.blockHeight,description:'delay: ' + this.getDelay(data.blockTime) + '/' + this.getDelay(data.blockInsertTime) + '/' + this.getDelay(data.svrSystemTime) + '||txidIndex:' + txidIndex})\r\n\r\n                var blockHeightDataArray = this.blockDatas\r\n\r\n                if(blockHeightDataArray[0].blockHeight == -1 ) blockHeightDataArray.shift()\r\n                if(blockHeightDataArray.length>=50) blockHeightDataArray.pop()\r\n\r\n                let timeDiff = 0\r\n                if(blockHeightDataArray.length > 0) timeDiff = (data.blockTime - blockHeightDataArray[0].blockTime)\r\n                let blockData = data // {height:data.blockHeight,time:data.blockTime,hash:data.blockHash,timeDiff:timeDiff}\r\n                blockData['timeDiff'] = timeDiff\r\n                blockData['txidIndex'] = txidIndex\r\n                blockHeightDataArray.unshift(blockData)\r\n                this.pushEvent('newBlockEvent',blockData)            \r\n        \r\n                this.blockDatas = blockHeightDataArray\r\n                this.lastBlockTime = data.blockTime\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Store","import { async } from \"q\";\r\n\r\nclass NeoHelper {\r\n    public static getAddressFromScriptHash = () =>{\r\n        //根据合约notify输出的scripthash，转换为NEO地址\r\n    }\r\n\r\n    public static getBlock = async (blockIndex:number) =>{\r\n      let result = await fetch('http://test.nel.group:20332?jsonrpc=2.0&method=getblock&params=[' + blockIndex +',1]&id=1', {\r\n        // method: 'post',\r\n        // headers: {\r\n        //   'user-agent': 'Mozilla/4.0 MDN Example',\r\n        //   'content-type': 'application/json'\r\n        // },\r\n        // body: JSON.stringify({\r\n        //   \"jsonrpc\": \"2.0\",\r\n        //   \"method\": \"getblock\",\r\n        //   \"params\": [blockIndex, 1],\r\n        //   \"id\": 1\r\n        // })\r\n      });\r\n      let data = await result.json();\r\n      return data;\r\n    }\r\n\r\n    public static hex2a = (hexx:string) => {\r\n        var hex = hexx.toString();//force conversion\r\n        var str = '';\r\n        for (var i = 0; (i < hex.length && hex.substr(i, 2) !== '00'); i += 2)\r\n            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\r\n        return str;\r\n    }\r\n\r\n    public static hex2Int = (hexx:string) =>{\r\n      if(hexx=='') return 0\r\n      return parseInt(NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse()), 16)\r\n    }\r\n\r\n    public static hex2TimeStr = (hexx:string) =>{\r\n      return NeoHelper.timetrans(parseInt(NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse()), 16))\r\n    }\r\n\r\n    public static hexReverse = (hexx:string)=>{\r\n      return NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse())\r\n    }\r\n\r\n    public static byte2Hex = (uint8arr:Uint8Array) => {\r\n        if (!uint8arr) {\r\n          return '';\r\n        }\r\n        \r\n        var hexStr = '';\r\n        for (var i = 0; i < uint8arr.length; i++) {\r\n          var hex = (uint8arr[i] & 0xff).toString(16);\r\n          hex = (hex.length === 1) ? '0' + hex : hex;\r\n          hexStr += hex;\r\n        }\r\n        \r\n        return hexStr.toLowerCase();\r\n    }\r\n\r\n    public static hex2Byte = (str:string) => {\r\n        if (!str) {\r\n          return new Uint8Array();\r\n        }\r\n        \r\n        var a = [];\r\n        for (var i = 0, len = str.length; i < len; i+=2) {\r\n          a.push(parseInt(str.substr(i,2),16));\r\n        }\r\n        \r\n        return new Uint8Array(a);\r\n    }\r\n\r\n    public static timetrans = (timestamp:number)=>{\r\n        var date = new Date(timestamp*1000);//如果date为13位不需要乘1000\r\n        var Y = date.getFullYear() + '-';\r\n        var M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';\r\n        var D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\r\n        var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\r\n        var m = (date.getMinutes() <10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\r\n        var s = (date.getSeconds() <10 ? '0' + date.getSeconds() : date.getSeconds());\r\n        return Y+M+D+h+m+s;\r\n    }\r\n\r\n    public static sec2HMS = (sec:number) =>{\r\n      let h=0\r\n      let m=0\r\n      let s=0\r\n      if((sec % 3600) > 0){\r\n        h = parseInt((sec/3600).toString())\r\n        sec = sec - h*3600\r\n      } \r\n      if((sec % 60) > 0){\r\n        m = parseInt((sec/60).toString())\r\n        sec = sec - m*60\r\n      }\r\n      s = sec\r\n\r\n      let mStr='00'\r\n      let sStr='00'\r\n      if(m <10) mStr = '0' + m \r\n        else mStr=m.toString()\r\n      if(s <10) sStr = '0' + s\r\n        else sStr = s.toString()\r\n\r\n      return h + ':' + mStr + ':' + sStr\r\n    }\r\n}\r\n\r\nexport default NeoHelper;","import { async } from \"q\";\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nlet invokeRead_nameHashArray = {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"nameHashArray\",\r\n    \"arguments\": [\r\n        {\"type\":\"Array\",\"value\":[]},\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\n\r\nclass NNSHelper {\r\n    constructor(scriptHash:any) {\r\n        invokeRead_nameHashArray.scriptHash = scriptHash.nns_domaincenter\r\n    }\r\n\r\n    public namehash = async (nns:string) => {\r\n        var namehash = \"\"\r\n\r\n        invokeRead_nameHashArray.arguments[0].value = [];\r\n        for (const str of nns.split('.').reverse()) {\r\n            ((invokeRead_nameHashArray.arguments as Argument[])[0].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n        //console.log(invokeRead_nameHashArray)\r\n        //console.log(JSON.stringify(invokeRead_nameHashArray))\r\n        var invokeResp:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_nameHashArray)) as InvokeReadInput)\r\n        //console.log(invokeResp)\r\n        namehash = invokeResp.stack[0].value\r\n\r\n        return namehash\r\n    }\r\n}\r\n\r\nexport default NNSHelper;","import {\r\n    List, message, Avatar, Spin,\r\n  } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface IProps{\r\n    title:string\r\n    address:string\r\n    network:string \r\n    scriptHash:any\r\n  }\r\n\r\n@observer\r\nclass DivDefault extends React.Component<any,any> {\r\n    NNSh = new NNSHelper(this.props.scriptHash);\r\n\r\n    state = {\r\n      resData : '{}'\r\n    }  \r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            <p>{this.props.address}</p>\r\n            <p>{this.props.network}</p>\r\n            {/* <p>block: {this.props.blockHeight}</p>\r\n            <p>notify: {this.props.notifyHeight}</p> */}\r\n            <pre>{JSON.stringify(this.props.scriptHash,null,2)}</pre>          \r\n        <div>\r\n          <div className=\"demo-loading-container\">\r\n            <Spin />\r\n            {/* <p>readyState: {this.props.store.socketReadyState}</p> */}\r\n            <p>LastWSmsg: {this.props.store.lastWSmsgSec}s</p>\r\n            <p>LastBlockTime: {NeoHelper.timetrans(this.props.store.lastBlockTime)}(before {NeoHelper.sec2HMS(parseInt((new Date().getTime()/1000 - this.props.store.lastBlockTime).toFixed(0)))})</p>\r\n          </div>\r\n          <List\r\n            bordered = {true}\r\n            dataSource={this.props.store.blockDatas}\r\n            pagination={{\r\n              onChange: (page) => {\r\n                console.log(page);\r\n              },\r\n              pageSize: 5,\r\n            }}\r\n            renderItem={(item: { id: number; blockHeight: number; timeDiff: number; blockTime:number; blockHash:string }) => (\r\n              <List.Item key={item.id}>\r\n                <List.Item.Meta\r\n                  avatar={<Avatar src=\"https://neo-cdn.azureedge.net/images/favicon.png\" />}\r\n                  title={item.blockHeight}\r\n                  description={item.blockHash}\r\n                />\r\n                <div>({item.timeDiff + 's'}){NeoHelper.timetrans(item.blockTime)}</div>\r\n              </List.Item>\r\n            )}\r\n          ></List>\r\n        </div>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivDefault;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface IProps{\r\n    title:string\r\n    scriptHash:any\r\n}\r\n\r\ninterface OwnerInfo\r\n{\r\n    owner:string//如果长度=0 表示没有初始化\r\n    register : string \r\n    resolver: string ;\r\n    TTL: string ;\r\n    parentOwner: string ;//当此域名注册时，他爹的所有者，记录这个，则可以检测域名的爹变了\r\n    domain: string ;//如果长度=0 表示没有初始化\r\n    parenthash: string ;\r\n    root: string ;//是不是根合约\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nlet invokeGetOwnerInfo =  {\r\n    \"scriptHash\": \"348387116c4a75e420663277d9c02049907128c7\",\r\n    \"operation\": \"getOwnerInfo\",\r\n    \"arguments\": [\r\n        {\"type\":\"ByteArray\",\"value\":\"\"},\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nclass DivNnsCenter extends React.Component<IProps,any> {\r\n    NNSh = new NNSHelper(this.props.scriptHash);\r\n\r\n    state = {\r\n        resData : '{}',\r\n        inputValue : 'qmz.test'\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        invokeGetOwnerInfo.arguments[0].value = await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        var nnsOwnerInfoData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeGetOwnerInfo)) as InvokeReadInput)\r\n        var stack0:any = nnsOwnerInfoData.stack[0].value;\r\n        console.log(nnsOwnerInfoData)\r\n        var nnsOwnerInfo:OwnerInfo = {\r\n            owner:stack0[0].value,\r\n            register:stack0[1].value,\r\n            resolver:stack0[2].value,\r\n            TTL:stack0[3].value,\r\n            parentOwner:stack0[4].value,\r\n            domain:stack0[5].value,\r\n            parenthash:stack0[6].value,\r\n            root:stack0[7].value,\r\n        }\r\n        nnsOwnerInfo.domain = NeoHelper.hex2a(nnsOwnerInfo.domain)\r\n        nnsOwnerInfo.TTL = NeoHelper.hex2TimeStr(nnsOwnerInfo.TTL)\r\n        nnsOwnerInfo.owner = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.byte2Hex(NeoHelper.hex2Byte(nnsOwnerInfo.owner).reverse()))\r\n        this.setState({\r\n            resData: JSON.stringify(nnsOwnerInfo, null, 2)                                 \r\n        });\r\n\r\n        //this.invokeRead(JSON.stringify(invokeRead3))\r\n    }\r\n\r\n    handelChange(e:any){\r\n        this.setState({\r\n            inputValue:e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            <Input id=\"NNSinput\" placeholder=\"输入要查询的NSS域名\" onChange={this.handelChange.bind(this)} defaultValue={this.state.inputValue}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS所有者信息</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsCenter;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface IProps{\r\n    title:string\r\n    scriptHash:any\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nlet invokeRead_resolve =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"resolve\",\r\n    \"arguments\": [\r\n        {\"type\":\"String\",\"value\":\"addr\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"}\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nclass DivNnsResolver extends React.Component<IProps,any> {\r\n    NNSh = new NNSHelper(this.props.scriptHash);\r\n\r\n    state = {\r\n        resData : '{}',\r\n        inputValue : 'qmz.test'\r\n    }  \r\n\r\n    componentDidMount(){\r\n        invokeRead_resolve.scriptHash = this.props.scriptHash.nns_resolver\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        invokeRead_resolve.arguments[1].value = await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        //console.log(invokeRead_resolve)\r\n        var resolverData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_resolve)) as InvokeReadInput)       \r\n        //console.log(resolverData);\r\n\r\n        this.setState({\r\n            resData:NeoHelper.hex2a(resolverData.stack[0].value)                                 \r\n        });\r\n    }\r\n\r\n    handelChange(e:any){\r\n        this.setState({\r\n            inputValue:e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            <Input placeholder=\"输入要查询的NSS域名\" onChange={this.handelChange.bind(this)} defaultValue={this.state.inputValue}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">解析NNS</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsResolver;","import React, { Component } from 'react';\r\nimport {autorun} from 'mobx'\r\nimport {Button,Input,Spin,Statistic, Row, Col, Icon,Timeline,Drawer,Switch,InputNumber,Divider} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface IProps{\r\n    title:string\r\n    address:string\r\n    teemoReady:boolean\r\n    scriptHash:any\r\n}\r\n\r\ninterface AuctionState\r\n{\r\n    id:string; //拍卖id,就是拍卖生成的auctionid\r\n    auctionStarter:string;//域名开拍的人\r\n    parenthash:string ;//拍卖内容\r\n    domain:string ;//拍卖内容\r\n    domainTTL:string ;//域名的TTL,用这个信息来判断域名是否发生了变化\r\n    startBlockSelling:number ;//开始销售块\r\n    endBlock:number ;//结束块\r\n    maxPrice:number ;//最高出价\r\n    maxBuyer:string ;//最大出价者\r\n    lastBlock:number ;//最后出价块\r\n}\r\n\r\ninterface NNScredit\r\n{\r\n    namehash:string\r\n    fullDomainName:string \r\n    TTL:string\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nlet invokeRead_CGAS_getBanlance =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"balanceOf\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"}\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invokeRead_auction_getBanlance =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"balanceOf\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"}\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invokeRead_auction_getAuctionState =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"getAuctionStateByFullhash\",\r\n    \"arguments\": [\r\n        {\"type\":\"ByteArray\",\"value\":\"\"}\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invokeRead_auction_getBalanceOfBid =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"balanceOfBid\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"}\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_CGAS_doCGASinStep0 =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"transfer\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"Integer\",\"value\":0}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS竞拍充值CGAS转账\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_auction_doCGASinStep1 =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"setmoneyin\",\r\n    \"arguments\": [\r\n        {\"type\":\"Hook_Txid\",\"value\":0}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS竞拍充值确认\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_auction_doCGASout =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"getmoneyback\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"Integer\",\"value\":0}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS竞拍CGAS提取\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_auction_doStartAuction =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"startAuction\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"},\r\n        {\"type\":\"String\",\"value\":\"\"}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS竞拍加价\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_auction_doBid =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"raise\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"},\r\n        {\"type\":\"Integer\",\"value\":0}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS竞拍开标\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_auction_doBidSettlement =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"bidSettlement\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS竞拍域名领取\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_auction_doCollect =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"collectDomain\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS竞拍域名领取\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_auction_doRenew =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"renewDomain\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"},\r\n        {\"type\":\"String\",\"value\":\"\"}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS域名续期\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_credit_authenticate =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"authenticate\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"Array\",\"value\":[]}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS反向解析绑定\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_credit_revoke =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"revoke\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS反向解析解绑\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nclass DivAuction extends React.Component<any,any> {\r\n    NNSh = new NNSHelper(this.props.scriptHash);\r\n\r\n    state = {\r\n        resDataRead : '{}',\r\n        reqDataWrite : '{}',\r\n        resDataWrite : '{}',\r\n        inputValueAddr : this.props.address,\r\n        inputValueNns : 'qmz.test',\r\n        inputAmount: 0,\r\n        loadingR : true,\r\n        loadingW : false,\r\n        CGASBalance:0,\r\n        auctionBalance:0,\r\n        bidBalance:0,\r\n        auctionDay:0,\r\n        auctionStateInfo:{\r\n            \"id\": \"\",\r\n            \"auctionStarter\": \"\",\r\n            \"parenthash\": \"\",\r\n            \"domain\": \"\",\r\n            \"domainTTL\": \"\",\r\n            \"startBlockSelling\": 0,\r\n            \"endBlock\": \"\",\r\n            \"maxPrice\": \"\",\r\n            \"maxBuyer\": \"\",\r\n            \"lastBlock\": \"\"\r\n          },\r\n        CGASopValue:0,\r\n        drawerVisible: false\r\n    }  \r\n\r\n    intervalID:any\r\n    componentDidMount(){\r\n        invokeRead_CGAS_getBanlance.scriptHash = this.props.scriptHash.NEP_5_CGAS\r\n        invokeRead_auction_getBanlance.scriptHash = this.props.scriptHash.nns_auction\r\n        invoke_CGAS_doCGASinStep0.scriptHash = this.props.scriptHash.NEP_5_CGAS\r\n        invoke_auction_doCGASinStep1.scriptHash = this.props.scriptHash.nns_auction\r\n        invoke_auction_doCGASout.scriptHash = this.props.scriptHash.nns_auction\r\n        invokeRead_auction_getAuctionState.scriptHash = this.props.scriptHash.nns_auction\r\n        invoke_auction_doStartAuction.scriptHash = this.props.scriptHash.nns_auction\r\n        invoke_auction_doBid.scriptHash = this.props.scriptHash.nns_auction\r\n        invokeRead_auction_getBalanceOfBid.scriptHash = this.props.scriptHash.nns_auction\r\n        invoke_auction_doBidSettlement.scriptHash = this.props.scriptHash.nns_auction\r\n        invoke_auction_doCollect.scriptHash = this.props.scriptHash.nns_auction\r\n        invoke_auction_doRenew.scriptHash = this.props.scriptHash.nns_auction\r\n\r\n        this.intervalID = setInterval(async ()=>{\r\n            this.setState({\r\n                auctionDay :await this.calcAuctionDay(this.state.auctionStateInfo.startBlockSelling)\r\n            })           \r\n        },1000)\r\n\r\n        console.log(\"teemoReady:\" ,this.props.teemoReady)\r\n        if(this.props.teemoReady)\r\n        {\r\n            console.log(1)\r\n            this.getInvokeRead_getBanlance()\r\n        }\r\n        else{\r\n            console.log(0)\r\n            var intervalID = setInterval(()=>{\r\n                console.log(\"teemoReady:\" ,this.props.teemoReady)\r\n                if(this.props.teemoReady)\r\n                {\r\n                    setTimeout(()=>{this.getInvokeRead_getBanlance()},1000)                   \r\n                    clearInterval(intervalID)\r\n                }               \r\n            },1000) \r\n        }      \r\n\r\n        window.addEventListener (\"newBlockEvent\", this.doOnEvent, false)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"newBlockEvent\", this.doOnEvent, false);\r\n        clearInterval(this.intervalID)\r\n    }\r\n\r\n    doOnEvent = (e:any) =>{\r\n        console.log('newBlockEvent',e)\r\n        if(e.detail.txidIndex > -1){\r\n            this.getInvokeRead_getBanlance()\r\n        }   \r\n    }\r\n\r\n    calcAuctionDay =async (blockIndex:number) =>{\r\n        var startTimeS = (await NeoHelper.getBlock(blockIndex)).result.time as number\r\n        return  (new Date().getTime()/1000 - startTimeS)/ 60 / 5  //5分钟1天\r\n    }\r\n\r\n    getInvokeRead_getBanlance = async () =>{\r\n        invokeRead_CGAS_getBanlance.arguments[0].value =  this.state.inputValueAddr//await this.NNSh.namehash(this.state.inputValue)\r\n        invokeRead_auction_getBanlance.arguments[0].value =  this.state.inputValueAddr\r\n        invokeRead_auction_getAuctionState.arguments[0].value = await this.NNSh.namehash(this.state.inputValueNns)\r\n        invokeRead_auction_getBalanceOfBid.arguments[0].value = this.state.inputValueAddr\r\n        invokeRead_auction_getBalanceOfBid.arguments[1].value = this.state.auctionStateInfo.id\r\n\r\n        //console.log(invokeRead_resolve)\r\n        var InvokeReadGroupInput = {group:[{}]}\r\n        InvokeReadGroupInput.group.pop()\r\n        InvokeReadGroupInput.group.push(invokeRead_CGAS_getBanlance)\r\n        InvokeReadGroupInput.group.push(invokeRead_auction_getBanlance)\r\n        InvokeReadGroupInput.group.push(invokeRead_auction_getAuctionState)\r\n        InvokeReadGroupInput.group.push(invokeRead_auction_getBalanceOfBid)\r\n        \r\n        console.log(JSON.stringify(invokeRead_auction_getBalanceOfBid));\r\n        \r\n        var resData:InvokeScriptResp = await Teemo.NEO.invokeReadGroup(JSON.parse(JSON.stringify(InvokeReadGroupInput)) as InvokeReadGroup)       \r\n        //console.log(resData.stack[3].value);\r\n        console.log(resData)\r\n\r\n        var stack2:any = resData.stack[2].value;\r\n        //console.log(stack2)\r\n\r\n        var AuctionStateInfo:AuctionState = {\r\n            id:stack2[0].value, //拍卖id,就是拍卖生成的auctionid\r\n            auctionStarter:stack2[1].value,//域名开拍的人\r\n            parenthash:stack2[2].value,//拍卖内容\r\n            domain:stack2[3].value,//拍卖内容\r\n            domainTTL:stack2[4].value,//域名的TTL,用这个信息来判断域名是否发生了变化\r\n            startBlockSelling:stack2[5].value,//开始销售块\r\n            endBlock:stack2[6].value,//结束块\r\n            maxPrice:stack2[7].value,//最高出价\r\n            maxBuyer:stack2[8].value,//最大出价者\r\n            lastBlock:stack2[9].value//最后出价块\r\n        }\r\n        AuctionStateInfo.auctionStarter = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.hexReverse(AuctionStateInfo.auctionStarter))\r\n        AuctionStateInfo.domain = NeoHelper.hex2a(AuctionStateInfo.domain)\r\n        AuctionStateInfo.domainTTL = NeoHelper.hex2TimeStr(AuctionStateInfo.domainTTL)\r\n        AuctionStateInfo.maxPrice = AuctionStateInfo.maxPrice/10**8\r\n        AuctionStateInfo.maxBuyer = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.hexReverse(AuctionStateInfo.maxBuyer))\r\n\r\n        //console.log(AuctionStateInfo)\r\n\r\n        //var CGAS_balacnce = resData.stack[0].value\r\n        //console.log(NeoHelper.hex2Int(CGAS_balacnce)/10**8)\r\n\r\n        this.setState({\r\n            CGASBalance:NeoHelper.hex2Int(resData.stack[0].value)/10**8,\r\n            auctionBalance:NeoHelper.hex2Int(resData.stack[1].value)/10**8,\r\n            bidBalance:NeoHelper.hex2Int(resData.stack[3].value)/10**8,\r\n            auctionStateInfo:AuctionStateInfo,\r\n            auctionDay:await this.calcAuctionDay(AuctionStateInfo.startBlockSelling),\r\n            resDataRead:JSON.stringify(AuctionStateInfo,null,2),\r\n            loadingR:false\r\n        })\r\n\r\n        //console.log(this.state.auctionStateInfo)\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        this.getInvokeRead_getBanlance()\r\n    }\r\n\r\n    butInvoke_doCGASin_click = async () =>{\r\n        invoke_CGAS_doCGASinStep0.arguments[0].value = this.state.inputValueAddr\r\n        invoke_CGAS_doCGASinStep0.arguments[1].value = await Teemo.NEO.getAddressFromScriptHash(this.props.scriptHash.nns_auction)\r\n        invoke_CGAS_doCGASinStep0.arguments[2].value = this.state.CGASopValue * (10**8)\r\n\r\n        //console.log(invoke_CGAS_doCGASinStep0)\r\n\r\n        var InvokeGroupInput = {merge:true,group:[{}]}\r\n        InvokeGroupInput.group.pop()\r\n        InvokeGroupInput.group.push(invoke_CGAS_doCGASinStep0)\r\n        InvokeGroupInput.group.push(invoke_auction_doCGASinStep1)\r\n\r\n        //console.log(InvokeGroupInput)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invokeGroup(JSON.parse(JSON.stringify(InvokeGroupInput)) as InvokeGroup)\r\n\r\n        //console.log(resp)\r\n\r\n        resp.forEach(res => {\r\n            this.props.store.addTxidSended(res.txid)\r\n        });\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(InvokeGroupInput,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doCGASout_click = async () =>{\r\n        invoke_auction_doCGASout.arguments[0].value = this.state.inputValueAddr\r\n        invoke_auction_doCGASout.arguments[1].value = this.state.CGASopValue * (10**8)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doCGASout)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doCGASout,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doStartAuction_click = async () =>{\r\n        invoke_auction_doStartAuction.arguments[0].value = this.state.inputValueAddr;\r\n        invoke_auction_doStartAuction.arguments[1].value = await this.NNSh.namehash(this.state.inputValueNns.split('.')[1])\r\n        invoke_auction_doStartAuction.arguments[2].value = this.state.inputValueNns.split('.')[0]\r\n\r\n        //console.log(invoke_auction_doStartAuction)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doStartAuction)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doStartAuction,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doBid_click = async() =>{\r\n        invoke_auction_doBid.arguments[0].value = this.state.inputValueAddr;\r\n        invoke_auction_doBid.arguments[1].value = this.state.auctionStateInfo.id\r\n        invoke_auction_doBid.arguments[2].value = (this.state.inputAmount*(10**8)).toString()\r\n\r\n        console.log(invoke_auction_doBid)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doBid)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doBid,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        })\r\n    }\r\n\r\n    butInvoke_doBidSettlementAndCollect_click = async() =>{\r\n        invoke_auction_doBidSettlement.arguments[0].value = this.state.inputValueAddr\r\n        invoke_auction_doBidSettlement.arguments[1].value = this.state.auctionStateInfo.id\r\n\r\n        invoke_auction_doCollect.arguments[0].value = this.state.inputValueAddr\r\n        invoke_auction_doCollect.arguments[1].value = this.state.auctionStateInfo.id\r\n\r\n        var InvokeGroupInput = {merge:false,group:[{}]}\r\n        InvokeGroupInput.group.pop()\r\n        InvokeGroupInput.group.push(invoke_auction_doBidSettlement)\r\n        InvokeGroupInput.group.push(invoke_auction_doCollect)\r\n\r\n        //console.log(JSON.stringify(InvokeGroupInput,null,2))\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invokeGroup(JSON.parse(JSON.stringify(InvokeGroupInput)) as InvokeGroup)\r\n\r\n        //console.log(resp)\r\n        resp.forEach(res => {\r\n            this.props.store.addTxidSended(res.txid)\r\n        });\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(InvokeGroupInput,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doRenew_click = async() =>{\r\n        invoke_auction_doRenew.arguments[0].value = this.state.inputValueAddr\r\n        invoke_auction_doRenew.arguments[1].value = await this.NNSh.namehash(this.state.inputValueNns.split('.')[1])\r\n        invoke_auction_doRenew.arguments[2].value = this.state.inputValueNns.split('.')[0]\r\n\r\n        console.log(invoke_auction_doRenew)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doRenew)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doRenew,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        })\r\n    }\r\n\r\n    butInvokeCreditAuthenticateClick = async(e:any) => {\r\n        invoke_credit_authenticate.arguments[0].value = this.state.inputValueAddr\r\n        invoke_credit_authenticate.arguments[1].value = []\r\n        for (const str of this.state.inputValueNns.split('.').reverse()) {\r\n            ((invoke_credit_authenticate.arguments as Argument[])[1].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditAuthenticateResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_authenticate)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditAuthenticateResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_authenticate,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditAuthenticateResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvokeCreditRevokeClick = async(e:any) => {\r\n        invoke_credit_revoke.arguments[0].value = this.state.inputValueAddr\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditRevokeResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_revoke)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditRevokeResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_revoke,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditRevokeResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                                                                 \r\n        });\r\n    }\r\n\r\n    CGASopChange(e:any){\r\n        this.setState({\r\n            CGASopValue:e.target.value\r\n        })\r\n    }\r\n\r\n    addrChange(e:any){\r\n        this.setState({\r\n            inputValueAddr:e.target.value\r\n        })\r\n    }\r\n\r\n    nnsChange(e:any){\r\n        this.setState({\r\n            inputValueNns:e.target.value\r\n        })\r\n    }\r\n\r\n    amountChange(e:any){\r\n        this.setState({\r\n            inputAmount:e\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                        <Statistic title=\"钱包账户\" value={this.state.CGASBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Spin>                  \r\n                </Col>\r\n                <Col span={8}>\r\n                    <Row gutter={16}>\r\n                        <Col span={8}>\r\n                            <Button onClick={this.butInvoke_doCGASout_click} ><Icon type=\"left\" />提取</Button>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Input placeholder=\"输入金额\" onChange={this.CGASopChange.bind(this)} defaultValue={this.state.CGASopValue.toString()} />   \r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Button onClick={this.butInvoke_doCGASin_click} >充值<Icon type=\"right\" /></Button>\r\n                        </Col>\r\n                    </Row>                                                     \r\n                </Col>\r\n                <Col span={8}>\r\n                    <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                    <Statistic title=\"合约账户\" value={this.state.auctionBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Spin>                  \r\n                </Col>\r\n            </Row>\r\n            <Input placeholder=\"输入要查询的地址\" onChange={this.addrChange.bind(this)} defaultValue={this.state.inputValueAddr}/>\r\n            <Input placeholder=\"输入要绑定的NNS\" onChange={this.nnsChange.bind(this)} defaultValue={this.state.inputValueNns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">刷新数据</Button>\r\n            <Divider type=\"vertical\" />\r\n            <Button onClick={this.butInvoke_doStartAuction_click}>开标</Button>           \r\n            <Divider type=\"vertical\" />\r\n            <InputNumber min={0} max={this.state.auctionBalance} step={0.1} onChange={this.amountChange.bind(this)} />=>\r\n            <Button onClick={this.butInvoke_doBid_click}>加价</Button> \r\n            <Divider type=\"vertical\" /> \r\n            <Button onClick={this.butInvoke_doBidSettlementAndCollect_click}>结算与领取</Button>\r\n            <Divider type=\"vertical\" /> \r\n            <Button onClick={this.butInvoke_doRenew_click} disabled={this.state.auctionDay>(365-90)?true:false}>续期{(this.state.auctionDay-(365-90)).toFixed(2)}</Button>             \r\n            <Divider />         \r\n            <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                <Row type=\"flex\" align=\"middle\" gutter={16}>\r\n                    <Col span={3}>\r\n                        <Statistic title=\"开拍天数\" value={this.state.auctionDay.toFixed(2)} suffix=\"天\" prefix={<Icon type=\"clock-circle\" />} />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Switch checked={this.state.drawerVisible} onChange={()=>{this.setState({drawerVisible: !this.state.drawerVisible})}} />显示时间轴  \r\n                    </Col>\r\n                    <Col span={13}>\r\n                        <Statistic title=\"加价总数\" value={this.state.bidBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Col>\r\n                </Row>                                             \r\n                \r\n                {/* <Button type=\"primary\" onClick={()=>{this.setState({drawerVisible: true})}}>查看竞拍阶段</Button> */}\r\n                <Drawer\r\n                    title=\"竞拍阶段\"\r\n                    placement=\"left\"\r\n                    closable={false}\r\n                    onClose={()=>{this.setState({drawerVisible: false})}}\r\n                    visible={this.state.drawerVisible}\r\n                    >\r\n                        <Timeline>\r\n                            <Timeline.Item color={this.state.auctionDay>0?'green':'blue'}>确定期（1-2）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>2?'green':'blue'}>确定期（3）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>3?'green':'blue'}>随机期（4-5）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>5?'green':'blue'}>竞拍结束（5）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>(365-90)?'green':'blue'}>续期期（365-90）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>365?'green':'blue'}>到期（365）</Timeline.Item>\r\n                        </Timeline>\r\n                    </Drawer>\r\n                <pre>{this.state.resDataRead}</pre>\r\n            </Spin>\r\n            {/* <pre>{this.state.reqDataWrite}</pre> */}\r\n            <Spin tip='请求中' spinning={this.state.loadingW}>\r\n                <pre>{this.state.resDataWrite}</pre>\r\n            </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivAuction;","import React, { Component } from 'react';\r\nimport {autorun} from 'mobx'\r\nimport {Button,Input,Spin} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface IProps{\r\n    title:string\r\n    address:string\r\n    scriptHash:any\r\n}\r\n\r\ninterface NNScredit\r\n{\r\n    namehash:string\r\n    fullDomainName:string \r\n    TTL:string\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nlet invokeRead_credit =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"getCreditInfo\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"}\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_credit_authenticate =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"authenticate\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"Array\",\"value\":[]}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS反向解析绑定\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_credit_revoke =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"revoke\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS反向解析解绑\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nclass DivNnsCredit extends React.Component<any,any> {\r\n    NNSh = new NNSHelper(this.props.scriptHash);\r\n\r\n    state = {\r\n        resDataRead : '{}',\r\n        reqDataWrite : '{}',\r\n        resDataWrite : '{}',\r\n        inputValueAddr : this.props.address,\r\n        inputValueNns : 'qmz.test',\r\n        loadingR : false,\r\n        loadingW : false\r\n    }  \r\n\r\n    componentDidMount(){\r\n        invokeRead_credit.scriptHash = this.props.scriptHash.nns_credit\r\n        invoke_credit_authenticate.scriptHash = this.props.scriptHash.nns_credit\r\n        invoke_credit_revoke.scriptHash = this.props.scriptHash.nns_credit\r\n\r\n        window.addEventListener (\"newBlockEvent\", this.doOnEvent, false)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"newBlockEvent\", this.doOnEvent, false);\r\n    }\r\n\r\n    doOnEvent = (e:any) =>{\r\n        console.log('newBlockEvent',e)\r\n        if(e.detail.txidIndex > -1){\r\n            this.getInvokeRead()\r\n        }  \r\n    }\r\n\r\n    getInvokeRead = async () =>{\r\n        invokeRead_credit.arguments[0].value =  this.state.inputValueAddr//await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        //console.log(invokeRead_resolve)\r\n        var creditData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_credit)) as InvokeReadInput)       \r\n        //console.log(creditData);\r\n\r\n        var stack0:any = creditData.stack[0].value;\r\n        var creditInfo:NNScredit = {\r\n            namehash:stack0[0].value,\r\n            fullDomainName:stack0[1].value,\r\n            TTL:stack0[2].value,\r\n        }\r\n        creditInfo.fullDomainName = NeoHelper.hex2a(creditInfo.fullDomainName)\r\n        creditInfo.TTL = NeoHelper.hex2TimeStr(creditInfo.TTL)\r\n\r\n        this.setState({\r\n            resDataRead:JSON.stringify(creditInfo, null, 2),\r\n            loadingR:false                                 \r\n        });\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        this.getInvokeRead()\r\n    }\r\n\r\n    butInvokeCreditAuthenticateClick = async(e:any) => {\r\n        invoke_credit_authenticate.arguments[0].value = this.state.inputValueAddr\r\n        invoke_credit_authenticate.arguments[1].value = []\r\n        for (const str of this.state.inputValueNns.split('.').reverse()) {\r\n            ((invoke_credit_authenticate.arguments as Argument[])[1].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditAuthenticateResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_authenticate)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditAuthenticateResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_authenticate,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditAuthenticateResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvokeCreditRevokeClick = async(e:any) => {\r\n        invoke_credit_revoke.arguments[0].value = this.state.inputValueAddr\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditRevokeResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_revoke)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditRevokeResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_revoke,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditRevokeResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                                                                 \r\n        });\r\n    }\r\n\r\n    addrChange(e:any){\r\n        this.setState({\r\n            inputValueAddr:e.target.value\r\n        })\r\n    }\r\n\r\n    nnsChange(e:any){\r\n        this.setState({\r\n            inputValueNns:e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            <Input placeholder=\"输入要查询的地址\" onChange={this.addrChange.bind(this)} defaultValue={this.state.inputValueAddr}/>\r\n            <Input placeholder=\"输入要绑定的NNS\" onChange={this.nnsChange.bind(this)} defaultValue={this.state.inputValueNns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS反向解析信息</Button>\r\n            <Button onClick={this.butInvokeCreditAuthenticateClick}>绑定</Button>\r\n            <Button onClick={this.butInvokeCreditRevokeClick}>解绑</Button>\r\n            <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                <pre>{this.state.resDataRead}</pre>\r\n            </Spin>\r\n            {/* <pre>{this.state.reqDataWrite}</pre> */}\r\n            <Spin tip='请求中' spinning={this.state.loadingW}>\r\n                <pre>{this.state.resDataWrite}</pre>\r\n            </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsCredit;","import React, { Component } from 'react';\nimport './App.css';\nimport { createStore } from 'redux'\nimport { Layout, Menu, Icon, notification } from 'antd';\nimport { any } from 'prop-types';\n\nimport Store from './store';\nimport DivDefault from './components/divDefault';\nimport DivNnsCenter from './components/divNnsCenter';\nimport DivNnsResolver from './components/divNnsResolver';\nimport DivAuction from './components/divAuction';\nimport DivNnsCredit from './components/divNnsCredit';\nimport MobxTest from './components/mobxTest';\nimport { updateLocale } from 'moment';\n\nimport { observable ,autorun} from \"mobx\";\nimport { Socket } from 'dgram';\nimport Title from 'antd/lib/typography/Title';\n\nconst {\n  Header, Content, Footer, Sider,\n} = Layout;\n\nconst scriptHash = {\n  nns_domaincenter : \"348387116c4a75e420663277d9c02049907128c7\",\n  nns_resolver : \"6e2aea28af9c5febea0774759b1b76398e3167f1\",\n  nns_auction:\"5fd8c2aed0eec0fa103f6fba16748b453baf5b2e\",\n  nns_credit : \"77bf387c9b5f2e2c33ef8507478b103285c55b11\",\n  NEP_5_CGAS:\"74f2dc36a68fdc4682034178eb2220729231db76\",\n  NEP_5_NNC:\"fc732edee1efdf968c23c20a9628eaa5a6ccb934\"\n}\n\nconst webSocketURL = 'ws://47.99.35.147:82/ws/testnet'\n\nlet div_defult = () =>{\n  return <p>div_defult</p>\n}\n\nlet time = new Date().getTime()\n\nconst store = new Store(webSocketURL);\n\nclass App extends Component {\n  state = {\n    menuID: 1,\n    address : 'address',\n    network : \"network\",\n    teemoReady:false\n  }\n\n  componentWillMount(){\n    this.init()\n  }\n\n  average = (arr:Array<any>) => {\n    const nums = [].concat(...arr);\n    return nums.reduce((acc, val) => acc + val, 0) / nums.length;\n  };\n\n  init=()=>{\n    //console.log(\"this is init\");\n    \n    window.addEventListener('Teemo.NEO.READY',async (data)=>{\n      //console.log(this.state)\n      console.log(\"inject READY \");\n      notification.success({message:'Teemo',description:'Teemo.NEO.READY'})\n      this.setState({\n        address: (await Teemo.NEO.getAccount()).address,\n        network: (await Teemo.NEO.getNetworks()).defaultNetwork,\n        teemoReady:true                     \n      }); \n      //console.log(this.state)\n    })\n\n    window.addEventListener('Teemo.NEO.NETWORK_CHANGED',(data:any)=>{\n      console.log(\"NETWORK_CHANGED\");\n      console.log(data);\n      this.setState({\n        network: data.detail.defaultNetwork                      \n      }); \n    })\n  }\n\n  menuClick = (e:any) => {\n    console.log('menu Click', e);\n    this.setState({\n      menuID: e.key\n    });\n  } \n  \n  render() {\n    let div_main = null;\n    if (this.state.menuID == 1) {\n      div_main = <DivDefault store={store} title=\"default Page\" address={this.state.address} network={this.state.network} scriptHash={scriptHash} teemoReady={this.state.teemoReady} />\n    } \n    else if (this.state.menuID == 2) {\n      div_main = <DivNnsCenter title=\"NNS Domain Center\" scriptHash={scriptHash} />\n    }\n    else if (this.state.menuID == 3) {\n      div_main = <DivNnsResolver title=\"NNS Resolver\" scriptHash={scriptHash} />\n    }\n    else if (this.state.menuID == 4) {\n      div_main = <DivAuction store={store} title=\"NNS Auction\" address={this.state.address}  scriptHash={scriptHash} teemoReady={this.state.teemoReady} />\n    }\n    else if (this.state.menuID == 5) {\n      div_main = <DivNnsCredit store={store} title=\"NNS Credit\" address={this.state.address}  scriptHash={scriptHash} />\n    }\n    else {\n      div_main = div_defult()\n    }\n\n    return (\n      <Layout>\n        <Sider\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          onBreakpoint={(broken) => { console.log(broken); }}\n          onCollapse={(collapsed, type) => { console.log(collapsed, type); }}\n        >\n          <div className=\"logo\" />\n          <Menu onClick={this.menuClick}  theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">Default Page</span>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS Center</span>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS resolver</span>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS Auction</span>\n            </Menu.Item>\n            <Menu.Item key=\"5\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS Credit</span>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <h1>--- NNS Teemo Demo ---</h1>\n          </Header>\n          <Content style={{ margin: '24px 16px 0' }}>\n            {/* <MobxTest store={store}/> */}\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                {div_main}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>\n            NNS ©2019 Created by NEL\n          </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n        <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}