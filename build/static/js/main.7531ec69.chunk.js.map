{"version":3,"sources":["store.ts","App.tsx","serviceWorker.ts","Tools/neoHelper.tsx","Tools/nnsHelper.tsx","components/divDefault.tsx","components/divNnsCenter.tsx","components/divNnsResolver.tsx","components/divAuction.tsx","components/divNnsCredit.tsx","index.tsx"],"names":["Store","_this","this","Object","classCallCheck","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","updateLastWSmsgSec","lastWSmsgSec","Date","getTime","lastWSmsgTime","socketInit","socket","socketReadyState","readyState","time","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","pushEvent","eventName","eventData","event","CustomEvent","detail","window","dispatchEvent","getDelay","parseInt","toFixed","_descriptor18","_descriptor19","init","setInterval","minPerDay","auctionMinPerDay","nns_domaincenter","nns_resolver","nns_auction","nns_auction_hash","nns_credit","NEP_5_CGAS","NEP_5_NNC","network","observable","action","computed","addr","_this2","address","net","_this3","nns","_this4","blockHeight","blockTime","blockHash","timeDiff","txid","_this5","txids","unshift","_this6","close","blockDatas","WebSocket","webSocketURL","onclose","console","log","notification","warning","message","description","onerror","error","onopen","send","success","onmessage","data","socketMsgs","JSON","parse","txidIndex","length","tx","findIndex","element","info","blockInsertTime","svrSystemTime","blockHeightDataArray","shift","pop","blockData","lastBlockTime","addEventListener","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","_this7","isTeemoReady","Teemo","NEO","getAccount","then","updateAddress","catch","isConnected","t0","getNetworks","t1","sent","defaultNetwork","updateNetwork","call","stop","_x","apply","arguments","_ref2","_callee2","_context2","_x2","Header","Layout","Content","Footer","Sider","App","observer","state","menuID","menuClick","e","setState","key","react_default","createElement","react_router_dom","layout","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","type","className","menu","onClick","theme","mode","defaultSelectedKeys","Item","to","icon","style","background","padding","margin","minHeight","props","children","textAlign","Component","Boolean","location","hostname","match","NeoHelper","store","getBlock","blockIndex","result","fetch","rpcUrl","json","abrupt","getAddressFromScriptHash","hex2a","hexx","hex","toString","str","i","substr","String","fromCharCode","hex2Int","byte2Hex","hex2Byte","reverse","hex2TimeStr","timetrans","hexReverse","uint8arr","hexStr","toLowerCase","Uint8Array","len","push","timestamp","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","sec2HMS","sec","h","m","s","NNSHelper","invokeRead_nameHashArray","namehash","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","invokeResp","value","undefined","split","Symbol","iterator","done","return","finish","invokeRead","stringify","stack","scriptHash","operation","DivDefault","inject","NNSh","resData","Fragment","spin","tip","spinning","list","bordered","dataSource","pagination","onChange","page","pageSize","renderItem","item","id","Meta","avatar","src","title","txCount","React","DivNnsCenter","butGetInvokeReadClick","invokeGetOwnerInfo","nnsOwnerInfoData","stack0","nnsOwnerInfo","t2","t3","t4","owner","register","resolver","TTL","parentOwner","domain","parenthash","root","input","placeholder","updateNNS","target","defaultValue","es_button","DivNnsResolver","invokeRead_resolve","resolverData","t5","DivAuction","possibleConstructorReturn","getPrototypeOf","nnsInput","resDataRead","reqDataWrite","resDataWrite","inputAmount","loadingR","loadingW","CGASBalance","auctionBalance","bidBalance","auctionDay","auctionStateInfo","auctionStarter","domainTTL","startBlockSelling","endBlock","maxPrice","maxBuyer","lastBlock","CGASopValue","drawerVisible","intervalID","doOnEvent","getInvokeRead_getBanlance","calcAuctionDay","startTimeS","invokeRead_CGAS_getBanlance","invokeRead_auction_getBanlance","invokeRead_auction_getAuctionState","invokeRead_auction_getBalanceOfBid","InvokeReadGroupInput","stack2","AuctionStateInfo","resData2","group","invokeReadGroup","Math","pow","t6","t7","t8","t9","t10","t11","t12","_ref3","_callee3","_context3","butInvoke_doCGASin_click","_callee4","invoke_CGAS_doCGASinStep0","invoke_auction_doCGASinStep1","InvokeGroupInput","resp","_context4","fee","merge","invokeGroup","forEach","res","addTxidSended","butInvoke_doCGASout_click","_callee5","invoke_auction_doCGASout","_context5","invoke","butInvoke_doStartAuction_click","_callee6","invoke_auction_doStartAuction","_context6","butInvoke_doBid_click","_callee7","invoke_auction_doBid","_context7","butInvoke_doBidSettlementAndCollect_click","_callee8","invoke_auction_doBidSettlement","invoke_auction_doCollect","_context8","butInvoke_doRenew_click","_callee9","invoke_auction_doRenew","_context9","createRef","_callee10","_context10","removeEventListener","clearInterval","es_switch","checked","checkedChildren","unCheckedChildren","defaultChecked","_ref11","_callee11","newNns","_context11","updateAuctionMinPerDay","replace","current","_x3","divider","row","gutter","col","span","statistic","suffix","prefix","CGASopChange","bind","ref","input_number","min","max","step","amountChange","disabled","align","drawer","placement","closable","onClose","visible","timeline","color","DivNnsCredit","getInvokeRead","invokeRead_credit","creditData","creditInfo","fullDomainName","butInvokeCreditAuthenticateClick","invoke_credit_authenticate","invokeCreditAuthenticateResp","butInvokeCreditRevokeClick","invoke_credit_revoke","invokeCreditRevokeResp","ReactDOM","render","index_module","basename","src_App_0","react_router","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7531ec69.chunk.js","sourcesContent":["import {observable, action, computed, autorun} from 'mobx';\r\nimport { notification } from 'antd';\r\nimport NeoHelper from './Tools/neoHelper';\r\n\r\nclass Store {\r\n    constructor(){\r\n        this.init()\r\n        setInterval(this.updateLastWSmsgSec,1000)\r\n    }\r\n\r\n    @observable isTeemoReady = false\r\n    @observable isConnected = true\r\n    \r\n    @observable auctionMinPerDay = 5\r\n    @action updateAuctionMinPerDay(minPerDay:number){\r\n        this.auctionMinPerDay = minPerDay\r\n    }\r\n    @computed get nns_auction_hash(){\r\n        if(this.auctionMinPerDay == 5) return \"5fd8c2aed0eec0fa103f6fba16748b453baf5b2e\"\r\n        else return \"4c7cca112a8c5666bce5da373010fc0920d0e0d2\"\r\n    }\r\n\r\n    @computed get scriptHash(){\r\n        return {\r\n            nns_domaincenter : \"348387116c4a75e420663277d9c02049907128c7\",\r\n            nns_resolver : \"6e2aea28af9c5febea0774759b1b76398e3167f1\",\r\n            nns_auction: this.nns_auction_hash,\r\n            nns_credit : \"77bf387c9b5f2e2c33ef8507478b103285c55b11\",\r\n            NEP_5_CGAS:\"74f2dc36a68fdc4682034178eb2220729231db76\",\r\n            NEP_5_NNC:\"fc732edee1efdf968c23c20a9628eaa5a6ccb934\"\r\n        }\r\n    } \r\n\r\n    @observable network = 'TestNet'\r\n    @observable address:string = 'A**********************'\r\n    @observable nns:string='qmz.test'\r\n    @action public updateAddress = (addr:string) =>{\r\n        this.address = addr\r\n    }\r\n    @action public updateNetwork = (net:string) =>{\r\n        this.network = net\r\n    }\r\n    @action public updateNNS = (nns:string) =>{\r\n        this.nns = nns\r\n    }\r\n    @computed get rpcUrl(){\r\n        if(this.network=='MainNet') return 'http://seed.nel.group:10332'\r\n        else return 'http://test.nel.group:20332'\r\n    }\r\n\r\n    @computed get webSocketURL(){\r\n        if(this.network=='MainNet') return 'ws://47.99.35.147:82/ws/mainnet'\r\n        else return 'ws://47.99.35.147:82/ws/testnet'\r\n    }\r\n\r\n    updateLastWSmsgSec = () =>{     \r\n        this.lastWSmsgSec=(new Date().getTime() - this.lastWSmsgTime)/1000\r\n\r\n        //webstock 如果2分钟取不到最新块，会发送心跳数据包\r\n        if(this.lastWSmsgSec>75){\r\n            \r\n            this.lastWSmsgTime=new Date().getTime(),\r\n            this.lastWSmsgSec=0\r\n\r\n            this.socketInit()\r\n        }\r\n\r\n        if(this.socket) this.socketReadyState = this.socket.readyState\r\n    }\r\n\r\n    socket: any;\r\n    time = new Date().getTime()\r\n    @observable socketReadyState = -1\r\n    @observable socketMsgs:Array<any> = []\r\n    @observable blockDatas=[{\r\n        blockHeight:-1,\r\n        blockTime:0,\r\n        blockHash:'',\r\n        timeDiff:0\r\n      }]\r\n    @observable lastBlockTime=0\r\n    @observable lastWSmsgTime=new Date().getTime()\r\n    @observable lastWSmsgSec=0\r\n\r\n    // @computed get lastBlockTime(){\r\n    //     if(this.blockData.length >1){\r\n    //         return this.blockData[0].time\r\n    //     }\r\n    //     else return 0\r\n    // }\r\n    @observable txids:string[] = []\r\n    @action public addTxidSended =(txid:string) =>{\r\n        this.txids.unshift('0x' + txid)\r\n    }\r\n\r\n    pushEvent =(eventName:string,eventData:any) =>{\r\n        var event = new CustomEvent(eventName, { \r\n            detail: eventData\r\n        });\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    getDelay = (time:number) =>{\r\n        return parseInt((new Date().getTime()/1000 - time).toFixed(0)) + 's'\r\n    }\r\n\r\n    @action socketInit =() =>{\r\n        if(this.socket){\r\n            this.socket.close()\r\n        }\r\n\r\n        this.blockDatas=[{\r\n            blockHeight:-1,\r\n            blockTime:0,\r\n            blockHash:'',\r\n            timeDiff:0\r\n          }]\r\n\r\n        this.socket = new WebSocket(this.webSocketURL);\r\n    \r\n        this.socket.onclose = (event:any) => {\r\n            console.log(event);\r\n            notification.warning({message:'websocket',description:'close'})\r\n        };\r\n        this.socket.onerror = (event:any) => {\r\n            console.log(event);\r\n            notification.error({message:'websocket',description:'error'})\r\n        };\r\n        this.socket.onopen = (event:any) =>{\r\n            console.log(event);\r\n            this.socket.send('Hello Server!');\r\n            notification.success({message:'websocket',description:'open on ' + this.webSocketURL})\r\n        }\r\n        this.socket.onmessage = (event:any) =>{\r\n            console.log(event);\r\n            console.log(event.data);\r\n\r\n            this.socketMsgs.unshift(event.data);\r\n\r\n            this.lastWSmsgTime = new Date().getTime()\r\n    \r\n            //let timeDiff = new Date().getTime() - this.time;\r\n            this.time = new Date().getTime()\r\n            //console.log(timeDiff.toString() + 'ms')\r\n            var data = JSON.parse(event.data).data\r\n            if(data.blockHeight != null){\r\n                var txidIndex = -1\r\n                if(this.txids.length>0){                  \r\n                    txidIndex = data.tx.findIndex((element:any)=>{\r\n                        return element.txid === this.txids[0]\r\n                    })\r\n                    //console.log({txid:this.txids[0]},data.tx,txidIndex)\r\n                }\r\n                notification.info({message:data.blockHeight,description:'delay: ' + this.getDelay(data.blockTime) + '/' + this.getDelay(data.blockInsertTime) + '/' + this.getDelay(data.svrSystemTime) + '||txidIndex:' + txidIndex})\r\n\r\n                var blockHeightDataArray = this.blockDatas\r\n\r\n                if(blockHeightDataArray[0].blockHeight == -1 ) blockHeightDataArray.shift()\r\n                if(blockHeightDataArray.length>=50) blockHeightDataArray.pop()\r\n\r\n                let timeDiff = 0\r\n                if(blockHeightDataArray.length > 0) timeDiff = (data.blockTime - blockHeightDataArray[0].blockTime)\r\n                let blockData = data // {height:data.blockHeight,time:data.blockTime,hash:data.blockHash,timeDiff:timeDiff}\r\n                blockData['timeDiff'] = timeDiff\r\n                blockData['txidIndex'] = txidIndex\r\n                blockData['txCount'] = data.tx.length\r\n                blockHeightDataArray.unshift(blockData)\r\n                this.pushEvent('newBlockEvent',blockData)            \r\n        \r\n                this.blockDatas = blockHeightDataArray\r\n                this.lastBlockTime = data.blockTime\r\n            }\r\n        }\r\n    }\r\n\r\n    @action init=()=>{\r\n        console.log(\"this is init\");\r\n        \r\n        window.addEventListener('Teemo.NEO.READY',async (data)=>{\r\n            console.log(\"inject READY \");\r\n            notification.success({message:'Teemo',description:'Teemo.NEO.READY'})     \r\n\r\n            this.isTeemoReady = true\r\n\r\n            var account\r\n            Teemo.NEO.getAccount()\r\n            .then((data)=>{\r\n                console.log('account',data)\r\n                this.updateAddress(data.address)\r\n            })\r\n            .catch((error)=>{\r\n                console.log('account',error)\r\n                this.isConnected=false\r\n            })         \r\n\r\n            this.updateNetwork((await Teemo.NEO.getNetworks()).defaultNetwork)          \r\n\r\n            this.socketInit()\r\n\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.NETWORK_CHANGED',(data:any)=>{\r\n            console.log(\"NETWORK_CHANGED\");\r\n            console.log(data);\r\n\r\n            this.updateNetwork(data.detail.defaultNetwork)\r\n            this.socketInit()\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.CONNECTED',async (data:any)=>{\r\n            console.log(\"CONNECTED\");\r\n            console.log(data);\r\n\r\n            notification.success({message:'Teemo',description:'Teemo.NEO.CONNECTED'})\r\n            this.isConnected = true\r\n            \r\n            this.updateAddress(data.detail.address)\r\n            this.updateNetwork((await Teemo.NEO.getNetworks()).defaultNetwork)\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.DISCONNECTED',(data:any)=>{\r\n            console.log(\"DISCONNECTED\");\r\n            console.log(data);\r\n\r\n            notification.warning({message:'Teemo',description:'Teemo.NEO.DISCONNECTED'})\r\n            this.isConnected = false\r\n\r\n            this.updateAddress('A**********************')\r\n            this.updateNetwork('TestNet')\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.ACCOUNT_CHANGED',(data:any)=>{\r\n            console.log(\"ACCOUNT_CHANGED\");\r\n            console.log(data);\r\n\r\n            notification.warning({message:'Teemo',description:'Teemo.NEO.ACCOUNT_CHANGED'})\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport default Store","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route ,Link ,withRouter  } from 'react-router-dom'\nimport './App.css';\nimport { createStore } from 'redux'\nimport { Layout, Menu, Icon, notification, Input,Spin } from 'antd';\nimport { any } from 'prop-types';\nimport {observer,inject} from 'mobx-react';\n\n// import Store from './store';\nimport DivDefault from './components/divDefault';\nimport DivNnsCenter from './components/divNnsCenter';\nimport DivNnsResolver from './components/divNnsResolver';\nimport DivAuction from './components/divAuction';\nimport DivNnsCredit from './components/divNnsCredit';\nimport MobxTest from './components/mobxTest';\nimport { updateLocale } from 'moment';\n\nimport { observable ,autorun} from \"mobx\";\nimport { Socket } from 'dgram';\nimport Title from 'antd/lib/typography/Title';\n\nconst {\n  Header, Content, Footer, Sider,\n} = Layout;\n\n// const webSocketURL = 'ws://47.99.35.147:82/ws/testnet'\n\nlet div_defult = () =>{\n  return <p>div_defult</p>\n}\n\n// let time = new Date().getTime()\n\n// const store = new Store();\n\n// @inject(\"store\")\n@observer\nclass App extends Component<any,any> {\n  state = {\n    menuID: 1\n  }\n\n  menuClick = (e:any) => {\n    console.log('menu Click', e);\n\n    //this.props.history.push(\"/nnscenter\")\n\n    this.setState({\n      menuID: e.key\n    });\n  } \n  \n  render() {\n    // let div_main = null;\n    // if (this.state.menuID == 1) {\n    //   div_main = <DivDefault />\n    // } \n    // else if (this.state.menuID == 2) {\n    //   div_main = <DivNnsCenter />\n    // }\n    // else if (this.state.menuID == 3) {\n    //   div_main = <DivNnsResolver />\n    // }\n    // else if (this.state.menuID == 4) {\n    //   div_main = <DivAuction />\n    // }\n    // else if (this.state.menuID == 5) {\n    //   div_main = <DivNnsCredit />\n    // }\n    // else {\n    //   div_main = div_defult()\n    // }\n\n    return (\n      <Router>\n      <Layout>\n        <Sider\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          onBreakpoint={(broken) => { console.log(broken); }}\n          onCollapse={(collapsed, type) => { console.log(collapsed, type); }}\n        >\n          <div className=\"logo\" />\n          <Menu onClick={this.menuClick}  theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\">\n              <Link to='/'>\n                <Icon type=\"file\" />\n                <span className=\"nav-text\">Default Page</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Link to='/nnscenter'>\n                <Icon type=\"file\" />\n                <span className=\"nav-text\">NNS Center</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Link to='/nnsresolver'>\n                <Icon type=\"file\" />\n                <span className=\"nav-text\">NNS resolver</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n              <Link to='/nnsauction'>\n                <Icon type=\"file\" />\n                <span className=\"nav-text\">NNS Auction</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"5\">\n              <Link to='/nnscredit'>\n                <Icon type=\"file\" />\n                <span className=\"nav-text\">NNS Credit</span>\n              </Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <h1>--- NNS Teemo Demo ---</h1>\n\n          </Header>\n          <Content style={{ margin: '24px 16px 0' }}>\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                {this.props.children}\n                {/* {div_main} */}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>\n            NNS ©2019 Created by NEL\n          </Footer>\n        </Layout>\n      </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { async } from \"q\";\r\n\r\nclass NeoHelper {\r\n    public static getAddressFromScriptHash = () =>{\r\n        //根据合约notify输出的scripthash，转换为NEO地址\r\n    }\r\n\r\n    store:any\r\n    constructor(store:any){\r\n        this.store=store\r\n    }\r\n\r\n    public getBlock = async (blockIndex:number) =>{\r\n      let result = await fetch(this.store.rpcUrl + '?jsonrpc=2.0&method=getblock&params=[' + blockIndex +',1]&id=1', {\r\n        // method: 'post',\r\n        // headers: {\r\n        //   'user-agent': 'Mozilla/4.0 MDN Example',\r\n        //   'content-type': 'application/json'\r\n        // },\r\n        // body: JSON.stringify({\r\n        //   \"jsonrpc\": \"2.0\",\r\n        //   \"method\": \"getblock\",\r\n        //   \"params\": [blockIndex, 1],\r\n        //   \"id\": 1\r\n        // })\r\n      });\r\n      let data = await result.json();\r\n      return data;\r\n    }\r\n\r\n    public static hex2a = (hexx:string) => {\r\n        var hex = hexx.toString();//force conversion\r\n        var str = '';\r\n        for (var i = 0; (i < hex.length && hex.substr(i, 2) !== '00'); i += 2)\r\n            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\r\n        return str;\r\n    }\r\n\r\n    public static hex2Int = (hexx:string) =>{\r\n      if(hexx=='') return 0\r\n      return parseInt(NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse()), 16)\r\n    }\r\n\r\n    public static hex2TimeStr = (hexx:string) =>{\r\n      return NeoHelper.timetrans(parseInt(NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse()), 16))\r\n    }\r\n\r\n    public static hexReverse = (hexx:string)=>{\r\n      return NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse())\r\n    }\r\n\r\n    public static byte2Hex = (uint8arr:Uint8Array) => {\r\n        if (!uint8arr) {\r\n          return '';\r\n        }\r\n        \r\n        var hexStr = '';\r\n        for (var i = 0; i < uint8arr.length; i++) {\r\n          var hex = (uint8arr[i] & 0xff).toString(16);\r\n          hex = (hex.length === 1) ? '0' + hex : hex;\r\n          hexStr += hex;\r\n        }\r\n        \r\n        return hexStr.toLowerCase();\r\n    }\r\n\r\n    public static hex2Byte = (str:string) => {\r\n        if (!str) {\r\n          return new Uint8Array();\r\n        }\r\n        \r\n        var a = [];\r\n        for (var i = 0, len = str.length; i < len; i+=2) {\r\n          a.push(parseInt(str.substr(i,2),16));\r\n        }\r\n        \r\n        return new Uint8Array(a);\r\n    }\r\n\r\n    public static timetrans = (timestamp:number)=>{\r\n        var date = new Date(timestamp*1000);//如果date为13位不需要乘1000\r\n        var Y = date.getFullYear() + '-';\r\n        var M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';\r\n        var D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\r\n        var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\r\n        var m = (date.getMinutes() <10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\r\n        var s = (date.getSeconds() <10 ? '0' + date.getSeconds() : date.getSeconds());\r\n        return Y+M+D+h+m+s;\r\n    }\r\n\r\n    public static sec2HMS = (sec:number) =>{\r\n      let h=0\r\n      let m=0\r\n      let s=0\r\n      if((sec % 3600) > 0){\r\n        h = parseInt((sec/3600).toString())\r\n        sec = sec - h*3600\r\n      } \r\n      if((sec % 60) > 0){\r\n        m = parseInt((sec/60).toString())\r\n        sec = sec - m*60\r\n      }\r\n      s = sec\r\n\r\n      let mStr='00'\r\n      let sStr='00'\r\n      if(m <10) mStr = '0' + m \r\n        else mStr=m.toString()\r\n      if(s <10) sStr = '0' + s\r\n        else sStr = s.toString()\r\n\r\n      return h + ':' + mStr + ':' + sStr\r\n    }\r\n}\r\n\r\nexport default NeoHelper;","import { async } from \"q\";\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\n\r\n\r\n\r\nclass NNSHelper {\r\n    store:any\r\n    invokeRead_nameHashArray:any\r\n    constructor(store:any) {\r\n        this.store = store\r\n        this.invokeRead_nameHashArray = {\r\n            \"scriptHash\": store.scriptHash.nns_domaincenter,\r\n            \"operation\": \"nameHashArray\",\r\n            \"arguments\": [\r\n                {\"type\":\"Array\",\"value\":[]},\r\n            ],\r\n            \"network\": store.network\r\n        }\r\n    }\r\n\r\n    public namehash = async (nns:string) => {\r\n        var namehash = \"\"\r\n\r\n        this.invokeRead_nameHashArray.arguments[0].value = [];\r\n        for (const str of nns.split('.').reverse()) {\r\n            ((this.invokeRead_nameHashArray.arguments as Argument[])[0].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n        //console.log(invokeRead_nameHashArray)\r\n        //console.log(JSON.stringify(invokeRead_nameHashArray))\r\n        var invokeResp:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(this.invokeRead_nameHashArray)) as InvokeReadInput)\r\n        //console.log(invokeResp)\r\n        namehash = invokeResp.stack[0].value\r\n\r\n        return namehash\r\n    }\r\n}\r\n\r\nexport default NNSHelper;","import {\r\n    List, message, Avatar, Spin,\r\n  } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\nimport {inject,observer} from 'mobx-react';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass DivDefault extends React.Component<any,any> {\r\n    NNSh = new NNSHelper(this.props.store);\r\n\r\n    state = {\r\n      resData : '{}'\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <> \r\n        <Spin tip='连接Teemo……' spinning={!this.props.store.isTeemoReady}>          \r\n          <p>Default Page</p>\r\n          <p>{this.props.store.address}</p>\r\n          <p>{this.props.store.network}||{this.props.store.rpcUrl}||{this.props.store.webSocketURL}||isConnected:{this.props.store.isConnected.toString()}||{this.props.store.nns}</p>\r\n          {/* <p>block: {this.props.blockHeight}</p>\r\n          <p>notify: {this.props.notifyHeight}</p> */}\r\n          <pre>{JSON.stringify(this.props.store.scriptHash,null,2)}</pre>          \r\n          <div>\r\n            <div className=\"demo-loading-container\">\r\n              <Spin />\r\n              {/* <p>readyState: {this.props.store.socketReadyState}</p> */}\r\n              <p>LastWSmsg: {this.props.store.lastWSmsgSec}s</p>\r\n              <p>LastBlockTime: {NeoHelper.timetrans(this.props.store.lastBlockTime)}(before {NeoHelper.sec2HMS(parseInt((new Date().getTime()/1000 - this.props.store.lastBlockTime).toFixed(0)))})</p>\r\n            </div>\r\n            <List\r\n              bordered = {true}\r\n              dataSource={this.props.store.blockDatas}\r\n              pagination={{\r\n                onChange: (page) => {\r\n                  console.log(page);\r\n                },\r\n                pageSize: 5,\r\n              }}\r\n              renderItem={(item: { id: number; blockHeight: number; timeDiff: number; blockTime:number; blockHash:string ; txCount:number }) => (\r\n                <List.Item key={item.id}>\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src=\"https://neo-cdn.azureedge.net/images/favicon.png\" />}\r\n                    title={item.blockHeight}\r\n                    description={item.blockHash + \" tx:\" + item.txCount}\r\n                  />\r\n                  <div>({item.timeDiff + 's'}){NeoHelper.timetrans(item.blockTime)}</div>\r\n                </List.Item>\r\n              )}\r\n            ></List>\r\n          </div>\r\n        </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivDefault;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\nimport {inject,observer} from 'mobx-react';\r\n\r\ninterface OwnerInfo\r\n{\r\n    owner:string//如果长度=0 表示没有初始化\r\n    register : string \r\n    resolver: string ;\r\n    TTL: string ;\r\n    parentOwner: string ;//当此域名注册时，他爹的所有者，记录这个，则可以检测域名的爹变了\r\n    domain: string ;//如果长度=0 表示没有初始化\r\n    parenthash: string ;\r\n    root: string ;//是不是根合约\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass DivNnsCenter extends React.Component<any,any> {\r\n    // NNSh = new NNSHelper(this.props.store); \r\n\r\n    state = {\r\n        resData : '{}'\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        let invokeGetOwnerInfo =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_domaincenter,\r\n            \"operation\": \"getOwnerInfo\",\r\n            \"arguments\": [\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns)},\r\n            ],\r\n            \"network\": this.props.store.network\r\n        } \r\n\r\n        // invokeGetOwnerInfo.arguments[0].value = await this.NNSh.namehash(this.props.store.nns)\r\n        //console.log(JSON.stringify(invokeGetOwnerInfo,null,2))\r\n\r\n        var nnsOwnerInfoData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeGetOwnerInfo)) as InvokeReadInput)\r\n        var stack0:any = nnsOwnerInfoData.stack[0].value;\r\n        //console.log(JSON.stringify(nnsOwnerInfoData,null,2))\r\n        var nnsOwnerInfo:OwnerInfo = {\r\n            owner:stack0[0].value,\r\n            register:stack0[1].value,\r\n            resolver:stack0[2].value,\r\n            TTL:stack0[3].value,\r\n            parentOwner:stack0[4].value,\r\n            domain:stack0[5].value,\r\n            parenthash:stack0[6].value,\r\n            root:stack0[7].value,\r\n        }\r\n        nnsOwnerInfo.domain = NeoHelper.hex2a(nnsOwnerInfo.domain)\r\n        nnsOwnerInfo.TTL = NeoHelper.hex2TimeStr(nnsOwnerInfo.TTL)\r\n        if(nnsOwnerInfo.owner != '') nnsOwnerInfo.owner = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.byte2Hex(NeoHelper.hex2Byte(nnsOwnerInfo.owner).reverse()))\r\n        this.setState({\r\n            resData: JSON.stringify(nnsOwnerInfo, null, 2)                                 \r\n        });\r\n\r\n        //this.invokeRead(JSON.stringify(invokeRead3))\r\n    }\r\n\r\n    // handelChange(e:any){\r\n    //     this.setState({\r\n    //         inputValue:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>NNS Domain Center</p>\r\n            {/* <Input id=\"NNSinput\" placeholder=\"输入要查询的NSS域名\" onChange={this.handelChange.bind(this)} defaultValue={this.state.inputValue}/> */}\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS所有者信息</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsCenter;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\nimport {inject,observer} from 'mobx-react'\r\n\r\n// interface IProps{\r\n//     title:string\r\n//     scriptHash:any\r\n// }\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass DivNnsResolver extends React.Component<any,any> {\r\n    // NNSh = new NNSHelper(this.props.store);\r\n    \r\n    state = {\r\n        resData : '{}'\r\n    }  \r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        let invokeRead_resolve =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_resolver,\r\n            \"operation\": \"resolve\",\r\n            \"arguments\": [\r\n                {\"type\":\"String\",\"value\":\"addr\"},\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns)}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // invokeRead_resolve.arguments[1].value = await this.NNSh.namehash(this.props.store.nns)\r\n\r\n        //console.log(this.invokeRead_resolve)\r\n        var resolverData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_resolve)) as InvokeReadInput)       \r\n        //console.log(resolverData);\r\n\r\n        this.setState({\r\n            resData:NeoHelper.hex2a(resolverData.stack[0].value)==''?'未映射':NeoHelper.hex2a(resolverData.stack[0].value)                                 \r\n        });\r\n    }\r\n\r\n    // handelChange(e:any){\r\n    //     this.setState({\r\n    //         inputValue:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>NNS Resolver</p>\r\n            {/* <Input placeholder=\"输入要查询的NSS域名\" onChange={this.handelChange.bind(this)} defaultValue={this.state.inputValue}/> */}\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">解析NNS</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsResolver;","import React, { Component } from 'react';\r\nimport {autorun, observe} from 'mobx'\r\nimport {Button,Input,Spin,Statistic, Row, Col, Icon,Timeline,Drawer,Switch,InputNumber,Divider} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\nimport ReactDOM from 'react-dom';\r\nimport {inject,observer} from 'mobx-react'\r\n\r\ninterface AuctionState\r\n{\r\n    id:string; //拍卖id,就是拍卖生成的auctionid\r\n    auctionStarter:string;//域名开拍的人\r\n    parenthash:string ;//拍卖内容\r\n    domain:string ;//拍卖内容\r\n    domainTTL:string ;//域名的TTL,用这个信息来判断域名是否发生了变化\r\n    startBlockSelling:number ;//开始销售块\r\n    endBlock:number ;//结束块\r\n    maxPrice:number ;//最高出价\r\n    maxBuyer:string ;//最大出价者\r\n    lastBlock:number ;//最后出价块\r\n}\r\n\r\ninterface NNScredit\r\n{\r\n    namehash:string\r\n    fullDomainName:string \r\n    TTL:string\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass DivAuction extends React.Component<any,any> {\r\n    //NNSh = new NNSHelper(this.props.store);\r\n    //NEOh = new NeoHelper(this.props.store);\r\n    nnsInput:any\r\n    constructor(props:any){\r\n        super(props)\r\n        this.nnsInput = React.createRef();\r\n    }  \r\n\r\n    state = {\r\n        resDataRead : '{}',\r\n        reqDataWrite : '{}',\r\n        resDataWrite : '{}',\r\n        inputAmount: 0,\r\n        loadingR : true,\r\n        loadingW : false,\r\n        CGASBalance:0,\r\n        auctionBalance:0,\r\n        bidBalance:0,\r\n        auctionDay:0,\r\n        auctionStateInfo:{\r\n            \"id\": \"\",\r\n            \"auctionStarter\": \"\",\r\n            \"parenthash\": \"\",\r\n            \"domain\": \"\",\r\n            \"domainTTL\": \"\",\r\n            \"startBlockSelling\": 0,\r\n            \"endBlock\": \"\",\r\n            \"maxPrice\": \"\",\r\n            \"maxBuyer\": \"\",\r\n            \"lastBlock\": \"\"\r\n          },\r\n        CGASopValue:0,\r\n        drawerVisible: false\r\n    }  \r\n\r\n    intervalID:any\r\n    componentDidMount(){\r\n\r\n        this.intervalID = setInterval(async ()=>{\r\n            this.setState({\r\n                auctionDay :await this.calcAuctionDay(this.state.auctionStateInfo.startBlockSelling)\r\n            })           \r\n        },1000)\r\n\r\n        this.getInvokeRead_getBanlance()\r\n\r\n        // console.log(\"teemoReady:\" ,this.props.teemoReady)\r\n        // if(this.props.teemoReady)\r\n        // {\r\n        //     console.log(1)\r\n        //     this.getInvokeRead_getBanlance()\r\n        // }\r\n        // else{\r\n        //     console.log(0)\r\n        //     var intervalID = setInterval(()=>{\r\n        //         console.log(\"teemoReady:\" ,this.props.teemoReady)\r\n        //         if(this.props.teemoReady)\r\n        //         {\r\n        //             setTimeout(()=>{this.getInvokeRead_getBanlance()},1000)                   \r\n        //             clearInterval(intervalID)\r\n        //         }               \r\n        //     },1000) \r\n        // }      \r\n\r\n        window.addEventListener (\"newBlockEvent\", this.doOnEvent, false)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"newBlockEvent\", this.doOnEvent, false);\r\n        clearInterval(this.intervalID)\r\n    }\r\n\r\n    doOnEvent = (e:any) =>{\r\n        console.log('newBlockEvent',e)\r\n        if(e.detail.txidIndex > -1){\r\n            this.getInvokeRead_getBanlance()\r\n        }   \r\n    }\r\n\r\n    calcAuctionDay =async (blockIndex:number) =>{\r\n        var startTimeS = (await new NeoHelper(this.props.store).getBlock(blockIndex)).result.time as number\r\n        return  (new Date().getTime()/1000 - startTimeS)/ 60 / this.props.store.auctionMinPerDay  //每天分钟数\r\n    }\r\n\r\n    getInvokeRead_getBanlance = async () =>{\r\n        let invokeRead_CGAS_getBanlance =  {\r\n            \"scriptHash\": this.props.store.scriptHash.NEP_5_CGAS,\r\n            \"operation\": \"balanceOf\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n        let invokeRead_auction_getBanlance =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"balanceOf\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }       \r\n        let invokeRead_auction_getAuctionState =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"getAuctionStateByFullhash\",\r\n            \"arguments\": [\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns)}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }        \r\n        let invokeRead_auction_getBalanceOfBid =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"balanceOfBid\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":\"\"}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // invokeRead_CGAS_getBanlance.arguments[0].value =  this.props.store.address//await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        // this.invokeRead_auction_getBanlance.arguments[0].value =  this.props.store.address\r\n\r\n        //this.invokeRead_auction_getAuctionState.arguments[0].value = await new NNSHelper(this.props.store).namehash(this.props.store.nns)\r\n\r\n        //console.log(invokeRead_resolve)\r\n        var InvokeReadGroupInput = {group:[{}]}\r\n        InvokeReadGroupInput.group.pop()\r\n        InvokeReadGroupInput.group.push(invokeRead_CGAS_getBanlance)\r\n        InvokeReadGroupInput.group.push(invokeRead_auction_getBanlance)\r\n        InvokeReadGroupInput.group.push(invokeRead_auction_getAuctionState)\r\n        \r\n        // console.log(JSON.stringify(InvokeReadGroupInput,null,2));\r\n        \r\n        var resData:InvokeScriptResp = await Teemo.NEO.invokeReadGroup(JSON.parse(JSON.stringify(InvokeReadGroupInput)) as InvokeReadGroup)       \r\n        //console.log(resData.stack[3].value);\r\n        //console.log(resData)\r\n\r\n        if(resData.stack[0] != null){\r\n            //console.log('stack',resData.stack)\r\n            var stack2:any = resData.stack[2].value;\r\n            //console.log('stack2',stack2)\r\n\r\n            var AuctionStateInfo:AuctionState = {\r\n                id:stack2[0].value, //拍卖id,就是拍卖生成的auctionid\r\n                auctionStarter:stack2[1].value,//域名开拍的人\r\n                parenthash:stack2[2].value,//拍卖内容\r\n                domain:stack2[3].value,//拍卖内容\r\n                domainTTL:stack2[4].value,//域名的TTL,用这个信息来判断域名是否发生了变化\r\n                startBlockSelling:stack2[5].value,//开始销售块\r\n                endBlock:stack2[6].value,//结束块\r\n                maxPrice:stack2[7].value,//最高出价\r\n                maxBuyer:stack2[8].value,//最大出价者\r\n                lastBlock:stack2[9].value//最后出价块\r\n            }\r\n            AuctionStateInfo.auctionStarter = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.hexReverse(AuctionStateInfo.auctionStarter))\r\n            AuctionStateInfo.domain = NeoHelper.hex2a(AuctionStateInfo.domain)\r\n            AuctionStateInfo.domainTTL = NeoHelper.hex2TimeStr(AuctionStateInfo.domainTTL)\r\n            AuctionStateInfo.maxPrice = AuctionStateInfo.maxPrice/10**8\r\n            if(AuctionStateInfo.maxBuyer != ''){\r\n                AuctionStateInfo.maxBuyer = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.hexReverse(AuctionStateInfo.maxBuyer))\r\n            }      \r\n\r\n            //---第二轮invokescript\r\n\r\n            // this.invokeRead_auction_getBalanceOfBid.arguments[0].value = this.props.store.address\r\n            invokeRead_auction_getBalanceOfBid.arguments[1].value = AuctionStateInfo.id\r\n\r\n            var resData2:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_auction_getBalanceOfBid)) as InvokeArgs)\r\n\r\n            //console.log('AuctionStateInfo',AuctionStateInfo)\r\n\r\n            //var CGAS_balacnce = resData.stack[0].value\r\n            //console.log(NeoHelper.hex2Int(CGAS_balacnce)/10**8)\r\n\r\n            this.setState({\r\n                CGASBalance:NeoHelper.hex2Int(resData.stack[0].value)/10**8,\r\n                auctionBalance:NeoHelper.hex2Int(resData.stack[1].value)/10**8,\r\n                bidBalance:NeoHelper.hex2Int(resData2.stack[0].value)/10**8,\r\n                auctionStateInfo:AuctionStateInfo,\r\n                auctionDay:await this.calcAuctionDay(AuctionStateInfo.startBlockSelling),\r\n                resDataRead:JSON.stringify(AuctionStateInfo,null,2),\r\n                loadingR:false\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                resDataRead:\"查询异常\",\r\n                loadingR:false\r\n            })\r\n        }\r\n\r\n        \r\n\r\n        //console.log(this.state.auctionStateInfo)\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        this.getInvokeRead_getBanlance()\r\n    }\r\n\r\n    butInvoke_doCGASin_click = async () =>{\r\n        let invoke_CGAS_doCGASinStep0 =  {\r\n            \"scriptHash\": this.props.store.scriptHash.NEP_5_CGAS,\r\n            \"operation\": \"transfer\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"Address\",\"value\":await Teemo.NEO.getAddressFromScriptHash(this.props.store.scriptHash.nns_auction)},\r\n                {\"type\":\"Integer\",\"value\":this.state.CGASopValue * (10**8)}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍充值CGAS转账\",\r\n            \"network\": this.props.store.network\r\n        }\r\n        let invoke_auction_doCGASinStep1 =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"setmoneyin\",\r\n            \"arguments\": [\r\n                {\"type\":\"Hook_Txid\",\"value\":0}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍充值确认\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_CGAS_doCGASinStep0.arguments[0].value = this.props.store.address\r\n        // this.invoke_CGAS_doCGASinStep0.arguments[1].value = await Teemo.NEO.getAddressFromScriptHash(this.props.store.scriptHash.nns_auction)\r\n        // this.invoke_CGAS_doCGASinStep0.arguments[2].value = this.state.CGASopValue * (10**8)\r\n\r\n        //console.log(invoke_CGAS_doCGASinStep0)\r\n\r\n        var InvokeGroupInput = {merge:true,group:[{}]}\r\n        InvokeGroupInput.group.pop()\r\n        InvokeGroupInput.group.push(invoke_CGAS_doCGASinStep0)\r\n        InvokeGroupInput.group.push(invoke_auction_doCGASinStep1)\r\n\r\n        //console.log(InvokeGroupInput)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invokeGroup(JSON.parse(JSON.stringify(InvokeGroupInput)) as InvokeGroup)\r\n\r\n        //console.log(resp)\r\n\r\n        resp.forEach(res => {\r\n            this.props.store.addTxidSended(res.txid)\r\n        });\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(InvokeGroupInput,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doCGASout_click = async () =>{\r\n        let invoke_auction_doCGASout =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"getmoneyback\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"Integer\",\"value\":this.state.CGASopValue * (10**8)}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍CGAS提取\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doCGASout.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doCGASout.arguments[1].value = this.state.CGASopValue * (10**8)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doCGASout)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doCGASout,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doStartAuction_click = async () =>{\r\n        let invoke_auction_doStartAuction =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"startAuction\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])},\r\n                {\"type\":\"String\",\"value\":this.props.store.nns.split('.')[0]}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍开标\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doStartAuction.arguments[0].value = this.props.store.address;\r\n        // this.invoke_auction_doStartAuction.arguments[1].value = await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])\r\n        // this.invoke_auction_doStartAuction.arguments[2].value = this.props.store.nns.split('.')[0]\r\n\r\n        //console.log(invoke_auction_doStartAuction)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doStartAuction)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doStartAuction,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doBid_click = async() =>{\r\n        let invoke_auction_doBid =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"raise\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":this.state.auctionStateInfo.id},\r\n                {\"type\":\"Integer\",\"value\":(this.state.inputAmount*(10**8)).toString()}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍加价\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doBid.arguments[0].value = this.props.store.address;\r\n        // this.invoke_auction_doBid.arguments[1].value = this.state.auctionStateInfo.id\r\n        // this.invoke_auction_doBid.arguments[2].value = (this.state.inputAmount*(10**8)).toString()\r\n\r\n        console.log(invoke_auction_doBid)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doBid)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doBid,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        })\r\n    }\r\n\r\n    butInvoke_doBidSettlementAndCollect_click = async() =>{\r\n        let invoke_auction_doBidSettlement =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"bidSettlement\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":this.state.auctionStateInfo.id}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍域名领取\",\r\n            \"network\": this.props.store.network\r\n        }        \r\n        let invoke_auction_doCollect =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"collectDomain\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":this.state.auctionStateInfo.id}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍域名领取\",\r\n            \"network\": this.props.store.network\r\n        }\r\n        // this.invoke_auction_doBidSettlement.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doBidSettlement.arguments[1].value = this.state.auctionStateInfo.id\r\n\r\n        // this.invoke_auction_doCollect.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doCollect.arguments[1].value = this.state.auctionStateInfo.id\r\n\r\n        var InvokeGroupInput = {merge:false,group:[{}]}\r\n        InvokeGroupInput.group.pop()\r\n        InvokeGroupInput.group.push(invoke_auction_doBidSettlement)\r\n        InvokeGroupInput.group.push(invoke_auction_doCollect)\r\n\r\n        //console.log(JSON.stringify(InvokeGroupInput,null,2))\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invokeGroup(JSON.parse(JSON.stringify(InvokeGroupInput)) as InvokeGroup)\r\n\r\n        //console.log(resp)\r\n        resp.forEach(res => {\r\n            this.props.store.addTxidSended(res.txid)\r\n        });\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(InvokeGroupInput,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doRenew_click = async() =>{\r\n        let invoke_auction_doRenew =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"renewDomain\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])},\r\n                {\"type\":\"String\",\"value\":this.props.store.nns.split('.')[0]}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS域名续期\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doRenew.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doRenew.arguments[1].value = await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])\r\n        // this.invoke_auction_doRenew.arguments[2].value = this.props.store.nns.split('.')[0]\r\n\r\n        console.log(invoke_auction_doRenew)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doRenew)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doRenew,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        })\r\n    }\r\n\r\n    CGASopChange(e:any){\r\n        this.setState({\r\n            CGASopValue:e.target.value\r\n        })\r\n    }\r\n\r\n    // addrChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueAddr:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // nnsChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueNns:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    amountChange(e:any){\r\n        this.setState({\r\n            inputAmount:e\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>NNS Auction</p>\r\n            <Switch checked={this.props.store.auctionMinPerDay == 5?true:false} checkedChildren=\"*.test\" unCheckedChildren=\"*.neo\" defaultChecked onChange={async (e)=>{\r\n                    console.log(e)\r\n                    if(e) \r\n                    {\r\n                        this.props.store.updateAuctionMinPerDay(5)\r\n                        var newNns = this.props.store.nns.replace('.neo','.test')\r\n                        this.props.store.updateNNS(newNns);\r\n                        // console.log(this.nnsInput.current)\r\n                        this.nnsInput.current.state.value = newNns\r\n                    }\r\n                    else {\r\n                        this.props.store.updateAuctionMinPerDay(1440)\r\n                        var newNns = this.props.store.nns.replace('.test','.neo')\r\n                        this.props.store.updateNNS(newNns);\r\n                        this.nnsInput.current.state.value = newNns\r\n                    }\r\n\r\n                    this.setState({\r\n                        CGASBalance:0,\r\n                        auctionBalance:0,\r\n                        bidBalance:0,\r\n                        auctionStateInfo:{\r\n                            \"id\": \"\",\r\n                            \"auctionStarter\": \"\",\r\n                            \"parenthash\": \"\",\r\n                            \"domain\": \"\",\r\n                            \"domainTTL\": \"\",\r\n                            \"startBlockSelling\": 0,\r\n                            \"endBlock\": \"\",\r\n                            \"maxPrice\": \"\",\r\n                            \"maxBuyer\": \"\",\r\n                            \"lastBlock\": \"\"\r\n                          },\r\n                        auctionDay:await this.calcAuctionDay(0),\r\n                        resDataRead:\"{}\"\r\n                    })\r\n                    this.getInvokeRead_getBanlance()                 \r\n                }} />选择根域(流速{this.props.store.auctionMinPerDay}分钟每天)\r\n            <Divider /> \r\n            <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                        <Statistic title=\"钱包账户\" value={this.state.CGASBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Spin>                  \r\n                </Col>\r\n                <Col span={8}>\r\n                    <Row gutter={16}>\r\n                        <Col span={8}>\r\n                            <Button onClick={this.butInvoke_doCGASout_click} ><Icon type=\"left\" />提取</Button>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Input placeholder=\"输入金额\" onChange={this.CGASopChange.bind(this)} defaultValue={this.state.CGASopValue.toString()} />   \r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Button onClick={this.butInvoke_doCGASin_click} >充值<Icon type=\"right\" /></Button>\r\n                        </Col>\r\n                    </Row>                                                     \r\n                </Col>\r\n                <Col span={8}>\r\n                    <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                    <Statistic title=\"合约账户\" value={this.state.auctionBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Spin>                  \r\n                </Col>\r\n            </Row>\r\n            {/* <Input placeholder=\"输入要查询的地址\" onChange={this.addrChange.bind(this)} defaultValue={this.props.store.address}/> */}\r\n            {/* <Input placeholder=\"输入要绑定的NNS\" onChange={this.nnsChange.bind(this)} defaultValue={this.props.store.nns}/> */}\r\n            <Input placeholder=\"输入地址\" onChange={(e)=>{this.props.store.updateAddress(e.target.value)}} defaultValue={this.props.store.address}/>\r\n            <Input ref={this.nnsInput} placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">刷新数据</Button>\r\n            <Divider type=\"vertical\" />\r\n            <Button onClick={this.butInvoke_doStartAuction_click}>开标</Button>           \r\n            <Divider type=\"vertical\" />\r\n            <InputNumber min={0} max={this.state.auctionBalance} step={0.1} onChange={this.amountChange.bind(this)} />=>\r\n            <Button onClick={this.butInvoke_doBid_click}>加价</Button> \r\n            <Divider type=\"vertical\" /> \r\n            <Button onClick={this.butInvoke_doBidSettlementAndCollect_click}>结算与领取</Button>\r\n            <Divider type=\"vertical\" /> \r\n            <Button onClick={this.butInvoke_doRenew_click} disabled={this.state.auctionDay>(365-90)?false:true}>续期{(this.state.auctionDay-(365-90)).toFixed(2)}</Button>             \r\n            <Divider />         \r\n            <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                <Row type=\"flex\" align=\"middle\" gutter={16}>\r\n                    <Col span={3}>\r\n                        <Statistic title=\"开拍天数\" value={this.state.auctionDay.toFixed(2)} suffix=\"天\" prefix={<Icon type=\"clock-circle\" />} />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Switch checked={this.state.drawerVisible} onChange={()=>{this.setState({drawerVisible: !this.state.drawerVisible})}} />显示时间轴  \r\n                    </Col>\r\n                    <Col span={13}>\r\n                        <Statistic title=\"加价总数\" value={this.state.bidBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Col>\r\n                </Row>                                             \r\n                \r\n                {/* <Button type=\"primary\" onClick={()=>{this.setState({drawerVisible: true})}}>查看竞拍阶段</Button> */}\r\n                <Drawer\r\n                    title=\"竞拍阶段\"\r\n                    placement=\"left\"\r\n                    closable={false}\r\n                    onClose={()=>{this.setState({drawerVisible: false})}}\r\n                    visible={this.state.drawerVisible}\r\n                    >\r\n                        <Timeline>\r\n                            <Timeline.Item color={this.state.auctionDay>0?'green':'blue'}>确定期（1-2）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>2?'green':'blue'}>确定期（3）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>3?'green':'blue'}>随机期（4-5）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>5?'green':'blue'}>竞拍结束（5）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>(365-90)?'green':'blue'}>续期期（365-90）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>365?'green':'blue'}>到期（365）</Timeline.Item>\r\n                        </Timeline>\r\n                    </Drawer>\r\n                <pre>{this.state.resDataRead}</pre>\r\n            </Spin>\r\n            {/* <pre>{this.state.reqDataWrite}</pre> */}\r\n            <Spin tip='请求中' spinning={this.state.loadingW}>\r\n                <pre>{this.state.resDataWrite}</pre>\r\n            </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivAuction;","import React, { Component } from 'react';\r\nimport {autorun} from 'mobx'\r\nimport {Button,Input,Spin} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\nimport {inject,observer} from 'mobx-react'\r\n\r\ninterface NNScredit\r\n{\r\n    namehash:string\r\n    fullDomainName:string \r\n    TTL:string\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass DivNnsCredit extends React.Component<any,any> {\r\n    state = {\r\n        resDataRead : '{}',\r\n        reqDataWrite : '{}',\r\n        resDataWrite : '{}',\r\n        loadingR : false,\r\n        loadingW : false\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener (\"newBlockEvent\", this.doOnEvent, false)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"newBlockEvent\", this.doOnEvent, false);\r\n    }\r\n\r\n    doOnEvent = (e:any) =>{\r\n        console.log('newBlockEvent',e)\r\n        if(e.detail.txidIndex > -1){\r\n            this.getInvokeRead()\r\n        }  \r\n    }\r\n\r\n    getInvokeRead = async () =>{\r\n        let invokeRead_credit =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_credit,\r\n            \"operation\": \"getCreditInfo\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":\"\"}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        invokeRead_credit.arguments[0].value =  this.props.store.address//await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        console.log(JSON.stringify(invokeRead_credit,null,2))\r\n        var creditData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_credit)) as InvokeReadInput)       \r\n        //console.log(creditData);\r\n\r\n        if(creditData.stack[0] != null){\r\n            var stack0:any = creditData.stack[0].value;\r\n            var creditInfo:NNScredit = {\r\n                namehash:stack0[0].value,\r\n                fullDomainName:stack0[1].value,\r\n                TTL:stack0[2].value,\r\n            }\r\n            creditInfo.fullDomainName = NeoHelper.hex2a(creditInfo.fullDomainName)\r\n            creditInfo.TTL = NeoHelper.hex2TimeStr(creditInfo.TTL)\r\n    \r\n            this.setState({\r\n                resDataRead:JSON.stringify(creditInfo, null, 2),\r\n                loadingR:false                                 \r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                resDataRead:\"从未映射\",\r\n                loadingR:false                                 \r\n            });\r\n        }\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        this.getInvokeRead()\r\n    }\r\n\r\n    butInvokeCreditAuthenticateClick = async(e:any) => {\r\n        let invoke_credit_authenticate =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_credit,\r\n            \"operation\": \"authenticate\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":\"\"},\r\n                {\"type\":\"Array\",\"value\":[]}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS反向解析绑定\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        invoke_credit_authenticate.arguments[0].value = this.props.store.address\r\n        invoke_credit_authenticate.arguments[1].value = []\r\n        for (const str of this.props.store.nns.split('.').reverse()) {\r\n            ((invoke_credit_authenticate.arguments as Argument[])[1].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditAuthenticateResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_authenticate)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditAuthenticateResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_authenticate,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditAuthenticateResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvokeCreditRevokeClick = async(e:any) => {\r\n        let invoke_credit_revoke =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_credit,\r\n            \"operation\": \"revoke\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":\"\"},\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS反向解析解绑\",\r\n            \"network\": this.props.store.network\r\n        }  \r\n\r\n        invoke_credit_revoke.arguments[0].value = this.props.store.address\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditRevokeResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_revoke)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditRevokeResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_revoke,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditRevokeResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                                                                 \r\n        });\r\n    }\r\n\r\n    // addrChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueAddr:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // nnsChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueNns:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>NNS Credit</p>\r\n            {/* <Input placeholder=\"输入要查询的地址\" onChange={this.addrChange.bind(this)} defaultValue={this.state.inputValueAddr}/>\r\n            <Input placeholder=\"输入要绑定的NNS\" onChange={this.nnsChange.bind(this)} defaultValue={this.state.inputValueNns}/> */}\r\n            <Input placeholder=\"输入地址\" onChange={(e)=>{this.props.store.updateAddress(e.target.value)}} defaultValue={this.props.store.address}/>\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS反向解析信息</Button>\r\n            <Button onClick={this.butInvokeCreditAuthenticateClick}>绑定</Button>\r\n            <Button onClick={this.butInvokeCreditRevokeClick}>解绑</Button>\r\n            <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                <pre>{this.state.resDataRead}</pre>\r\n            </Spin>\r\n            {/* <pre>{this.state.reqDataWrite}</pre> */}\r\n            <Spin tip='请求中' spinning={this.state.loadingW}>\r\n                <pre>{this.state.resDataWrite}</pre>\r\n            </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsCredit;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, observer } from \"mobx-react\";\nimport Store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router, Route,BrowserRouter } from 'react-router-dom'\n\nimport DivDefault from './components/divDefault';\nimport DivNnsCenter from './components/divNnsCenter';\nimport DivNnsResolver from './components/divNnsResolver';\nimport DivAuction from './components/divAuction';\nimport DivNnsCredit from './components/divNnsCredit';\n\nconst store = new Store();\n\nReactDOM.render(\n        <Provider store={store}>\n                <BrowserRouter basename=\"/nns\">\n                        <App>\n                                <Route path=\"/\" exact  component={DivDefault}/>\n                                <Route path=\"/nnscenter\" component={DivNnsCenter}/>\n                                <Route path=\"/nnsresolver\" component={DivNnsResolver}/>\n                                <Route path=\"/nnsauction\" component={DivAuction}/>\n                                <Route path=\"/nnscredit\" component={DivNnsCredit}/>\n                        </App>\n                </BrowserRouter>\n        </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}