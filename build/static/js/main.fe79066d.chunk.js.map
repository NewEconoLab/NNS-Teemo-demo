{"version":3,"sources":["Tools/nnsHelper.tsx","Comp/divDefault.tsx","Tools/neoHelper.tsx","Comp/divNnsCenter.tsx","Comp/divNnsResolver.tsx","Comp/divNnsCredit.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["invokeRead_nameHashArray","scriptHash","operation","arguments","type","value","network","NNSHelper","Object","classCallCheck","this","namehash","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","nns","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","str","invokeResp","wrap","_context","prev","next","undefined","split","reverse","Symbol","iterator","done","push","t0","return","finish","Teemo","NEO","invokeRead","JSON","parse","stringify","sent","stack","abrupt","stop","_x","apply","nns_domaincenter","DivDefault","NNSh","_this","props","state","resData","inputValueAddr","inputValueNns","react_default","createElement","Fragment","title","address","React","Component","NeoHelper","hex2a","hexx","hex","toString","i","length","substr","String","fromCharCode","parseInt","byte2Hex","uint8arr","hexStr","toLowerCase","hex2Byte","Uint8Array","len","timetrans","timestamp","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","invokeGetOwnerInfo","DivNnsCenter","inputValue","butGetInvokeReadClick","e","nnsOwnerInfoData","stack0","nnsOwnerInfo","console","log","owner","register","resolver","TTL","parentOwner","domain","parenthash","root","setState","target","input","id","placeholder","onChange","handelChange","bind","defaultValue","es_button","onClick","invokeRead_resolve","DivNnsResolver","resolverData","nns_resolver","invokeRead_credit","invoke_credit_authenticate","fee","description","invoke_credit_revoke","DivNnsCredit","creditData","creditInfo","fullDomainName","butInvokeCreditAuthenticateClick","_callee2","invokeCreditAuthenticateResp","_context2","invoke","butInvokeCreditRevokeClick","_callee3","invokeCreditRevokeResp","_context3","nns_credit","addrChange","nnsChange","Header","Layout","Content","Footer","Sider","App","menuID","init","window","addEventListener","data","getAccount","t1","t2","call","menuClick","key","div_main","divDefault","divNnsCenter","divNnsResolver","divNnsCredit","layout","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","className","menu","theme","mode","defaultSelectedKeys","Item","icon","style","background","padding","margin","minHeight","textAlign","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe79066d.chunk.js","sourcesContent":["import { async } from \"q\";\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nlet invokeRead_nameHashArray = {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"nameHashArray\",\r\n    \"arguments\": [\r\n        {\"type\":\"Array\",\"value\":[]},\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\n\r\nclass NNSHelper {\r\n    constructor(scriptHash:any) {\r\n        invokeRead_nameHashArray.scriptHash = scriptHash.nns_domaincenter\r\n    }\r\n\r\n    public namehash = async (nns:string) => {\r\n        var namehash = \"\"\r\n\r\n        invokeRead_nameHashArray.arguments[0].value = [];\r\n        for (const str of nns.split('.').reverse()) {\r\n            ((invokeRead_nameHashArray.arguments as Argument[])[0].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n        //console.log(invokeRead_nameHashArray)\r\n        //console.log(JSON.stringify(invokeRead_nameHashArray))\r\n        var invokeResp:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_nameHashArray)) as InvokeReadInput)\r\n        //console.log(invokeResp)\r\n        namehash = invokeResp.stack[0].value\r\n\r\n        return namehash\r\n    }\r\n}\r\n\r\nexport default NNSHelper;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface IProps{\r\n    title:string\r\n    address:string\r\n    scriptHash:any\r\n}\r\n\r\ninterface NNScredit\r\n{\r\n    namehash:string\r\n    fullDomainName:string \r\n    TTL:string\r\n}\r\n\r\nclass DivDefault extends React.Component<IProps,any> {\r\n    NNSh = new NNSHelper(this.props.scriptHash);\r\n\r\n    state = {\r\n        resData : '{}',\r\n        inputValueAddr : 'ASBhJFN3XiDu38EdEQyMY3N2XwGh1gd5WW',\r\n        inputValueNns : 'qmz.test'\r\n    }  \r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            <p>{this.props.address}</p>\r\n            <pre>{JSON.stringify(this.props.scriptHash,null,2)}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivDefault;","class NeoHelper {\r\n\r\n    public static hex2a = (hexx:string) => {\r\n        var hex = hexx.toString();//force conversion\r\n        var str = '';\r\n        for (var i = 0; (i < hex.length && hex.substr(i, 2) !== '00'); i += 2)\r\n            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\r\n        return str;\r\n    }\r\n\r\n    public static byte2Hex = (uint8arr:Uint8Array) => {\r\n        if (!uint8arr) {\r\n          return '';\r\n        }\r\n        \r\n        var hexStr = '';\r\n        for (var i = 0; i < uint8arr.length; i++) {\r\n          var hex = (uint8arr[i] & 0xff).toString(16);\r\n          hex = (hex.length === 1) ? '0' + hex : hex;\r\n          hexStr += hex;\r\n        }\r\n        \r\n        return hexStr.toLowerCase();\r\n    }\r\n\r\n    public static hex2Byte = (str:string) => {\r\n        if (!str) {\r\n          return new Uint8Array();\r\n        }\r\n        \r\n        var a = [];\r\n        for (var i = 0, len = str.length; i < len; i+=2) {\r\n          a.push(parseInt(str.substr(i,2),16));\r\n        }\r\n        \r\n        return new Uint8Array(a);\r\n    }\r\n\r\n    public static timetrans = (timestamp:number)=>{\r\n        var date = new Date(timestamp*1000);//如果date为13位不需要乘1000\r\n        var Y = date.getFullYear() + '-';\r\n        var M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';\r\n        var D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\r\n        var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\r\n        var m = (date.getMinutes() <10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\r\n        var s = (date.getSeconds() <10 ? '0' + date.getSeconds() : date.getSeconds());\r\n        return Y+M+D+h+m+s;\r\n    }\r\n}\r\n\r\nexport default NeoHelper;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface IProps{\r\n    title:string\r\n    scriptHash:any\r\n}\r\n\r\ninterface OwnerInfo\r\n{\r\n    owner:string//如果长度=0 表示没有初始化\r\n    register : string \r\n    resolver: string ;\r\n    TTL: string ;\r\n    parentOwner: string ;//当此域名注册时，他爹的所有者，记录这个，则可以检测域名的爹变了\r\n    domain: string ;//如果长度=0 表示没有初始化\r\n    parenthash: string ;\r\n    root: string ;//是不是根合约\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nlet invokeGetOwnerInfo =  {\r\n    \"scriptHash\": \"348387116c4a75e420663277d9c02049907128c7\",\r\n    \"operation\": \"getOwnerInfo\",\r\n    \"arguments\": [\r\n        {\"type\":\"ByteArray\",\"value\":\"\"},\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nclass DivNnsCenter extends React.Component<IProps,any> {\r\n    NNSh = new NNSHelper(this.props.scriptHash);\r\n\r\n    state = {\r\n        resData : '{}',\r\n        inputValue : 'qmz.test'\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        invokeGetOwnerInfo.arguments[0].value = await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        var nnsOwnerInfoData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeGetOwnerInfo)) as InvokeReadInput)\r\n        var stack0:any = nnsOwnerInfoData.stack[0].value;\r\n        console.log(nnsOwnerInfoData)\r\n        var nnsOwnerInfo:OwnerInfo = {\r\n            owner:stack0[0].value,\r\n            register:stack0[1].value,\r\n            resolver:stack0[2].value,\r\n            TTL:stack0[3].value,\r\n            parentOwner:stack0[4].value,\r\n            domain:stack0[5].value,\r\n            parenthash:stack0[6].value,\r\n            root:stack0[7].value,\r\n        }\r\n        nnsOwnerInfo.domain = NeoHelper.hex2a(nnsOwnerInfo.domain)\r\n        nnsOwnerInfo.TTL = NeoHelper.timetrans(parseInt(NeoHelper.byte2Hex(NeoHelper.hex2Byte(nnsOwnerInfo.TTL).reverse()), 16))\r\n        this.setState({\r\n            resData: JSON.stringify(nnsOwnerInfo, null, 2)                                 \r\n        });\r\n\r\n        //this.invokeRead(JSON.stringify(invokeRead3))\r\n    }\r\n\r\n    handelChange(e:any){\r\n        this.setState({\r\n            inputValue:e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            <Input id=\"NNSinput\" placeholder=\"输入要查询的NSS域名\" onChange={this.handelChange.bind(this)} defaultValue={this.state.inputValue}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS所有者信息</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsCenter;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface IProps{\r\n    title:string\r\n    scriptHash:any\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nlet invokeRead_resolve =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"resolve\",\r\n    \"arguments\": [\r\n        {\"type\":\"String\",\"value\":\"addr\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"}\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nclass DivNnsResolver extends React.Component<IProps,any> {\r\n    NNSh = new NNSHelper(this.props.scriptHash);\r\n\r\n    state = {\r\n        resData : '{}',\r\n        inputValue : 'qmz.test'\r\n    }  \r\n\r\n    componentDidMount(){\r\n        invokeRead_resolve.scriptHash = this.props.scriptHash.nns_resolver\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        invokeRead_resolve.arguments[1].value = await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        //console.log(invokeRead_resolve)\r\n        var resolverData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_resolve)) as InvokeReadInput)       \r\n        //console.log(resolverData);\r\n\r\n        this.setState({\r\n            resData:NeoHelper.hex2a(resolverData.stack[0].value)                                 \r\n        });\r\n    }\r\n\r\n    handelChange(e:any){\r\n        this.setState({\r\n            inputValue:e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            <Input placeholder=\"输入要查询的NSS域名\" onChange={this.handelChange.bind(this)} defaultValue={this.state.inputValue}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS所有者信息</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsResolver;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface IProps{\r\n    title:string\r\n    address:string\r\n    scriptHash:any\r\n}\r\n\r\ninterface NNScredit\r\n{\r\n    namehash:string\r\n    fullDomainName:string \r\n    TTL:string\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nlet invokeRead_credit =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"getCreditInfo\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"}\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_credit_authenticate =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"authenticate\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"Array\",\"value\":[]}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS反向解析绑定\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_credit_revoke =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"revoke\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS反向解析解绑\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nclass DivNnsCredit extends React.Component<IProps,any> {\r\n    NNSh = new NNSHelper(this.props.scriptHash);\r\n\r\n    state = {\r\n        resData : '{}',\r\n        inputValueAddr : this.props.address,\r\n        inputValueNns : 'qmz.test'\r\n    }  \r\n\r\n    componentDidMount(){\r\n        invokeRead_credit.scriptHash = this.props.scriptHash.nns_credit\r\n        invoke_credit_authenticate.scriptHash = this.props.scriptHash.nns_credit\r\n        invoke_credit_revoke.scriptHash = this.props.scriptHash.nns_credit\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        invokeRead_credit.arguments[0].value =  this.state.inputValueAddr//await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        //console.log(invokeRead_resolve)\r\n        var creditData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_credit)) as InvokeReadInput)       \r\n        //console.log(creditData);\r\n\r\n        var stack0:any = creditData.stack[0].value;\r\n        var creditInfo:NNScredit = {\r\n            namehash:stack0[0].value,\r\n            fullDomainName:stack0[1].value,\r\n            TTL:stack0[2].value,\r\n        }\r\n        creditInfo.fullDomainName = NeoHelper.hex2a(creditInfo.fullDomainName)\r\n        creditInfo.TTL = NeoHelper.timetrans(parseInt(NeoHelper.byte2Hex(NeoHelper.hex2Byte(creditInfo.TTL).reverse()), 16))\r\n\r\n        this.setState({\r\n            resData:JSON.stringify(creditInfo, null, 2)                                 \r\n        });\r\n    }\r\n\r\n    butInvokeCreditAuthenticateClick = async(e:any) => {\r\n        invoke_credit_authenticate.arguments[0].value = this.state.inputValueAddr\r\n        for (const str of this.state.inputValueNns.split('.').reverse()) {\r\n            ((invoke_credit_authenticate.arguments as Argument[])[1].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n\r\n        var invokeCreditAuthenticateResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_authenticate)) as InvokeArgs)\r\n\r\n        this.setState({\r\n            resData:JSON.stringify(invokeCreditAuthenticateResp, null, 2)                                 \r\n        });\r\n    }\r\n\r\n    butInvokeCreditRevokeClick = async(e:any) => {\r\n        invoke_credit_revoke.arguments[0].value = this.state.inputValueAddr\r\n\r\n        var invokeCreditRevokeResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_revoke)) as InvokeArgs)\r\n\r\n        this.setState({\r\n            resData:JSON.stringify(invokeCreditRevokeResp, null, 2)                                 \r\n        });\r\n    }\r\n\r\n    addrChange(e:any){\r\n        this.setState({\r\n            inputValueAddr:e.target.value\r\n        })\r\n    }\r\n\r\n    nnsChange(e:any){\r\n        this.setState({\r\n            inputValueNns:e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            <Input placeholder=\"输入要查询的地址\" onChange={this.addrChange.bind(this)} defaultValue={this.state.inputValueAddr}/>\r\n            <Input placeholder=\"输入要绑定的NNS\" onChange={this.nnsChange.bind(this)} defaultValue={this.state.inputValueNns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS反向代理信息</Button>\r\n            <Button onClick={this.butInvokeCreditAuthenticateClick}>绑定</Button>\r\n            <Button onClick={this.butInvokeCreditRevokeClick}>解绑</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsCredit;","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Menu, Icon } from 'antd';\nimport { any } from 'prop-types';\nimport DivDefault from './Comp/divDefault';\nimport DivNnsCenter from './Comp/divNnsCenter';\nimport DivNnsResolver from './Comp/divNnsResolver';\nimport DivNnsCredit from './Comp/divNnsCredit';\n\nconst {\n  Header, Content, Footer, Sider,\n} = Layout;\n\nconst scriptHash = {\n  nns_domaincenter : \"348387116c4a75e420663277d9c02049907128c7\",\n  nns_resolver : \"6e2aea28af9c5febea0774759b1b76398e3167f1\",\n  nns_credit : \"77bf387c9b5f2e2c33ef8507478b103285c55b11\"\n}\n\nlet div_defult = () =>{\n  return <p>div_defult</p>\n}\n\nclass App extends Component {\n  state = {\n    menuID: 1,\n    address : 'address'\n  }\n\n  componentDidMount(){\n    this.init()\n  }\n\n  init=()=>{\n    //console.log(\"this is init\");\n    \n    window.addEventListener('Teemo.NEO.READY',async (data)=>{\n      console.log(\"inject READY \");\n      this.setState({\n        address: (await Teemo.NEO.getAccount()).address                       \n      });  \n      //console.log(JSON.stringify(data.detail))\n    })\n  }\n\n  menuClick = (e:any) => {\n    console.log('menu Click', e);\n    this.setState({\n      menuID: e.key\n    });\n  }\n\n  render() {\n    let div_main = null;\n    if (this.state.menuID == 1) {\n      div_main = <DivDefault title=\"default Page\" address={this.state.address} scriptHash={scriptHash} />\n    } \n    else if (this.state.menuID == 2) {\n      div_main = <DivNnsCenter title=\"NNS Domain Center\" scriptHash={scriptHash} />\n    }\n    else if (this.state.menuID == 3) {\n      div_main = <DivNnsResolver title=\"NNS Resolver\" scriptHash={scriptHash} />\n    }\n    else if (this.state.menuID == 4) {\n      div_main = <DivNnsCredit title=\"NNS Credit\" address={this.state.address}  scriptHash={scriptHash} />\n    }\n    else {\n      div_main = div_defult()\n    }\n\n    return (\n      <Layout>\n        <Sider\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          onBreakpoint={(broken) => { console.log(broken); }}\n          onCollapse={(collapsed, type) => { console.log(collapsed, type); }}\n        >\n          <div className=\"logo\" />\n          <Menu onClick={this.menuClick}  theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">Default Page</span>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS Center</span>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS resolver</span>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS Credit</span>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }} />\n          <Content style={{ margin: '24px 16px 0' }}>\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                {div_main}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>\n            NNS ©2019 Created by NEL\n          </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}