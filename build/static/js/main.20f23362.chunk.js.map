{"version":3,"sources":["store.ts","Tools/neoHelper.tsx","Tools/nnsHelper.tsx","components/divDefault.tsx","components/divNnsCenter.tsx","components/divNnsResolver.tsx","components/divAuction.tsx","components/divNnsCredit.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Store","webSocketURL","_this","this","Object","classCallCheck","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","updateLastWSmsgSec","lastWSmsgSec","Date","getTime","lastWSmsgTime","socketInit","socketReadyState","socket","readyState","time","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","pushEvent","eventName","eventData","event","CustomEvent","detail","window","dispatchEvent","getDelay","parseInt","toFixed","_descriptor16","setInterval","observable","nns_domaincenter","nns_resolver","nns_auction","nns_credit","NEP_5_CGAS","NEP_5_NNC","action","addr","_this2","address","net","_this3","network","nns","_this4","blockHeight","blockTime","blockHash","timeDiff","txid","_this5","txids","unshift","_this6","blockDatas","WebSocket","onclose","console","log","notification","warning","message","description","onerror","error","onopen","send","success","onmessage","data","socketMsgs","JSON","parse","txidIndex","length","tx","findIndex","element","info","blockInsertTime","svrSystemTime","blockHeightDataArray","shift","pop","blockData","lastBlockTime","NeoHelper","getAddressFromScriptHash","getBlock","_callee","blockIndex","result","regenerator_default","a","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","hex2a","hexx","hex","toString","str","i","substr","String","fromCharCode","hex2Int","byte2Hex","hex2Byte","reverse","hex2TimeStr","timetrans","hexReverse","uint8arr","hexStr","toLowerCase","Uint8Array","len","push","timestamp","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","sec2HMS","sec","h","m","s","invokeRead_nameHashArray","scriptHash","operation","arguments","type","value","NNSHelper","namehash","_ref","asyncToGenerator","mark","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","invokeResp","undefined","split","Symbol","iterator","done","t0","return","finish","Teemo","NEO","invokeRead","stringify","stack","_x","apply","DivDefault","observer","NNSh","props","store","state","resData","react_default","createElement","Fragment","title","className","spin","list","bordered","dataSource","pagination","onChange","page","pageSize","renderItem","item","Item","key","id","Meta","avatar","src","React","Component","invokeGetOwnerInfo","DivNnsCenter","butGetInvokeReadClick","e","nnsOwnerInfoData","stack0","nnsOwnerInfo","owner","register","resolver","TTL","parentOwner","domain","parenthash","root","setState","input","placeholder","updateNNS","target","defaultValue","es_button","onClick","invokeRead_resolve","DivNnsResolver","resolverData","invokeRead_CGAS_getBanlance","invokeRead_auction_getBanlance","invokeRead_auction_getAuctionState","invokeRead_auction_getBalanceOfBid","invoke_CGAS_doCGASinStep0","fee","invoke_auction_doCGASinStep1","invoke_auction_doCGASout","invoke_auction_doStartAuction","invoke_auction_doBid","invoke_auction_doBidSettlement","invoke_auction_doCollect","invoke_auction_doRenew","invoke_credit_authenticate","invoke_credit_revoke","DivAuction","resDataRead","reqDataWrite","resDataWrite","inputAmount","loadingR","loadingW","CGASBalance","auctionBalance","bidBalance","auctionDay","auctionStateInfo","auctionStarter","domainTTL","startBlockSelling","endBlock","maxPrice","maxBuyer","lastBlock","CGASopValue","drawerVisible","intervalID","doOnEvent","getInvokeRead_getBanlance","calcAuctionDay","startTimeS","_callee2","InvokeReadGroupInput","stack2","AuctionStateInfo","resData2","_context2","group","invokeReadGroup","Math","pow","t1","t2","t3","t4","t5","t6","t7","call","_callee3","_context3","butInvoke_doCGASin_click","_callee4","InvokeGroupInput","resp","_context4","merge","invokeGroup","forEach","res","addTxidSended","butInvoke_doCGASout_click","_callee5","_context5","invoke","butInvoke_doStartAuction_click","_callee6","_context6","butInvoke_doBid_click","_callee7","_context7","butInvoke_doBidSettlementAndCollect_click","_callee8","_context8","butInvoke_doRenew_click","_callee9","_context9","butInvokeCreditAuthenticateClick","_callee10","invokeCreditAuthenticateResp","_context10","butInvokeCreditRevokeClick","_callee11","invokeCreditRevokeResp","_context11","_callee12","_context12","addEventListener","removeEventListener","clearInterval","row","gutter","col","span","tip","spinning","statistic","suffix","prefix","icon","CGASopChange","bind","updateAddress","divider","input_number","min","max","step","amountChange","disabled","align","es_switch","checked","drawer","placement","closable","onClose","visible","timeline","color","invokeRead_credit","DivNnsCredit","getInvokeRead","creditData","creditInfo","fullDomainName","Header","Layout","Content","Footer","Sider","App","menuID","average","arr","nums","concat","toConsumableArray","reduce","acc","val","init","_ref2","getAccount","getNetworks","defaultNetwork","updateNetwork","menuClick","div_main","divDefault","divNnsCenter","divNnsResolver","divAuction","divNnsCredit","layout","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","menu","theme","mode","defaultSelectedKeys","style","background","padding","margin","minHeight","textAlign","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20f23362.chunk.js","sourcesContent":["import {observable, action, computed} from 'mobx';\r\nimport { notification } from 'antd';\r\nimport NeoHelper from './Tools/neoHelper';\r\n\r\nclass Store {\r\n    @observable scriptHash = {\r\n        nns_domaincenter : \"348387116c4a75e420663277d9c02049907128c7\",\r\n        nns_resolver : \"6e2aea28af9c5febea0774759b1b76398e3167f1\",\r\n        nns_auction:\"5fd8c2aed0eec0fa103f6fba16748b453baf5b2e\",\r\n        nns_credit : \"77bf387c9b5f2e2c33ef8507478b103285c55b11\",\r\n        NEP_5_CGAS:\"74f2dc36a68fdc4682034178eb2220729231db76\",\r\n        NEP_5_NNC:\"fc732edee1efdf968c23c20a9628eaa5a6ccb934\"\r\n    }\r\n\r\n    @observable network = 'network'\r\n    @observable address:string = 'A**********************'\r\n    @observable nns:string='qmz.test'\r\n    @action public updateAddress = (addr:string) =>{\r\n        this.address = addr\r\n    }\r\n    @action public updateNetwork = (net:string) =>{\r\n        this.network = net\r\n    }\r\n    @action public updateNNS = (nns:string) =>{\r\n        this.nns = nns\r\n    }\r\n\r\n    webSocketURL: string;\r\n    constructor(webSocketURL:string){\r\n        this.webSocketURL = webSocketURL\r\n        setInterval(this.updateLastWSmsgSec,1000)\r\n        this.socketInit()\r\n    }\r\n\r\n    updateLastWSmsgSec = () =>{     \r\n        this.lastWSmsgSec=(new Date().getTime() - this.lastWSmsgTime)/1000\r\n\r\n        //webstock 如果2分钟取不到最新块，会发送心跳数据包\r\n        if(this.lastWSmsgSec>75){\r\n            \r\n            this.lastWSmsgTime=new Date().getTime(),\r\n            this.lastWSmsgSec=0\r\n\r\n            this.socketInit()\r\n        }\r\n\r\n        this.socketReadyState = this.socket.readyState\r\n    }\r\n\r\n    socket: any;\r\n    time = new Date().getTime()\r\n    @observable socketReadyState = -1\r\n    @observable socketMsgs:Array<any> = []\r\n    @observable blockDatas=[{\r\n        blockHeight:-1,\r\n        blockTime:0,\r\n        blockHash:'',\r\n        timeDiff:0\r\n      }]\r\n    @observable lastBlockTime=0\r\n    @observable lastWSmsgTime=new Date().getTime()\r\n    @observable lastWSmsgSec=0\r\n\r\n    // @computed get lastBlockTime(){\r\n    //     if(this.blockData.length >1){\r\n    //         return this.blockData[0].time\r\n    //     }\r\n    //     else return 0\r\n    // }\r\n    @observable txids:string[] = []\r\n    @action public addTxidSended =(txid:string) =>{\r\n        this.txids.unshift('0x' + txid)\r\n    }\r\n\r\n    pushEvent =(eventName:string,eventData:any) =>{\r\n        var event = new CustomEvent(eventName, { \r\n            detail: eventData\r\n        });\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    getDelay = (time:number) =>{\r\n        return parseInt((new Date().getTime()/1000 - time).toFixed(0)) + 's'\r\n    }\r\n\r\n    @action socketInit =() =>{\r\n        this.blockDatas=[{\r\n            blockHeight:-1,\r\n            blockTime:0,\r\n            blockHash:'',\r\n            timeDiff:0\r\n          }]\r\n\r\n        this.socket = new WebSocket(this.webSocketURL);\r\n    \r\n        this.socket.onclose = (event:any) => {\r\n            console.log(event);\r\n            notification.warning({message:'websocket',description:'close'})\r\n        };\r\n        this.socket.onerror = (event:any) => {\r\n            console.log(event);\r\n            notification.error({message:'websocket',description:'error'})\r\n        };\r\n        this.socket.onopen = (event:any) =>{\r\n            console.log(event);\r\n            this.socket.send('Hello Server!');\r\n            notification.success({message:'websocket',description:'open'})\r\n        }\r\n        this.socket.onmessage = (event:any) =>{\r\n            console.log(event);\r\n            console.log(event.data);\r\n\r\n            this.socketMsgs.unshift(event.data);\r\n\r\n            this.lastWSmsgTime = new Date().getTime()\r\n    \r\n            //let timeDiff = new Date().getTime() - this.time;\r\n            this.time = new Date().getTime()\r\n            //console.log(timeDiff.toString() + 'ms')\r\n            var data = JSON.parse(event.data).data\r\n            if(data.blockHeight != null){\r\n                var txidIndex = -1\r\n                if(this.txids.length>0){                  \r\n                    txidIndex = data.tx.findIndex((element:any)=>{\r\n                        return element.txid === this.txids[0]\r\n                    })\r\n                    //console.log({txid:this.txids[0]},data.tx,txidIndex)\r\n                }\r\n                notification.info({message:data.blockHeight,description:'delay: ' + this.getDelay(data.blockTime) + '/' + this.getDelay(data.blockInsertTime) + '/' + this.getDelay(data.svrSystemTime) + '||txidIndex:' + txidIndex})\r\n\r\n                var blockHeightDataArray = this.blockDatas\r\n\r\n                if(blockHeightDataArray[0].blockHeight == -1 ) blockHeightDataArray.shift()\r\n                if(blockHeightDataArray.length>=50) blockHeightDataArray.pop()\r\n\r\n                let timeDiff = 0\r\n                if(blockHeightDataArray.length > 0) timeDiff = (data.blockTime - blockHeightDataArray[0].blockTime)\r\n                let blockData = data // {height:data.blockHeight,time:data.blockTime,hash:data.blockHash,timeDiff:timeDiff}\r\n                blockData['timeDiff'] = timeDiff\r\n                blockData['txidIndex'] = txidIndex\r\n                blockHeightDataArray.unshift(blockData)\r\n                this.pushEvent('newBlockEvent',blockData)            \r\n        \r\n                this.blockDatas = blockHeightDataArray\r\n                this.lastBlockTime = data.blockTime\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Store","import { async } from \"q\";\r\n\r\nclass NeoHelper {\r\n    public static getAddressFromScriptHash = () =>{\r\n        //根据合约notify输出的scripthash，转换为NEO地址\r\n    }\r\n\r\n    public static getBlock = async (blockIndex:number) =>{\r\n      let result = await fetch('http://test.nel.group:20332?jsonrpc=2.0&method=getblock&params=[' + blockIndex +',1]&id=1', {\r\n        // method: 'post',\r\n        // headers: {\r\n        //   'user-agent': 'Mozilla/4.0 MDN Example',\r\n        //   'content-type': 'application/json'\r\n        // },\r\n        // body: JSON.stringify({\r\n        //   \"jsonrpc\": \"2.0\",\r\n        //   \"method\": \"getblock\",\r\n        //   \"params\": [blockIndex, 1],\r\n        //   \"id\": 1\r\n        // })\r\n      });\r\n      let data = await result.json();\r\n      return data;\r\n    }\r\n\r\n    public static hex2a = (hexx:string) => {\r\n        var hex = hexx.toString();//force conversion\r\n        var str = '';\r\n        for (var i = 0; (i < hex.length && hex.substr(i, 2) !== '00'); i += 2)\r\n            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\r\n        return str;\r\n    }\r\n\r\n    public static hex2Int = (hexx:string) =>{\r\n      if(hexx=='') return 0\r\n      return parseInt(NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse()), 16)\r\n    }\r\n\r\n    public static hex2TimeStr = (hexx:string) =>{\r\n      return NeoHelper.timetrans(parseInt(NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse()), 16))\r\n    }\r\n\r\n    public static hexReverse = (hexx:string)=>{\r\n      return NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse())\r\n    }\r\n\r\n    public static byte2Hex = (uint8arr:Uint8Array) => {\r\n        if (!uint8arr) {\r\n          return '';\r\n        }\r\n        \r\n        var hexStr = '';\r\n        for (var i = 0; i < uint8arr.length; i++) {\r\n          var hex = (uint8arr[i] & 0xff).toString(16);\r\n          hex = (hex.length === 1) ? '0' + hex : hex;\r\n          hexStr += hex;\r\n        }\r\n        \r\n        return hexStr.toLowerCase();\r\n    }\r\n\r\n    public static hex2Byte = (str:string) => {\r\n        if (!str) {\r\n          return new Uint8Array();\r\n        }\r\n        \r\n        var a = [];\r\n        for (var i = 0, len = str.length; i < len; i+=2) {\r\n          a.push(parseInt(str.substr(i,2),16));\r\n        }\r\n        \r\n        return new Uint8Array(a);\r\n    }\r\n\r\n    public static timetrans = (timestamp:number)=>{\r\n        var date = new Date(timestamp*1000);//如果date为13位不需要乘1000\r\n        var Y = date.getFullYear() + '-';\r\n        var M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';\r\n        var D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\r\n        var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\r\n        var m = (date.getMinutes() <10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\r\n        var s = (date.getSeconds() <10 ? '0' + date.getSeconds() : date.getSeconds());\r\n        return Y+M+D+h+m+s;\r\n    }\r\n\r\n    public static sec2HMS = (sec:number) =>{\r\n      let h=0\r\n      let m=0\r\n      let s=0\r\n      if((sec % 3600) > 0){\r\n        h = parseInt((sec/3600).toString())\r\n        sec = sec - h*3600\r\n      } \r\n      if((sec % 60) > 0){\r\n        m = parseInt((sec/60).toString())\r\n        sec = sec - m*60\r\n      }\r\n      s = sec\r\n\r\n      let mStr='00'\r\n      let sStr='00'\r\n      if(m <10) mStr = '0' + m \r\n        else mStr=m.toString()\r\n      if(s <10) sStr = '0' + s\r\n        else sStr = s.toString()\r\n\r\n      return h + ':' + mStr + ':' + sStr\r\n    }\r\n}\r\n\r\nexport default NeoHelper;","import { async } from \"q\";\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nlet invokeRead_nameHashArray = {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"nameHashArray\",\r\n    \"arguments\": [\r\n        {\"type\":\"Array\",\"value\":[]},\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\n\r\nclass NNSHelper {\r\n    constructor(scriptHash:any) {\r\n        invokeRead_nameHashArray.scriptHash = scriptHash.nns_domaincenter\r\n    }\r\n\r\n    public namehash = async (nns:string) => {\r\n        var namehash = \"\"\r\n\r\n        invokeRead_nameHashArray.arguments[0].value = [];\r\n        for (const str of nns.split('.').reverse()) {\r\n            ((invokeRead_nameHashArray.arguments as Argument[])[0].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n        //console.log(invokeRead_nameHashArray)\r\n        //console.log(JSON.stringify(invokeRead_nameHashArray))\r\n        var invokeResp:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_nameHashArray)) as InvokeReadInput)\r\n        //console.log(invokeResp)\r\n        namehash = invokeResp.stack[0].value\r\n\r\n        return namehash\r\n    }\r\n}\r\n\r\nexport default NNSHelper;","import {\r\n    List, message, Avatar, Spin,\r\n  } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\n@observer\r\nclass DivDefault extends React.Component<any,any> {\r\n    NNSh = new NNSHelper(this.props.store.scriptHash);\r\n\r\n    state = {\r\n      resData : '{}'\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <>           \r\n            <p>{this.props.title}</p>\r\n            <p>{this.props.store.address}</p>\r\n            <p>{this.props.store.network}</p>\r\n            <p>{this.props.store.nns}</p>\r\n            {/* <p>block: {this.props.blockHeight}</p>\r\n            <p>notify: {this.props.notifyHeight}</p> */}\r\n            <pre>{JSON.stringify(this.props.store.scriptHash,null,2)}</pre>          \r\n        <div>\r\n          <div className=\"demo-loading-container\">\r\n            <Spin />\r\n            {/* <p>readyState: {this.props.store.socketReadyState}</p> */}\r\n            <p>LastWSmsg: {this.props.store.lastWSmsgSec}s</p>\r\n            <p>LastBlockTime: {NeoHelper.timetrans(this.props.store.lastBlockTime)}(before {NeoHelper.sec2HMS(parseInt((new Date().getTime()/1000 - this.props.store.lastBlockTime).toFixed(0)))})</p>\r\n          </div>\r\n          <List\r\n            bordered = {true}\r\n            dataSource={this.props.store.blockDatas}\r\n            pagination={{\r\n              onChange: (page) => {\r\n                console.log(page);\r\n              },\r\n              pageSize: 5,\r\n            }}\r\n            renderItem={(item: { id: number; blockHeight: number; timeDiff: number; blockTime:number; blockHash:string }) => (\r\n              <List.Item key={item.id}>\r\n                <List.Item.Meta\r\n                  avatar={<Avatar src=\"https://neo-cdn.azureedge.net/images/favicon.png\" />}\r\n                  title={item.blockHeight}\r\n                  description={item.blockHash}\r\n                />\r\n                <div>({item.timeDiff + 's'}){NeoHelper.timetrans(item.blockTime)}</div>\r\n              </List.Item>\r\n            )}\r\n          ></List>\r\n        </div>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivDefault;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface OwnerInfo\r\n{\r\n    owner:string//如果长度=0 表示没有初始化\r\n    register : string \r\n    resolver: string ;\r\n    TTL: string ;\r\n    parentOwner: string ;//当此域名注册时，他爹的所有者，记录这个，则可以检测域名的爹变了\r\n    domain: string ;//如果长度=0 表示没有初始化\r\n    parenthash: string ;\r\n    root: string ;//是不是根合约\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nlet invokeGetOwnerInfo =  {\r\n    \"scriptHash\": \"348387116c4a75e420663277d9c02049907128c7\",\r\n    \"operation\": \"getOwnerInfo\",\r\n    \"arguments\": [\r\n        {\"type\":\"ByteArray\",\"value\":\"\"},\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nclass DivNnsCenter extends React.Component<any,any> {\r\n    NNSh = new NNSHelper(this.props.store.scriptHash);\r\n\r\n    state = {\r\n        resData : '{}'\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        invokeGetOwnerInfo.arguments[0].value = await this.NNSh.namehash(this.props.store.nns)\r\n\r\n        var nnsOwnerInfoData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeGetOwnerInfo)) as InvokeReadInput)\r\n        var stack0:any = nnsOwnerInfoData.stack[0].value;\r\n        console.log(nnsOwnerInfoData)\r\n        var nnsOwnerInfo:OwnerInfo = {\r\n            owner:stack0[0].value,\r\n            register:stack0[1].value,\r\n            resolver:stack0[2].value,\r\n            TTL:stack0[3].value,\r\n            parentOwner:stack0[4].value,\r\n            domain:stack0[5].value,\r\n            parenthash:stack0[6].value,\r\n            root:stack0[7].value,\r\n        }\r\n        nnsOwnerInfo.domain = NeoHelper.hex2a(nnsOwnerInfo.domain)\r\n        nnsOwnerInfo.TTL = NeoHelper.hex2TimeStr(nnsOwnerInfo.TTL)\r\n        nnsOwnerInfo.owner = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.byte2Hex(NeoHelper.hex2Byte(nnsOwnerInfo.owner).reverse()))\r\n        this.setState({\r\n            resData: JSON.stringify(nnsOwnerInfo, null, 2)                                 \r\n        });\r\n\r\n        //this.invokeRead(JSON.stringify(invokeRead3))\r\n    }\r\n\r\n    // handelChange(e:any){\r\n    //     this.setState({\r\n    //         inputValue:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            {/* <Input id=\"NNSinput\" placeholder=\"输入要查询的NSS域名\" onChange={this.handelChange.bind(this)} defaultValue={this.state.inputValue}/> */}\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS所有者信息</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsCenter;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\n// interface IProps{\r\n//     title:string\r\n//     scriptHash:any\r\n// }\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nlet invokeRead_resolve =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"resolve\",\r\n    \"arguments\": [\r\n        {\"type\":\"String\",\"value\":\"addr\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"}\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nclass DivNnsResolver extends React.Component<any,any> {\r\n    NNSh = new NNSHelper(this.props.store.scriptHash);\r\n\r\n    state = {\r\n        resData : '{}'\r\n    }  \r\n\r\n    componentDidMount(){\r\n        invokeRead_resolve.scriptHash = this.props.store.scriptHash.nns_resolver\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        invokeRead_resolve.arguments[1].value = await this.NNSh.namehash(this.props.store.nns)\r\n\r\n        //console.log(invokeRead_resolve)\r\n        var resolverData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_resolve)) as InvokeReadInput)       \r\n        //console.log(resolverData);\r\n\r\n        this.setState({\r\n            resData:NeoHelper.hex2a(resolverData.stack[0].value)                                 \r\n        });\r\n    }\r\n\r\n    // handelChange(e:any){\r\n    //     this.setState({\r\n    //         inputValue:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            {/* <Input placeholder=\"输入要查询的NSS域名\" onChange={this.handelChange.bind(this)} defaultValue={this.state.inputValue}/> */}\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">解析NNS</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsResolver;","import React, { Component } from 'react';\r\nimport {autorun} from 'mobx'\r\nimport {Button,Input,Spin,Statistic, Row, Col, Icon,Timeline,Drawer,Switch,InputNumber,Divider} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface AuctionState\r\n{\r\n    id:string; //拍卖id,就是拍卖生成的auctionid\r\n    auctionStarter:string;//域名开拍的人\r\n    parenthash:string ;//拍卖内容\r\n    domain:string ;//拍卖内容\r\n    domainTTL:string ;//域名的TTL,用这个信息来判断域名是否发生了变化\r\n    startBlockSelling:number ;//开始销售块\r\n    endBlock:number ;//结束块\r\n    maxPrice:number ;//最高出价\r\n    maxBuyer:string ;//最大出价者\r\n    lastBlock:number ;//最后出价块\r\n}\r\n\r\ninterface NNScredit\r\n{\r\n    namehash:string\r\n    fullDomainName:string \r\n    TTL:string\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nlet invokeRead_CGAS_getBanlance =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"balanceOf\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"}\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invokeRead_auction_getBanlance =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"balanceOf\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"}\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invokeRead_auction_getAuctionState =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"getAuctionStateByFullhash\",\r\n    \"arguments\": [\r\n        {\"type\":\"ByteArray\",\"value\":\"\"}\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invokeRead_auction_getBalanceOfBid =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"balanceOfBid\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"}\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_CGAS_doCGASinStep0 =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"transfer\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"Integer\",\"value\":0}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS竞拍充值CGAS转账\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_auction_doCGASinStep1 =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"setmoneyin\",\r\n    \"arguments\": [\r\n        {\"type\":\"Hook_Txid\",\"value\":0}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS竞拍充值确认\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_auction_doCGASout =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"getmoneyback\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"Integer\",\"value\":0}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS竞拍CGAS提取\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_auction_doStartAuction =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"startAuction\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"},\r\n        {\"type\":\"String\",\"value\":\"\"}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS竞拍开标\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_auction_doBid =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"raise\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"},\r\n        {\"type\":\"Integer\",\"value\":0}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS竞拍加价\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_auction_doBidSettlement =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"bidSettlement\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS竞拍域名领取\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_auction_doCollect =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"collectDomain\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS竞拍域名领取\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_auction_doRenew =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"renewDomain\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"ByteArray\",\"value\":\"\"},\r\n        {\"type\":\"String\",\"value\":\"\"}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS域名续期\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_credit_authenticate =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"authenticate\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"Array\",\"value\":[]}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS反向解析绑定\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_credit_revoke =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"revoke\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS反向解析解绑\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nclass DivAuction extends React.Component<any,any> {\r\n    NNSh = new NNSHelper(this.props.store.scriptHash);\r\n\r\n    state = {\r\n        resDataRead : '{}',\r\n        reqDataWrite : '{}',\r\n        resDataWrite : '{}',\r\n        inputAmount: 0,\r\n        loadingR : true,\r\n        loadingW : false,\r\n        CGASBalance:0,\r\n        auctionBalance:0,\r\n        bidBalance:0,\r\n        auctionDay:0,\r\n        auctionStateInfo:{\r\n            \"id\": \"\",\r\n            \"auctionStarter\": \"\",\r\n            \"parenthash\": \"\",\r\n            \"domain\": \"\",\r\n            \"domainTTL\": \"\",\r\n            \"startBlockSelling\": 0,\r\n            \"endBlock\": \"\",\r\n            \"maxPrice\": \"\",\r\n            \"maxBuyer\": \"\",\r\n            \"lastBlock\": \"\"\r\n          },\r\n        CGASopValue:0,\r\n        drawerVisible: false\r\n    }  \r\n\r\n    intervalID:any\r\n    componentDidMount(){\r\n        invokeRead_CGAS_getBanlance.scriptHash = this.props.store.scriptHash.NEP_5_CGAS\r\n        invokeRead_auction_getBanlance.scriptHash = this.props.store.scriptHash.nns_auction\r\n        invoke_CGAS_doCGASinStep0.scriptHash = this.props.store.scriptHash.NEP_5_CGAS\r\n        invoke_auction_doCGASinStep1.scriptHash = this.props.store.scriptHash.nns_auction\r\n        invoke_auction_doCGASout.scriptHash = this.props.store.scriptHash.nns_auction\r\n        invokeRead_auction_getAuctionState.scriptHash = this.props.store.scriptHash.nns_auction\r\n        invoke_auction_doStartAuction.scriptHash = this.props.store.scriptHash.nns_auction\r\n        invoke_auction_doBid.scriptHash = this.props.store.scriptHash.nns_auction\r\n        invokeRead_auction_getBalanceOfBid.scriptHash = this.props.store.scriptHash.nns_auction\r\n        invoke_auction_doBidSettlement.scriptHash = this.props.store.scriptHash.nns_auction\r\n        invoke_auction_doCollect.scriptHash = this.props.store.scriptHash.nns_auction\r\n        invoke_auction_doRenew.scriptHash = this.props.store.scriptHash.nns_auction\r\n\r\n        this.intervalID = setInterval(async ()=>{\r\n            this.setState({\r\n                auctionDay :await this.calcAuctionDay(this.state.auctionStateInfo.startBlockSelling)\r\n            })           \r\n        },1000)\r\n\r\n        this.getInvokeRead_getBanlance()\r\n\r\n        // console.log(\"teemoReady:\" ,this.props.teemoReady)\r\n        // if(this.props.teemoReady)\r\n        // {\r\n        //     console.log(1)\r\n        //     this.getInvokeRead_getBanlance()\r\n        // }\r\n        // else{\r\n        //     console.log(0)\r\n        //     var intervalID = setInterval(()=>{\r\n        //         console.log(\"teemoReady:\" ,this.props.teemoReady)\r\n        //         if(this.props.teemoReady)\r\n        //         {\r\n        //             setTimeout(()=>{this.getInvokeRead_getBanlance()},1000)                   \r\n        //             clearInterval(intervalID)\r\n        //         }               \r\n        //     },1000) \r\n        // }      \r\n\r\n        window.addEventListener (\"newBlockEvent\", this.doOnEvent, false)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"newBlockEvent\", this.doOnEvent, false);\r\n        clearInterval(this.intervalID)\r\n    }\r\n\r\n    doOnEvent = (e:any) =>{\r\n        console.log('newBlockEvent',e)\r\n        if(e.detail.txidIndex > -1){\r\n            this.getInvokeRead_getBanlance()\r\n        }   \r\n    }\r\n\r\n    calcAuctionDay =async (blockIndex:number) =>{\r\n        var startTimeS = (await NeoHelper.getBlock(blockIndex)).result.time as number\r\n        return  (new Date().getTime()/1000 - startTimeS)/ 60 / 5  //5分钟1天\r\n    }\r\n\r\n    getInvokeRead_getBanlance = async () =>{\r\n        invokeRead_CGAS_getBanlance.arguments[0].value =  this.props.store.address//await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        invokeRead_auction_getBanlance.arguments[0].value =  this.props.store.address\r\n\r\n        invokeRead_auction_getAuctionState.arguments[0].value = await this.NNSh.namehash(this.props.store.nns)\r\n\r\n        //console.log(invokeRead_resolve)\r\n        var InvokeReadGroupInput = {group:[{}]}\r\n        InvokeReadGroupInput.group.pop()\r\n        InvokeReadGroupInput.group.push(invokeRead_CGAS_getBanlance)\r\n        InvokeReadGroupInput.group.push(invokeRead_auction_getBanlance)\r\n        InvokeReadGroupInput.group.push(invokeRead_auction_getAuctionState)\r\n        \r\n        //console.log(JSON.stringify(InvokeReadGroupInput));\r\n        \r\n        var resData:InvokeScriptResp = await Teemo.NEO.invokeReadGroup(JSON.parse(JSON.stringify(InvokeReadGroupInput)) as InvokeReadGroup)       \r\n        //console.log(resData.stack[3].value);\r\n        //console.log(resData)\r\n\r\n        var stack2:any = resData.stack[2].value;\r\n        //console.log(stack2)\r\n\r\n        var AuctionStateInfo:AuctionState = {\r\n            id:stack2[0].value, //拍卖id,就是拍卖生成的auctionid\r\n            auctionStarter:stack2[1].value,//域名开拍的人\r\n            parenthash:stack2[2].value,//拍卖内容\r\n            domain:stack2[3].value,//拍卖内容\r\n            domainTTL:stack2[4].value,//域名的TTL,用这个信息来判断域名是否发生了变化\r\n            startBlockSelling:stack2[5].value,//开始销售块\r\n            endBlock:stack2[6].value,//结束块\r\n            maxPrice:stack2[7].value,//最高出价\r\n            maxBuyer:stack2[8].value,//最大出价者\r\n            lastBlock:stack2[9].value//最后出价块\r\n        }\r\n        AuctionStateInfo.auctionStarter = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.hexReverse(AuctionStateInfo.auctionStarter))\r\n        AuctionStateInfo.domain = NeoHelper.hex2a(AuctionStateInfo.domain)\r\n        AuctionStateInfo.domainTTL = NeoHelper.hex2TimeStr(AuctionStateInfo.domainTTL)\r\n        AuctionStateInfo.maxPrice = AuctionStateInfo.maxPrice/10**8\r\n        if(AuctionStateInfo.maxBuyer != ''){\r\n            AuctionStateInfo.maxBuyer = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.hexReverse(AuctionStateInfo.maxBuyer))\r\n        }      \r\n\r\n        //---第二轮invokescript\r\n\r\n        invokeRead_auction_getBalanceOfBid.arguments[0].value = this.props.store.address\r\n        invokeRead_auction_getBalanceOfBid.arguments[1].value = AuctionStateInfo.id\r\n\r\n        var resData2:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_auction_getBalanceOfBid)) as InvokeArgs)\r\n\r\n        //console.log('AuctionStateInfo',AuctionStateInfo)\r\n\r\n        //var CGAS_balacnce = resData.stack[0].value\r\n        //console.log(NeoHelper.hex2Int(CGAS_balacnce)/10**8)\r\n\r\n        this.setState({\r\n            CGASBalance:NeoHelper.hex2Int(resData.stack[0].value)/10**8,\r\n            auctionBalance:NeoHelper.hex2Int(resData.stack[1].value)/10**8,\r\n            bidBalance:NeoHelper.hex2Int(resData2.stack[0].value)/10**8,\r\n            auctionStateInfo:AuctionStateInfo,\r\n            auctionDay:await this.calcAuctionDay(AuctionStateInfo.startBlockSelling),\r\n            resDataRead:JSON.stringify(AuctionStateInfo,null,2),\r\n            loadingR:false\r\n        })\r\n\r\n        //console.log(this.state.auctionStateInfo)\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        this.getInvokeRead_getBanlance()\r\n    }\r\n\r\n    butInvoke_doCGASin_click = async () =>{\r\n        invoke_CGAS_doCGASinStep0.arguments[0].value = this.props.store.address\r\n        invoke_CGAS_doCGASinStep0.arguments[1].value = await Teemo.NEO.getAddressFromScriptHash(this.props.store.scriptHash.nns_auction)\r\n        invoke_CGAS_doCGASinStep0.arguments[2].value = this.state.CGASopValue * (10**8)\r\n\r\n        //console.log(invoke_CGAS_doCGASinStep0)\r\n\r\n        var InvokeGroupInput = {merge:true,group:[{}]}\r\n        InvokeGroupInput.group.pop()\r\n        InvokeGroupInput.group.push(invoke_CGAS_doCGASinStep0)\r\n        InvokeGroupInput.group.push(invoke_auction_doCGASinStep1)\r\n\r\n        //console.log(InvokeGroupInput)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invokeGroup(JSON.parse(JSON.stringify(InvokeGroupInput)) as InvokeGroup)\r\n\r\n        //console.log(resp)\r\n\r\n        resp.forEach(res => {\r\n            this.props.store.addTxidSended(res.txid)\r\n        });\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(InvokeGroupInput,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doCGASout_click = async () =>{\r\n        invoke_auction_doCGASout.arguments[0].value = this.props.store.address\r\n        invoke_auction_doCGASout.arguments[1].value = this.state.CGASopValue * (10**8)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doCGASout)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doCGASout,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doStartAuction_click = async () =>{\r\n        invoke_auction_doStartAuction.arguments[0].value = this.props.store.address;\r\n        invoke_auction_doStartAuction.arguments[1].value = await this.NNSh.namehash(this.props.store.nns.split('.')[1])\r\n        invoke_auction_doStartAuction.arguments[2].value = this.props.store.nns.split('.')[0]\r\n\r\n        //console.log(invoke_auction_doStartAuction)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doStartAuction)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doStartAuction,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doBid_click = async() =>{\r\n        invoke_auction_doBid.arguments[0].value = this.props.store.address;\r\n        invoke_auction_doBid.arguments[1].value = this.state.auctionStateInfo.id\r\n        invoke_auction_doBid.arguments[2].value = (this.state.inputAmount*(10**8)).toString()\r\n\r\n        console.log(invoke_auction_doBid)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doBid)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doBid,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        })\r\n    }\r\n\r\n    butInvoke_doBidSettlementAndCollect_click = async() =>{\r\n        invoke_auction_doBidSettlement.arguments[0].value = this.props.store.address\r\n        invoke_auction_doBidSettlement.arguments[1].value = this.state.auctionStateInfo.id\r\n\r\n        invoke_auction_doCollect.arguments[0].value = this.props.store.address\r\n        invoke_auction_doCollect.arguments[1].value = this.state.auctionStateInfo.id\r\n\r\n        var InvokeGroupInput = {merge:false,group:[{}]}\r\n        InvokeGroupInput.group.pop()\r\n        InvokeGroupInput.group.push(invoke_auction_doBidSettlement)\r\n        InvokeGroupInput.group.push(invoke_auction_doCollect)\r\n\r\n        //console.log(JSON.stringify(InvokeGroupInput,null,2))\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invokeGroup(JSON.parse(JSON.stringify(InvokeGroupInput)) as InvokeGroup)\r\n\r\n        //console.log(resp)\r\n        resp.forEach(res => {\r\n            this.props.store.addTxidSended(res.txid)\r\n        });\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(InvokeGroupInput,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doRenew_click = async() =>{\r\n        invoke_auction_doRenew.arguments[0].value = this.props.store.address\r\n        invoke_auction_doRenew.arguments[1].value = await this.NNSh.namehash(this.props.store.nns.split('.')[1])\r\n        invoke_auction_doRenew.arguments[2].value = this.props.store.nns.split('.')[0]\r\n\r\n        console.log(invoke_auction_doRenew)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doRenew)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doRenew,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        })\r\n    }\r\n\r\n    butInvokeCreditAuthenticateClick = async(e:any) => {\r\n        invoke_credit_authenticate.arguments[0].value = this.props.store.address\r\n        invoke_credit_authenticate.arguments[1].value = []\r\n        for (const str of this.props.store.nns.split('.').reverse()) {\r\n            ((invoke_credit_authenticate.arguments as Argument[])[1].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditAuthenticateResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_authenticate)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditAuthenticateResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_authenticate,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditAuthenticateResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvokeCreditRevokeClick = async(e:any) => {\r\n        invoke_credit_revoke.arguments[0].value = this.props.store.address\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditRevokeResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_revoke)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditRevokeResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_revoke,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditRevokeResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                                                                 \r\n        });\r\n    }\r\n\r\n    CGASopChange(e:any){\r\n        this.setState({\r\n            CGASopValue:e.target.value\r\n        })\r\n    }\r\n\r\n    // addrChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueAddr:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // nnsChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueNns:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    amountChange(e:any){\r\n        this.setState({\r\n            inputAmount:e\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                        <Statistic title=\"钱包账户\" value={this.state.CGASBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Spin>                  \r\n                </Col>\r\n                <Col span={8}>\r\n                    <Row gutter={16}>\r\n                        <Col span={8}>\r\n                            <Button onClick={this.butInvoke_doCGASout_click} ><Icon type=\"left\" />提取</Button>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Input placeholder=\"输入金额\" onChange={this.CGASopChange.bind(this)} defaultValue={this.state.CGASopValue.toString()} />   \r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Button onClick={this.butInvoke_doCGASin_click} >充值<Icon type=\"right\" /></Button>\r\n                        </Col>\r\n                    </Row>                                                     \r\n                </Col>\r\n                <Col span={8}>\r\n                    <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                    <Statistic title=\"合约账户\" value={this.state.auctionBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Spin>                  \r\n                </Col>\r\n            </Row>\r\n            {/* <Input placeholder=\"输入要查询的地址\" onChange={this.addrChange.bind(this)} defaultValue={this.props.store.address}/> */}\r\n            {/* <Input placeholder=\"输入要绑定的NNS\" onChange={this.nnsChange.bind(this)} defaultValue={this.props.store.nns}/> */}\r\n            <Input placeholder=\"输入地址\" onChange={(e)=>{this.props.store.updateAddress(e.target.value)}} defaultValue={this.props.store.address}/>\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">刷新数据</Button>\r\n            <Divider type=\"vertical\" />\r\n            <Button onClick={this.butInvoke_doStartAuction_click}>开标</Button>           \r\n            <Divider type=\"vertical\" />\r\n            <InputNumber min={0} max={this.state.auctionBalance} step={0.1} onChange={this.amountChange.bind(this)} />=>\r\n            <Button onClick={this.butInvoke_doBid_click}>加价</Button> \r\n            <Divider type=\"vertical\" /> \r\n            <Button onClick={this.butInvoke_doBidSettlementAndCollect_click}>结算与领取</Button>\r\n            <Divider type=\"vertical\" /> \r\n            <Button onClick={this.butInvoke_doRenew_click} disabled={this.state.auctionDay>(365-90)?true:false}>续期{(this.state.auctionDay-(365-90)).toFixed(2)}</Button>             \r\n            <Divider />         \r\n            <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                <Row type=\"flex\" align=\"middle\" gutter={16}>\r\n                    <Col span={3}>\r\n                        <Statistic title=\"开拍天数\" value={this.state.auctionDay.toFixed(2)} suffix=\"天\" prefix={<Icon type=\"clock-circle\" />} />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Switch checked={this.state.drawerVisible} onChange={()=>{this.setState({drawerVisible: !this.state.drawerVisible})}} />显示时间轴  \r\n                    </Col>\r\n                    <Col span={13}>\r\n                        <Statistic title=\"加价总数\" value={this.state.bidBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Col>\r\n                </Row>                                             \r\n                \r\n                {/* <Button type=\"primary\" onClick={()=>{this.setState({drawerVisible: true})}}>查看竞拍阶段</Button> */}\r\n                <Drawer\r\n                    title=\"竞拍阶段\"\r\n                    placement=\"left\"\r\n                    closable={false}\r\n                    onClose={()=>{this.setState({drawerVisible: false})}}\r\n                    visible={this.state.drawerVisible}\r\n                    >\r\n                        <Timeline>\r\n                            <Timeline.Item color={this.state.auctionDay>0?'green':'blue'}>确定期（1-2）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>2?'green':'blue'}>确定期（3）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>3?'green':'blue'}>随机期（4-5）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>5?'green':'blue'}>竞拍结束（5）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>(365-90)?'green':'blue'}>续期期（365-90）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>365?'green':'blue'}>到期（365）</Timeline.Item>\r\n                        </Timeline>\r\n                    </Drawer>\r\n                <pre>{this.state.resDataRead}</pre>\r\n            </Spin>\r\n            {/* <pre>{this.state.reqDataWrite}</pre> */}\r\n            <Spin tip='请求中' spinning={this.state.loadingW}>\r\n                <pre>{this.state.resDataWrite}</pre>\r\n            </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivAuction;","import React, { Component } from 'react';\r\nimport {autorun} from 'mobx'\r\nimport {Button,Input,Spin} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface NNScredit\r\n{\r\n    namehash:string\r\n    fullDomainName:string \r\n    TTL:string\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nlet invokeRead_credit =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"getCreditInfo\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"}\r\n    ],\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_credit_authenticate =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"authenticate\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n        {\"type\":\"Array\",\"value\":[]}\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS反向解析绑定\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nlet invoke_credit_revoke =  {\r\n    \"scriptHash\": \"\",\r\n    \"operation\": \"revoke\",\r\n    \"arguments\": [\r\n        {\"type\":\"Address\",\"value\":\"\"},\r\n    ],\r\n    \"fee\":\"0\",\r\n    \"description\":\"NNS反向解析解绑\",\r\n    \"network\": \"TestNet\"\r\n}\r\n\r\nclass DivNnsCredit extends React.Component<any,any> {\r\n    NNSh = new NNSHelper(this.props.store.scriptHash);\r\n\r\n    state = {\r\n        resDataRead : '{}',\r\n        reqDataWrite : '{}',\r\n        resDataWrite : '{}',\r\n        loadingR : false,\r\n        loadingW : false\r\n    }  \r\n\r\n    componentDidMount(){\r\n        invokeRead_credit.scriptHash = this.props.store.scriptHash.nns_credit\r\n        invoke_credit_authenticate.scriptHash = this.props.store.scriptHash.nns_credit\r\n        invoke_credit_revoke.scriptHash = this.props.store.scriptHash.nns_credit\r\n\r\n        window.addEventListener (\"newBlockEvent\", this.doOnEvent, false)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"newBlockEvent\", this.doOnEvent, false);\r\n    }\r\n\r\n    doOnEvent = (e:any) =>{\r\n        console.log('newBlockEvent',e)\r\n        if(e.detail.txidIndex > -1){\r\n            this.getInvokeRead()\r\n        }  \r\n    }\r\n\r\n    getInvokeRead = async () =>{\r\n        invokeRead_credit.arguments[0].value =  this.props.store.address//await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        //console.log(invokeRead_resolve)\r\n        var creditData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_credit)) as InvokeReadInput)       \r\n        //console.log(creditData);\r\n\r\n        var stack0:any = creditData.stack[0].value;\r\n        var creditInfo:NNScredit = {\r\n            namehash:stack0[0].value,\r\n            fullDomainName:stack0[1].value,\r\n            TTL:stack0[2].value,\r\n        }\r\n        creditInfo.fullDomainName = NeoHelper.hex2a(creditInfo.fullDomainName)\r\n        creditInfo.TTL = NeoHelper.hex2TimeStr(creditInfo.TTL)\r\n\r\n        this.setState({\r\n            resDataRead:JSON.stringify(creditInfo, null, 2),\r\n            loadingR:false                                 \r\n        });\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        this.getInvokeRead()\r\n    }\r\n\r\n    butInvokeCreditAuthenticateClick = async(e:any) => {\r\n        invoke_credit_authenticate.arguments[0].value = this.props.store.address\r\n        invoke_credit_authenticate.arguments[1].value = []\r\n        for (const str of this.props.store.nns.split('.').reverse()) {\r\n            ((invoke_credit_authenticate.arguments as Argument[])[1].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditAuthenticateResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_authenticate)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditAuthenticateResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_authenticate,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditAuthenticateResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvokeCreditRevokeClick = async(e:any) => {\r\n        invoke_credit_revoke.arguments[0].value = this.props.store.address\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditRevokeResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_revoke)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditRevokeResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_revoke,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditRevokeResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                                                                 \r\n        });\r\n    }\r\n\r\n    // addrChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueAddr:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // nnsChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueNns:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            {/* <Input placeholder=\"输入要查询的地址\" onChange={this.addrChange.bind(this)} defaultValue={this.state.inputValueAddr}/>\r\n            <Input placeholder=\"输入要绑定的NNS\" onChange={this.nnsChange.bind(this)} defaultValue={this.state.inputValueNns}/> */}\r\n            <Input placeholder=\"输入地址\" onChange={(e)=>{this.props.store.updateAddress(e.target.value)}} defaultValue={this.props.store.address}/>\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS反向解析信息</Button>\r\n            <Button onClick={this.butInvokeCreditAuthenticateClick}>绑定</Button>\r\n            <Button onClick={this.butInvokeCreditRevokeClick}>解绑</Button>\r\n            <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                <pre>{this.state.resDataRead}</pre>\r\n            </Spin>\r\n            {/* <pre>{this.state.reqDataWrite}</pre> */}\r\n            <Spin tip='请求中' spinning={this.state.loadingW}>\r\n                <pre>{this.state.resDataWrite}</pre>\r\n            </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsCredit;","import React, { Component } from 'react';\nimport './App.css';\nimport { createStore } from 'redux'\nimport { Layout, Menu, Icon, notification, Input } from 'antd';\nimport { any } from 'prop-types';\n\nimport Store from './store';\nimport DivDefault from './components/divDefault';\nimport DivNnsCenter from './components/divNnsCenter';\nimport DivNnsResolver from './components/divNnsResolver';\nimport DivAuction from './components/divAuction';\nimport DivNnsCredit from './components/divNnsCredit';\nimport MobxTest from './components/mobxTest';\nimport { updateLocale } from 'moment';\n\nimport { observable ,autorun} from \"mobx\";\nimport { Socket } from 'dgram';\nimport Title from 'antd/lib/typography/Title';\n\nconst {\n  Header, Content, Footer, Sider,\n} = Layout;\n\nconst webSocketURL = 'ws://47.99.35.147:82/ws/testnet'\n\nlet div_defult = () =>{\n  return <p>div_defult</p>\n}\n\nlet time = new Date().getTime()\n\nconst store = new Store(webSocketURL);\n\nclass App extends Component {\n  state = {\n    menuID: 1,\n    // address : 'address',\n    // network : \"network\",\n    // teemoReady:false\n  }\n\n  componentWillMount(){\n    this.init()\n  }\n\n  average = (arr:Array<any>) => {\n    const nums = [].concat(...arr);\n    return nums.reduce((acc, val) => acc + val, 0) / nums.length;\n  };\n\n  init=()=>{\n    //console.log(\"this is init\");\n    \n    window.addEventListener('Teemo.NEO.READY',async (data)=>{\n      //console.log(this.state)\n      console.log(\"inject READY \");\n      notification.success({message:'Teemo',description:'Teemo.NEO.READY'})\n\n      store.updateAddress((await Teemo.NEO.getAccount()).address)\n      store.updateNetwork((await Teemo.NEO.getNetworks()).defaultNetwork)\n\n      // this.setState({\n      //   address: (await Teemo.NEO.getAccount()).address,\n      //   network: (await Teemo.NEO.getNetworks()).defaultNetwork,\n      //   teemoReady:true                     \n      // }); \n      //console.log(this.state)\n    })\n\n    window.addEventListener('Teemo.NEO.NETWORK_CHANGED',(data:any)=>{\n      console.log(\"NETWORK_CHANGED\");\n      console.log(data);\n\n      store.updateNetwork(data.detail.defaultNetwork)\n\n      // this.setState({\n      //   network: data.detail.defaultNetwork                      \n      // }); \n    })\n  }\n\n  menuClick = (e:any) => {\n    console.log('menu Click', e);\n    this.setState({\n      menuID: e.key\n    });\n  } \n  \n  render() {\n    let div_main = null;\n    if (this.state.menuID == 1) {\n      div_main = <DivDefault store={store} title=\"default Page\" />\n    } \n    else if (this.state.menuID == 2) {\n      div_main = <DivNnsCenter store={store} title=\"NNS Domain Center\" />\n    }\n    else if (this.state.menuID == 3) {\n      div_main = <DivNnsResolver store={store} title=\"NNS Resolver\" />\n    }\n    else if (this.state.menuID == 4) {\n      div_main = <DivAuction store={store} title=\"NNS Auction\" />\n    }\n    else if (this.state.menuID == 5) {\n      div_main = <DivNnsCredit store={store} title=\"NNS Credit\" />\n    }\n    else {\n      div_main = div_defult()\n    }\n\n    return (\n      <Layout>\n        <Sider\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          onBreakpoint={(broken) => { console.log(broken); }}\n          onCollapse={(collapsed, type) => { console.log(collapsed, type); }}\n        >\n          <div className=\"logo\" />\n          <Menu onClick={this.menuClick}  theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">Default Page</span>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS Center</span>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS resolver</span>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS Auction</span>\n            </Menu.Item>\n            <Menu.Item key=\"5\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS Credit</span>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <h1>--- NNS Teemo Demo ---</h1>\n          </Header>\n          <Content style={{ margin: '24px 16px 0' }}>\n            {/* <MobxTest store={store}/> */}\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                {div_main}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>\n            NNS ©2019 Created by NEL\n          </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n        <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}