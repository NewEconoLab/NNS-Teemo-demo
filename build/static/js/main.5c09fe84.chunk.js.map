{"version":3,"sources":["store.ts","App.tsx","serviceWorker.ts","Tools/neoHelper.tsx","Tools/nnsHelper.tsx","components/divDefault.tsx","components/divNnsCenter.tsx","components/divNnsResolver.tsx","components/divAuction.tsx","components/divNnsCredit.tsx","components/divNFTtest.tsx","index.tsx"],"names":["Store","_this","this","Object","classCallCheck","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","updateLastWSmsgSec","lastWSmsgSec","Date","getTime","lastWSmsgTime","socketInit","socket","socketReadyState","readyState","time","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","pushEvent","eventName","eventData","event","CustomEvent","detail","window","dispatchEvent","getDelay","parseInt","toFixed","_descriptor18","_descriptor19","init","setInterval","minPerDay","auctionMinPerDay","nns_domaincenter","nns_resolver","nns_auction","nns_auction_hash","nns_credit","NEP_5_CGAS","NEP_5_NNC","NFT_test_O3Foundry","NFT_test_HashPuppies","network","observable","action","computed","addr","_this2","address","net","_this3","nns","_this4","blockHeight","blockTime","blockHash","timeDiff","txid","_this5","txids","unshift","_this6","close","blockDatas","WebSocket","webSocketURL","onclose","console","log","notification","warning","message","description","onerror","error","onopen","send","success","onmessage","data","socketMsgs","JSON","parse","txidIndex","length","tx","findIndex","element","info","blockInsertTime","svrSystemTime","blockHeightDataArray","shift","pop","blockData","lastBlockTime","addEventListener","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","_this7","isTeemoReady","Teemo","NEO","getAccount","then","updateAddress","catch","isConnected","t0","getNetworks","t1","sent","defaultNetwork","updateNetwork","call","stop","_x","apply","arguments","_ref2","_callee2","_context2","_x2","Header","Layout","Content","Footer","Sider","App","observer","state","menuID","menuClick","e","setState","key","react_default","createElement","react_router_dom","layout","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","type","className","menu","onClick","theme","mode","defaultSelectedKeys","Item","to","icon","style","background","padding","margin","minHeight","props","children","textAlign","Component","Boolean","location","hostname","match","NeoHelper","store","getBlock","blockIndex","result","fetch","rpcUrl","json","abrupt","getAddressFromScriptHash","hexToString","hex","string","i","String","fromCharCode","substr","hex2Int","hexx","byte2Hex","hex2Byte","reverse","hex2TimeStr","timetrans","hexReverse","uint8arr","hexStr","toString","toLowerCase","str","Uint8Array","len","push","timestamp","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","sec2HMS","sec","h","m","s","NNSHelper","invokeRead_nameHashArray","namehash","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","invokeResp","value","undefined","split","Symbol","iterator","done","return","finish","invokeRead","stringify","stack","scriptHash","operation","DivDefault","inject","NNSh","resData","Fragment","spin","tip","spinning","list","bordered","dataSource","pagination","onChange","page","pageSize","renderItem","item","id","Meta","avatar","src","title","txCount","React","DivNnsCenter","butGetInvokeReadClick","invokeGetOwnerInfo","nnsOwnerInfoData","stack0","nnsOwnerInfo","t2","t3","t4","owner","register","resolver","TTL","parentOwner","domain","parenthash","root","es_input","placeholder","updateNNS","target","defaultValue","es_button","DivNnsResolver","invokeRead_resolve","resolverData","t5","DivAuction","possibleConstructorReturn","getPrototypeOf","nnsInput","resDataRead","reqDataWrite","resDataWrite","inputAmount","loadingR","loadingW","CGASBalance","auctionBalance","bidBalance","auctionDay","auctionStateInfo","auctionStarter","domainTTL","startBlockSelling","endBlock","maxPrice","maxBuyer","lastBlock","CGASopValue","drawerVisible","intervalID","doOnEvent","getInvokeRead_getBanlance","calcAuctionDay","startTimeS","invokeRead_CGAS_getBanlance","invokeRead_auction_getBanlance","invokeRead_auction_getAuctionState","invokeRead_auction_getBalanceOfBid","InvokeReadGroupInput","stack2","AuctionStateInfo","resData2","group","invokeReadGroup","Math","pow","t6","t7","t8","t9","t10","t11","t12","_ref3","_callee3","_context3","butInvoke_doCGASin_click","_callee4","invoke_CGAS_doCGASinStep0","invoke_auction_doCGASinStep1","InvokeGroupInput","resp","_context4","fee","merge","invokeGroup","forEach","res","addTxidSended","butInvoke_doCGASout_click","_callee5","invoke_auction_doCGASout","_context5","invoke","butInvoke_doStartAuction_click","_callee6","invoke_auction_doStartAuction","_context6","butInvoke_doBid_click","_callee7","invoke_auction_doBid","_context7","butInvoke_doBidSettlementAndCollect_click","_callee8","invoke_auction_doBidSettlement","invoke_auction_doCollect","_context8","butInvoke_doRenew_click","_callee9","invoke_auction_doRenew","_context9","createRef","_callee10","_context10","removeEventListener","clearInterval","es_switch","checked","checkedChildren","unCheckedChildren","defaultChecked","_ref11","_callee11","newNns","_context11","updateAuctionMinPerDay","replace","current","_x3","divider","row","gutter","col","span","statistic","suffix","prefix","CGASopChange","bind","ref","input_number","min","max","step","amountChange","disabled","align","drawer","placement","closable","onClose","visible","timeline","color","DivNnsCredit","getInvokeRead","invokeRead_credit","creditData","creditInfo","fullDomainName","butInvokeCreditAuthenticateClick","invoke_credit_authenticate","invokeCreditAuthenticateResp","butInvokeCreditRevokeClick","invoke_credit_revoke","invokeCreditRevokeResp","DivNFTtest","NFTscripthash","name","symbol","supportedStandards","totalSupply","tokens","tokenID","allowance","ownerOf","properties","rwProperties","token","uri","getNFTinfos","input","inputs","NFTDataArray","tokenResult","getTokenInfo","itemLayout","extra","width","alt","ReactDOM","render","index_module","basename","src_App_0","react_router","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c09fe84.chunk.js","sourcesContent":["import {observable, action, computed, autorun} from 'mobx';\r\nimport { notification } from 'antd';\r\nimport NeoHelper from './Tools/neoHelper';\r\n\r\nclass Store {\r\n    constructor(){\r\n        this.init()\r\n        setInterval(this.updateLastWSmsgSec,1000)\r\n    }\r\n\r\n    @observable isTeemoReady = false\r\n    @observable isConnected = true\r\n    \r\n    @observable auctionMinPerDay = 5\r\n    @action updateAuctionMinPerDay(minPerDay:number){\r\n        this.auctionMinPerDay = minPerDay\r\n    }\r\n    @computed get nns_auction_hash(){\r\n        if(this.auctionMinPerDay == 5) return \"5fd8c2aed0eec0fa103f6fba16748b453baf5b2e\"\r\n        else return \"4c7cca112a8c5666bce5da373010fc0920d0e0d2\"\r\n    }\r\n\r\n    @computed get scriptHash(){\r\n        return {\r\n            nns_domaincenter : \"348387116c4a75e420663277d9c02049907128c7\",\r\n            nns_resolver : \"6e2aea28af9c5febea0774759b1b76398e3167f1\",\r\n            nns_auction: this.nns_auction_hash,\r\n            nns_credit : \"960b41a05588d2f55acbc13a1e3aa464eec6fff5\",\r\n            NEP_5_CGAS:\"74f2dc36a68fdc4682034178eb2220729231db76\",\r\n            NEP_5_NNC:\"fc732edee1efdf968c23c20a9628eaa5a6ccb934\",\r\n            NFT_test_O3Foundry:\"7fe1d36ed60846975e70ec8b6fc0bef08b033107\",\r\n            NFT_test_HashPuppies:\"e7b2046b2412c4c7f1531ce144a73d47c3b272fe\"\r\n        }\r\n    } \r\n\r\n    @observable network = 'TestNet'\r\n    @observable address:string = 'A**********************'\r\n    @observable nns:string='qmz.test'\r\n    @action public updateAddress = (addr:string) =>{\r\n        this.address = addr\r\n    }\r\n    @action public updateNetwork = (net:string) =>{\r\n        this.network = net\r\n    }\r\n    @action public updateNNS = (nns:string) =>{\r\n        this.nns = nns\r\n    }\r\n    @computed get rpcUrl(){\r\n        if(this.network=='MainNet') return 'https://seed.nel.group:10331'\r\n        else return 'https://test.nel.group:20331'\r\n    }\r\n\r\n    @computed get webSocketURL(){\r\n        if(this.network=='MainNet') return 'wss://testws.nel.group/ws/mainnet'\r\n        else return 'wss://testws.nel.group/ws/testnet'\r\n    }\r\n\r\n    updateLastWSmsgSec = () =>{     \r\n        this.lastWSmsgSec=(new Date().getTime() - this.lastWSmsgTime)/1000\r\n\r\n        //webstock 如果2分钟取不到最新块，会发送心跳数据包\r\n        if(this.lastWSmsgSec>75){\r\n            \r\n            this.lastWSmsgTime=new Date().getTime(),\r\n            this.lastWSmsgSec=0\r\n\r\n            this.socketInit()\r\n        }\r\n\r\n        if(this.socket) this.socketReadyState = this.socket.readyState\r\n    }\r\n\r\n    socket: any;\r\n    time = new Date().getTime()\r\n    @observable socketReadyState = -1\r\n    @observable socketMsgs:Array<any> = []\r\n    @observable blockDatas=[{\r\n        blockHeight:-1,\r\n        blockTime:0,\r\n        blockHash:'',\r\n        timeDiff:0\r\n      }]\r\n    @observable lastBlockTime=0\r\n    @observable lastWSmsgTime=new Date().getTime()\r\n    @observable lastWSmsgSec=0\r\n\r\n    // @computed get lastBlockTime(){\r\n    //     if(this.blockData.length >1){\r\n    //         return this.blockData[0].time\r\n    //     }\r\n    //     else return 0\r\n    // }\r\n    @observable txids:string[] = []\r\n    @action public addTxidSended =(txid:string) =>{\r\n        this.txids.unshift('0x' + txid)\r\n    }\r\n\r\n    pushEvent =(eventName:string,eventData:any) =>{\r\n        var event = new CustomEvent(eventName, { \r\n            detail: eventData\r\n        });\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    getDelay = (time:number) =>{\r\n        return parseInt((new Date().getTime()/1000 - time).toFixed(0)) + 's'\r\n    }\r\n\r\n    @action socketInit =() =>{\r\n        if(this.socket){\r\n            this.socket.close()\r\n        }\r\n\r\n        this.blockDatas=[{\r\n            blockHeight:-1,\r\n            blockTime:0,\r\n            blockHash:'',\r\n            timeDiff:0\r\n          }]\r\n\r\n        this.socket = new WebSocket(this.webSocketURL);\r\n    \r\n        this.socket.onclose = (event:any) => {\r\n            console.log(event);\r\n            notification.warning({message:'websocket',description:'close'})\r\n        };\r\n        this.socket.onerror = (event:any) => {\r\n            console.log(event);\r\n            notification.error({message:'websocket',description:'error'})\r\n        };\r\n        this.socket.onopen = (event:any) =>{\r\n            console.log(event);\r\n            this.socket.send('Hello Server!');\r\n            notification.success({message:'websocket',description:'open on ' + this.webSocketURL})\r\n        }\r\n        this.socket.onmessage = (event:any) =>{\r\n            console.log(event);\r\n            console.log(event.data);\r\n\r\n            this.socketMsgs.unshift(event.data);\r\n\r\n            this.lastWSmsgTime = new Date().getTime()\r\n    \r\n            //let timeDiff = new Date().getTime() - this.time;\r\n            this.time = new Date().getTime()\r\n            //console.log(timeDiff.toString() + 'ms')\r\n            var data = JSON.parse(event.data).data\r\n            if(data.blockHeight != null){\r\n                var txidIndex = -1\r\n                if(this.txids.length>0){                  \r\n                    txidIndex = data.tx.findIndex((element:any)=>{\r\n                        return element.txid === this.txids[0]\r\n                    })\r\n                    //console.log({txid:this.txids[0]},data.tx,txidIndex)\r\n                }\r\n                notification.info({message:data.blockHeight,description:'delay: ' + this.getDelay(data.blockTime) + '/' + this.getDelay(data.blockInsertTime) + '/' + this.getDelay(data.svrSystemTime) + '||txidIndex:' + txidIndex})\r\n\r\n                var blockHeightDataArray = this.blockDatas\r\n\r\n                if(blockHeightDataArray[0].blockHeight == -1 ) blockHeightDataArray.shift()\r\n                if(blockHeightDataArray.length>=50) blockHeightDataArray.pop()\r\n\r\n                let timeDiff = 0\r\n                if(blockHeightDataArray.length > 0) timeDiff = (data.blockTime - blockHeightDataArray[0].blockTime)\r\n                let blockData = data // {height:data.blockHeight,time:data.blockTime,hash:data.blockHash,timeDiff:timeDiff}\r\n                blockData['timeDiff'] = timeDiff\r\n                blockData['txidIndex'] = txidIndex\r\n                blockData['txCount'] = data.tx.length\r\n                blockHeightDataArray.unshift(blockData)\r\n                this.pushEvent('newBlockEvent',blockData)            \r\n        \r\n                this.blockDatas = blockHeightDataArray\r\n                this.lastBlockTime = data.blockTime\r\n            }\r\n        }\r\n    }\r\n\r\n    @action init=()=>{\r\n        console.log(\"this is init\");\r\n        \r\n        window.addEventListener('Teemo.NEO.READY',async (data)=>{\r\n            console.log(\"inject READY \");\r\n            notification.success({message:'Teemo',description:'Teemo.NEO.READY'})     \r\n\r\n            this.isTeemoReady = true\r\n\r\n            var account\r\n            Teemo.NEO.getAccount()\r\n            .then((data)=>{\r\n                console.log('account',data)\r\n                this.updateAddress(data.address)\r\n            })\r\n            .catch((error)=>{\r\n                console.log('account',error)\r\n                this.isConnected=false\r\n            })         \r\n\r\n            this.updateNetwork((await Teemo.NEO.getNetworks()).defaultNetwork)          \r\n\r\n            this.socketInit()\r\n\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.NETWORK_CHANGED',(data:any)=>{\r\n            console.log(\"NETWORK_CHANGED\");\r\n            console.log(data);\r\n\r\n            this.updateNetwork(data.detail.defaultNetwork)\r\n            this.socketInit()\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.CONNECTED',async (data:any)=>{\r\n            console.log(\"CONNECTED\");\r\n            console.log(data);\r\n\r\n            notification.success({message:'Teemo',description:'Teemo.NEO.CONNECTED'})\r\n            this.isConnected = true\r\n            \r\n            this.updateAddress(data.detail.address)\r\n            this.updateNetwork((await Teemo.NEO.getNetworks()).defaultNetwork)\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.DISCONNECTED',(data:any)=>{\r\n            console.log(\"DISCONNECTED\");\r\n            console.log(data);\r\n\r\n            notification.warning({message:'Teemo',description:'Teemo.NEO.DISCONNECTED'})\r\n            this.isConnected = false\r\n\r\n            this.updateAddress('A**********************')\r\n            this.updateNetwork('TestNet')\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.ACCOUNT_CHANGED',(data:any)=>{\r\n            console.log(\"ACCOUNT_CHANGED\");\r\n            console.log(data);\r\n\r\n            notification.warning({message:'Teemo',description:'Teemo.NEO.ACCOUNT_CHANGED'})\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport default Store","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route ,Link ,withRouter  } from 'react-router-dom'\nimport './App.css';\nimport { createStore } from 'redux'\nimport { Layout, Menu, Icon, notification, Input,Spin } from 'antd';\nimport { any } from 'prop-types';\nimport {observer,inject} from 'mobx-react';\n\n// import Store from './store';\nimport DivDefault from './components/divDefault';\nimport DivNnsCenter from './components/divNnsCenter';\nimport DivNnsResolver from './components/divNnsResolver';\nimport DivAuction from './components/divAuction';\nimport DivNnsCredit from './components/divNnsCredit';\nimport MobxTest from './components/mobxTest';\nimport { updateLocale } from 'moment';\n\nimport { observable ,autorun} from \"mobx\";\nimport { Socket } from 'dgram';\nimport Title from 'antd/lib/typography/Title';\n\nconst {\n  Header, Content, Footer, Sider,\n} = Layout;\n\n// const webSocketURL = 'ws://47.99.35.147:82/ws/testnet'\n\nlet div_defult = () =>{\n  return <p>div_defult</p>\n}\n\n// let time = new Date().getTime()\n\n// const store = new Store();\n\n// @inject(\"store\")\n@observer\nclass App extends Component<any,any> {\n  state = {\n    menuID: 1\n  }\n\n  menuClick = (e:any) => {\n    console.log('menu Click', e);\n\n    //this.props.history.push(\"/nnscenter\")\n\n    this.setState({\n      menuID: e.key\n    });\n  } \n  \n  render() {\n    // let div_main = null;\n    // if (this.state.menuID == 1) {\n    //   div_main = <DivDefault />\n    // } \n    // else if (this.state.menuID == 2) {\n    //   div_main = <DivNnsCenter />\n    // }\n    // else if (this.state.menuID == 3) {\n    //   div_main = <DivNnsResolver />\n    // }\n    // else if (this.state.menuID == 4) {\n    //   div_main = <DivAuction />\n    // }\n    // else if (this.state.menuID == 5) {\n    //   div_main = <DivNnsCredit />\n    // }\n    // else {\n    //   div_main = div_defult()\n    // }\n\n    return (\n      <Router>\n      <Layout>\n        <Sider\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          onBreakpoint={(broken) => { console.log(broken); }}\n          onCollapse={(collapsed, type) => { console.log(collapsed, type); }}\n        >\n          <div className=\"logo\" />\n          <Menu onClick={this.menuClick}  theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\">\n              <Link to='/'>\n                <Icon type=\"file\" />\n                <span className=\"nav-text\">Default Page</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Link to='/nnscenter'>\n                <Icon type=\"file\" />\n                <span className=\"nav-text\">NNS Center</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Link to='/nnsresolver'>\n                <Icon type=\"file\" />\n                <span className=\"nav-text\">NNS resolver</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n              <Link to='/nnsauction'>\n                <Icon type=\"file\" />\n                <span className=\"nav-text\">NNS Auction</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"5\">\n              <Link to='/nnscredit'>\n                <Icon type=\"file\" />\n                <span className=\"nav-text\">NNS Credit</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"6\">\n              <Link to='/nfttest'>\n                <Icon type=\"file\" />\n                <span className=\"nav-text\">NFT Test</span>\n              </Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <h1>--- NNS Teemo Demo ---</h1>\n\n          </Header>\n          <Content style={{ margin: '24px 16px 0' }}>\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                {this.props.children}\n                {/* {div_main} */}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>\n            NNS ©2019 Created by NEL\n          </Footer>\n        </Layout>\n      </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { async } from \"q\";\r\n\r\nclass NeoHelper {\r\n    public static getAddressFromScriptHash = () =>{\r\n        //根据合约notify输出的scripthash，转换为NEO地址\r\n    }\r\n\r\n    store:any\r\n    constructor(store:any){\r\n        this.store=store\r\n    }\r\n\r\n    public getBlock = async (blockIndex:number) =>{\r\n      let result = await fetch(this.store.rpcUrl + '?jsonrpc=2.0&method=getblock&params=[' + blockIndex +',1]&id=1', {\r\n        // method: 'post',\r\n        // headers: {\r\n        //   'user-agent': 'Mozilla/4.0 MDN Example',\r\n        //   'content-type': 'application/json'\r\n        // },\r\n        // body: JSON.stringify({\r\n        //   \"jsonrpc\": \"2.0\",\r\n        //   \"method\": \"getblock\",\r\n        //   \"params\": [blockIndex, 1],\r\n        //   \"id\": 1\r\n        // })\r\n      });\r\n      let data = await result.json();\r\n      return data;\r\n    }\r\n\r\n    // public static hex2a = (hexx:string) => {\r\n    //     var hex = hexx.toString();//force conversion\r\n    //     var str = '';\r\n    //     for (var i = 0; (i < hex.length && hex.substr(i, 2) !== '00'); i += 2)\r\n    //         str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\r\n    //     return str;\r\n    // }\r\n\r\n    public static hexToString = (hex:string) => {\r\n      var string = '';\r\n      for (var i = 0; i < hex.length; i += 2) {\r\n        string += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\r\n      }\r\n      return string;\r\n  }\r\n\r\n    public static hex2Int = (hexx:string) =>{\r\n      if(hexx=='') return 0\r\n      return parseInt(NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse()), 16)\r\n    }\r\n\r\n    public static hex2TimeStr = (hexx:string) =>{\r\n      return NeoHelper.timetrans(parseInt(NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse()), 16))\r\n    }\r\n\r\n    public static hexReverse = (hexx:string)=>{\r\n      return NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse())\r\n    }\r\n\r\n    public static byte2Hex = (uint8arr:Uint8Array) => {\r\n        if (!uint8arr) {\r\n          return '';\r\n        }\r\n        \r\n        var hexStr = '';\r\n        for (var i = 0; i < uint8arr.length; i++) {\r\n          var hex = (uint8arr[i] & 0xff).toString(16);\r\n          hex = (hex.length === 1) ? '0' + hex : hex;\r\n          hexStr += hex;\r\n        }\r\n        \r\n        return hexStr.toLowerCase();\r\n    }\r\n\r\n    public static hex2Byte = (str:string) => {\r\n        if (!str) {\r\n          return new Uint8Array();\r\n        }\r\n        \r\n        var a = [];\r\n        for (var i = 0, len = str.length; i < len; i+=2) {\r\n          a.push(parseInt(str.substr(i,2),16));\r\n        }\r\n        \r\n        return new Uint8Array(a);\r\n    }\r\n\r\n    public static timetrans = (timestamp:number)=>{\r\n        var date = new Date(timestamp*1000);//如果date为13位不需要乘1000\r\n        var Y = date.getFullYear() + '-';\r\n        var M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';\r\n        var D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\r\n        var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\r\n        var m = (date.getMinutes() <10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\r\n        var s = (date.getSeconds() <10 ? '0' + date.getSeconds() : date.getSeconds());\r\n        return Y+M+D+h+m+s;\r\n    }\r\n\r\n    public static sec2HMS = (sec:number) =>{\r\n      let h=0\r\n      let m=0\r\n      let s=0\r\n      if((sec % 3600) > 0){\r\n        h = parseInt((sec/3600).toString())\r\n        sec = sec - h*3600\r\n      } \r\n      if((sec % 60) > 0){\r\n        m = parseInt((sec/60).toString())\r\n        sec = sec - m*60\r\n      }\r\n      s = sec\r\n\r\n      let mStr='00'\r\n      let sStr='00'\r\n      if(m <10) mStr = '0' + m \r\n        else mStr=m.toString()\r\n      if(s <10) sStr = '0' + s\r\n        else sStr = s.toString()\r\n\r\n      return h + ':' + mStr + ':' + sStr\r\n    }\r\n}\r\n\r\nexport default NeoHelper;","import { async } from \"q\";\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\n\r\n\r\n\r\nclass NNSHelper {\r\n    store:any\r\n    invokeRead_nameHashArray:any\r\n    constructor(store:any) {\r\n        this.store = store\r\n        this.invokeRead_nameHashArray = {\r\n            \"scriptHash\": store.scriptHash.nns_domaincenter,\r\n            \"operation\": \"nameHashArray\",\r\n            \"arguments\": [\r\n                {\"type\":\"Array\",\"value\":[]},\r\n            ],\r\n            \"network\": store.network\r\n        }\r\n    }\r\n\r\n    public namehash = async (nns:string) => {\r\n        var namehash = \"\"\r\n\r\n        this.invokeRead_nameHashArray.arguments[0].value = [];\r\n        for (const str of nns.split('.').reverse()) {\r\n            ((this.invokeRead_nameHashArray.arguments as Argument[])[0].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n        //console.log(invokeRead_nameHashArray)\r\n        //console.log(JSON.stringify(invokeRead_nameHashArray))\r\n        var invokeResp:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(this.invokeRead_nameHashArray)) as InvokeReadInput)\r\n        //console.log(invokeResp)\r\n        namehash = invokeResp.stack[0].value\r\n\r\n        return namehash\r\n    }\r\n}\r\n\r\nexport default NNSHelper;","import {\r\n    List, message, Avatar, Spin,\r\n  } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\nimport {inject,observer} from 'mobx-react';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass DivDefault extends React.Component<any,any> {\r\n    NNSh = new NNSHelper(this.props.store);\r\n\r\n    state = {\r\n      resData : '{}'\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <> \r\n        <Spin tip='连接Teemo……' spinning={!this.props.store.isTeemoReady}>          \r\n          <p>Default Page</p>\r\n          <p>{this.props.store.address}</p>\r\n          <p>{this.props.store.network}||{this.props.store.rpcUrl}||{this.props.store.webSocketURL}||isConnected:{this.props.store.isConnected.toString()}||{this.props.store.nns}</p>\r\n          {/* <p>block: {this.props.blockHeight}</p>\r\n          <p>notify: {this.props.notifyHeight}</p> */}\r\n          <pre>{JSON.stringify(this.props.store.scriptHash,null,2)}</pre>          \r\n          <div>\r\n            <div className=\"demo-loading-container\">\r\n              <Spin />\r\n              {/* <p>readyState: {this.props.store.socketReadyState}</p> */}\r\n              <p>LastWSmsg: {this.props.store.lastWSmsgSec}s</p>\r\n              <p>LastBlockTime: {NeoHelper.timetrans(this.props.store.lastBlockTime)}(before {NeoHelper.sec2HMS(parseInt((new Date().getTime()/1000 - this.props.store.lastBlockTime).toFixed(0)))})</p>\r\n            </div>\r\n            <List\r\n              bordered = {true}\r\n              dataSource={this.props.store.blockDatas}\r\n              pagination={{\r\n                onChange: (page) => {\r\n                  console.log(page);\r\n                },\r\n                pageSize: 5,\r\n              }}\r\n              renderItem={(item: { id: number; blockHeight: number; timeDiff: number; blockTime:number; blockHash:string ; txCount:number }) => (\r\n                <List.Item key={item.id}>\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src=\"https://neo-cdn.azureedge.net/images/favicon.png\" />}\r\n                    title={item.blockHeight}\r\n                    description={item.blockHash + \" tx:\" + item.txCount}\r\n                  />\r\n                  <div>({item.timeDiff + 's'}){NeoHelper.timetrans(item.blockTime)}</div>\r\n                </List.Item>\r\n              )}\r\n            ></List>\r\n          </div>\r\n        </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivDefault;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\nimport {inject,observer} from 'mobx-react';\r\n\r\ninterface OwnerInfo\r\n{\r\n    owner:string//如果长度=0 表示没有初始化\r\n    register : string \r\n    resolver: string ;\r\n    TTL: string ;\r\n    parentOwner: string ;//当此域名注册时，他爹的所有者，记录这个，则可以检测域名的爹变了\r\n    domain: string ;//如果长度=0 表示没有初始化\r\n    parenthash: string ;\r\n    root: string ;//是不是根合约\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass DivNnsCenter extends React.Component<any,any> {\r\n    // NNSh = new NNSHelper(this.props.store); \r\n\r\n    state = {\r\n        resData : '{}'\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        let invokeGetOwnerInfo =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_domaincenter,\r\n            \"operation\": \"getOwnerInfo\",\r\n            \"arguments\": [\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns)},\r\n            ],\r\n            \"network\": this.props.store.network\r\n        } \r\n\r\n        // invokeGetOwnerInfo.arguments[0].value = await this.NNSh.namehash(this.props.store.nns)\r\n        //console.log(JSON.stringify(invokeGetOwnerInfo,null,2))\r\n\r\n        var nnsOwnerInfoData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeGetOwnerInfo)) as InvokeReadInput)\r\n        var stack0:any = nnsOwnerInfoData.stack[0].value;\r\n        //console.log(JSON.stringify(nnsOwnerInfoData,null,2))\r\n        var nnsOwnerInfo:OwnerInfo = {\r\n            owner:stack0[0].value,\r\n            register:stack0[1].value,\r\n            resolver:stack0[2].value,\r\n            TTL:stack0[3].value,\r\n            parentOwner:stack0[4].value,\r\n            domain:stack0[5].value,\r\n            parenthash:stack0[6].value,\r\n            root:stack0[7].value,\r\n        }\r\n        nnsOwnerInfo.domain = NeoHelper.hexToString(nnsOwnerInfo.domain)\r\n        nnsOwnerInfo.TTL = NeoHelper.hex2TimeStr(nnsOwnerInfo.TTL)\r\n        if(nnsOwnerInfo.owner != '') nnsOwnerInfo.owner = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.byte2Hex(NeoHelper.hex2Byte(nnsOwnerInfo.owner).reverse()))\r\n        this.setState({\r\n            resData: JSON.stringify(nnsOwnerInfo, null, 2)                                 \r\n        });\r\n\r\n        //this.invokeRead(JSON.stringify(invokeRead3))\r\n    }\r\n\r\n    // handelChange(e:any){\r\n    //     this.setState({\r\n    //         inputValue:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>NNS Domain Center</p>\r\n            {/* <Input id=\"NNSinput\" placeholder=\"输入要查询的NSS域名\" onChange={this.handelChange.bind(this)} defaultValue={this.state.inputValue}/> */}\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS所有者信息</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsCenter;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\nimport {inject,observer} from 'mobx-react'\r\n\r\n// interface IProps{\r\n//     title:string\r\n//     scriptHash:any\r\n// }\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass DivNnsResolver extends React.Component<any,any> {\r\n    // NNSh = new NNSHelper(this.props.store);\r\n    \r\n    state = {\r\n        resData : '{}'\r\n    }  \r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        let invokeRead_resolve =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_resolver,\r\n            \"operation\": \"resolve\",\r\n            \"arguments\": [\r\n                {\"type\":\"String\",\"value\":\"addr\"},\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns)}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // invokeRead_resolve.arguments[1].value = await this.NNSh.namehash(this.props.store.nns)\r\n\r\n        //console.log(this.invokeRead_resolve)\r\n        var resolverData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_resolve)) as InvokeReadInput)       \r\n        //console.log(resolverData);\r\n\r\n        this.setState({\r\n            resData:NeoHelper.hexToString(resolverData.stack[0].value)==''?'未映射':NeoHelper.hexToString(resolverData.stack[0].value)                                 \r\n        });\r\n    }\r\n\r\n    // handelChange(e:any){\r\n    //     this.setState({\r\n    //         inputValue:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>NNS Resolver</p>\r\n            {/* <Input placeholder=\"输入要查询的NSS域名\" onChange={this.handelChange.bind(this)} defaultValue={this.state.inputValue}/> */}\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">解析NNS</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsResolver;","import React, { Component } from 'react';\r\nimport {autorun, observe} from 'mobx'\r\nimport {Button,Input,Spin,Statistic, Row, Col, Icon,Timeline,Drawer,Switch,InputNumber,Divider} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\nimport ReactDOM from 'react-dom';\r\nimport {inject,observer} from 'mobx-react'\r\n\r\ninterface AuctionState\r\n{\r\n    id:string; //拍卖id,就是拍卖生成的auctionid\r\n    auctionStarter:string;//域名开拍的人\r\n    parenthash:string ;//拍卖内容\r\n    domain:string ;//拍卖内容\r\n    domainTTL:string ;//域名的TTL,用这个信息来判断域名是否发生了变化\r\n    startBlockSelling:number ;//开始销售块\r\n    endBlock:number ;//结束块\r\n    maxPrice:number ;//最高出价\r\n    maxBuyer:string ;//最大出价者\r\n    lastBlock:number ;//最后出价块\r\n}\r\n\r\ninterface NNScredit\r\n{\r\n    namehash:string\r\n    fullDomainName:string \r\n    TTL:string\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass DivAuction extends React.Component<any,any> {\r\n    //NNSh = new NNSHelper(this.props.store);\r\n    //NEOh = new NeoHelper(this.props.store);\r\n    nnsInput:any\r\n    constructor(props:any){\r\n        super(props)\r\n        this.nnsInput = React.createRef();\r\n    }  \r\n\r\n    state = {\r\n        resDataRead : '{}',\r\n        reqDataWrite : '{}',\r\n        resDataWrite : '{}',\r\n        inputAmount: 0,\r\n        loadingR : true,\r\n        loadingW : false,\r\n        CGASBalance:0,\r\n        auctionBalance:0,\r\n        bidBalance:0,\r\n        auctionDay:0,\r\n        auctionStateInfo:{\r\n            \"id\": \"\",\r\n            \"auctionStarter\": \"\",\r\n            \"parenthash\": \"\",\r\n            \"domain\": \"\",\r\n            \"domainTTL\": \"\",\r\n            \"startBlockSelling\": 0,\r\n            \"endBlock\": \"\",\r\n            \"maxPrice\": \"\",\r\n            \"maxBuyer\": \"\",\r\n            \"lastBlock\": \"\"\r\n          },\r\n        CGASopValue:0,\r\n        drawerVisible: false\r\n    }  \r\n\r\n    intervalID:any\r\n    componentDidMount(){\r\n\r\n        this.intervalID = setInterval(async ()=>{\r\n            this.setState({\r\n                auctionDay :await this.calcAuctionDay(this.state.auctionStateInfo.startBlockSelling)\r\n            })           \r\n        },1000)\r\n\r\n        this.getInvokeRead_getBanlance()\r\n\r\n        // console.log(\"teemoReady:\" ,this.props.teemoReady)\r\n        // if(this.props.teemoReady)\r\n        // {\r\n        //     console.log(1)\r\n        //     this.getInvokeRead_getBanlance()\r\n        // }\r\n        // else{\r\n        //     console.log(0)\r\n        //     var intervalID = setInterval(()=>{\r\n        //         console.log(\"teemoReady:\" ,this.props.teemoReady)\r\n        //         if(this.props.teemoReady)\r\n        //         {\r\n        //             setTimeout(()=>{this.getInvokeRead_getBanlance()},1000)                   \r\n        //             clearInterval(intervalID)\r\n        //         }               \r\n        //     },1000) \r\n        // }      \r\n\r\n        window.addEventListener (\"newBlockEvent\", this.doOnEvent, false)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"newBlockEvent\", this.doOnEvent, false);\r\n        clearInterval(this.intervalID)\r\n    }\r\n\r\n    doOnEvent = (e:any) =>{\r\n        console.log('newBlockEvent',e)\r\n        if(e.detail.txidIndex > -1){\r\n            this.getInvokeRead_getBanlance()\r\n        }   \r\n    }\r\n\r\n    calcAuctionDay =async (blockIndex:number) =>{\r\n        var startTimeS = (await new NeoHelper(this.props.store).getBlock(blockIndex)).result.time as number\r\n        return  (new Date().getTime()/1000 - startTimeS)/ 60 / this.props.store.auctionMinPerDay  //每天分钟数\r\n    }\r\n\r\n    getInvokeRead_getBanlance = async () =>{\r\n        let invokeRead_CGAS_getBanlance =  {\r\n            \"scriptHash\": this.props.store.scriptHash.NEP_5_CGAS,\r\n            \"operation\": \"balanceOf\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n        let invokeRead_auction_getBanlance =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"balanceOf\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }       \r\n        let invokeRead_auction_getAuctionState =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"getAuctionStateByFullhash\",\r\n            \"arguments\": [\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns)}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }        \r\n        let invokeRead_auction_getBalanceOfBid =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"balanceOfBid\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":\"\"}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // invokeRead_CGAS_getBanlance.arguments[0].value =  this.props.store.address//await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        // this.invokeRead_auction_getBanlance.arguments[0].value =  this.props.store.address\r\n\r\n        //this.invokeRead_auction_getAuctionState.arguments[0].value = await new NNSHelper(this.props.store).namehash(this.props.store.nns)\r\n\r\n        //console.log(invokeRead_resolve)\r\n        var InvokeReadGroupInput = {group:[{}]}\r\n        InvokeReadGroupInput.group.pop()\r\n        InvokeReadGroupInput.group.push(invokeRead_CGAS_getBanlance)\r\n        InvokeReadGroupInput.group.push(invokeRead_auction_getBanlance)\r\n        InvokeReadGroupInput.group.push(invokeRead_auction_getAuctionState)\r\n        \r\n        // console.log(JSON.stringify(InvokeReadGroupInput,null,2));\r\n        \r\n        var resData:InvokeScriptResp = await Teemo.NEO.invokeReadGroup(JSON.parse(JSON.stringify(InvokeReadGroupInput)) as InvokeReadGroup)       \r\n        //console.log(resData.stack[3].value);\r\n        //console.log(resData)\r\n\r\n        if(resData.stack[0] != null){\r\n            //console.log('stack',resData.stack)\r\n            var stack2:any = resData.stack[2].value;\r\n            //console.log('stack2',stack2)\r\n\r\n            var AuctionStateInfo:AuctionState = {\r\n                id:stack2[0].value, //拍卖id,就是拍卖生成的auctionid\r\n                auctionStarter:stack2[1].value,//域名开拍的人\r\n                parenthash:stack2[2].value,//拍卖内容\r\n                domain:stack2[3].value,//拍卖内容\r\n                domainTTL:stack2[4].value,//域名的TTL,用这个信息来判断域名是否发生了变化\r\n                startBlockSelling:stack2[5].value,//开始销售块\r\n                endBlock:stack2[6].value,//结束块\r\n                maxPrice:stack2[7].value,//最高出价\r\n                maxBuyer:stack2[8].value,//最大出价者\r\n                lastBlock:stack2[9].value//最后出价块\r\n            }\r\n            AuctionStateInfo.auctionStarter = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.hexReverse(AuctionStateInfo.auctionStarter))\r\n            AuctionStateInfo.domain = NeoHelper.hexToString(AuctionStateInfo.domain)\r\n            AuctionStateInfo.domainTTL = NeoHelper.hex2TimeStr(AuctionStateInfo.domainTTL)\r\n            AuctionStateInfo.maxPrice = AuctionStateInfo.maxPrice/10**8\r\n            if(AuctionStateInfo.maxBuyer != ''){\r\n                AuctionStateInfo.maxBuyer = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.hexReverse(AuctionStateInfo.maxBuyer))\r\n            }      \r\n\r\n            //---第二轮invokescript\r\n\r\n            // this.invokeRead_auction_getBalanceOfBid.arguments[0].value = this.props.store.address\r\n            invokeRead_auction_getBalanceOfBid.arguments[1].value = AuctionStateInfo.id\r\n\r\n            var resData2:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_auction_getBalanceOfBid)) as InvokeArgs)\r\n\r\n            //console.log('AuctionStateInfo',AuctionStateInfo)\r\n\r\n            //var CGAS_balacnce = resData.stack[0].value\r\n            //console.log(NeoHelper.hex2Int(CGAS_balacnce)/10**8)\r\n\r\n            this.setState({\r\n                CGASBalance:NeoHelper.hex2Int(resData.stack[0].value)/10**8,\r\n                auctionBalance:NeoHelper.hex2Int(resData.stack[1].value)/10**8,\r\n                bidBalance:NeoHelper.hex2Int(resData2.stack[0].value)/10**8,\r\n                auctionStateInfo:AuctionStateInfo,\r\n                auctionDay:await this.calcAuctionDay(AuctionStateInfo.startBlockSelling),\r\n                resDataRead:JSON.stringify(AuctionStateInfo,null,2),\r\n                loadingR:false\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                resDataRead:\"查询异常\",\r\n                loadingR:false\r\n            })\r\n        }\r\n\r\n        \r\n\r\n        //console.log(this.state.auctionStateInfo)\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        this.getInvokeRead_getBanlance()\r\n    }\r\n\r\n    butInvoke_doCGASin_click = async () =>{\r\n        let invoke_CGAS_doCGASinStep0 =  {\r\n            \"scriptHash\": this.props.store.scriptHash.NEP_5_CGAS,\r\n            \"operation\": \"transfer\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"Address\",\"value\":await Teemo.NEO.getAddressFromScriptHash(this.props.store.scriptHash.nns_auction)},\r\n                {\"type\":\"Integer\",\"value\":this.state.CGASopValue * (10**8)}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍充值CGAS转账\",\r\n            \"network\": this.props.store.network\r\n        }\r\n        let invoke_auction_doCGASinStep1 =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"setmoneyin\",\r\n            \"arguments\": [\r\n                {\"type\":\"Hook_Txid\",\"value\":0}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍充值确认\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_CGAS_doCGASinStep0.arguments[0].value = this.props.store.address\r\n        // this.invoke_CGAS_doCGASinStep0.arguments[1].value = await Teemo.NEO.getAddressFromScriptHash(this.props.store.scriptHash.nns_auction)\r\n        // this.invoke_CGAS_doCGASinStep0.arguments[2].value = this.state.CGASopValue * (10**8)\r\n\r\n        //console.log(invoke_CGAS_doCGASinStep0)\r\n\r\n        var InvokeGroupInput = {merge:true,group:[{}]}\r\n        InvokeGroupInput.group.pop()\r\n        InvokeGroupInput.group.push(invoke_CGAS_doCGASinStep0)\r\n        InvokeGroupInput.group.push(invoke_auction_doCGASinStep1)\r\n\r\n        //console.log(InvokeGroupInput)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invokeGroup(JSON.parse(JSON.stringify(InvokeGroupInput)) as InvokeGroup)\r\n\r\n        //console.log(resp)\r\n\r\n        resp.forEach(res => {\r\n            this.props.store.addTxidSended(res.txid)\r\n        });\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(InvokeGroupInput,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doCGASout_click = async () =>{\r\n        let invoke_auction_doCGASout =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"getmoneyback\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"Integer\",\"value\":this.state.CGASopValue * (10**8)}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍CGAS提取\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doCGASout.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doCGASout.arguments[1].value = this.state.CGASopValue * (10**8)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doCGASout)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doCGASout,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doStartAuction_click = async () =>{\r\n        let invoke_auction_doStartAuction =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"startAuction\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])},\r\n                {\"type\":\"String\",\"value\":this.props.store.nns.split('.')[0]}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍开标\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doStartAuction.arguments[0].value = this.props.store.address;\r\n        // this.invoke_auction_doStartAuction.arguments[1].value = await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])\r\n        // this.invoke_auction_doStartAuction.arguments[2].value = this.props.store.nns.split('.')[0]\r\n\r\n        //console.log(invoke_auction_doStartAuction)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doStartAuction)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doStartAuction,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doBid_click = async() =>{\r\n        let invoke_auction_doBid =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"raise\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":this.state.auctionStateInfo.id},\r\n                {\"type\":\"Integer\",\"value\":(this.state.inputAmount*(10**8)).toString()}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍加价\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doBid.arguments[0].value = this.props.store.address;\r\n        // this.invoke_auction_doBid.arguments[1].value = this.state.auctionStateInfo.id\r\n        // this.invoke_auction_doBid.arguments[2].value = (this.state.inputAmount*(10**8)).toString()\r\n\r\n        console.log(invoke_auction_doBid)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doBid)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doBid,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        })\r\n    }\r\n\r\n    butInvoke_doBidSettlementAndCollect_click = async() =>{\r\n        let invoke_auction_doBidSettlement =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"bidSettlement\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":this.state.auctionStateInfo.id}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍域名领取\",\r\n            \"network\": this.props.store.network\r\n        }        \r\n        let invoke_auction_doCollect =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"collectDomain\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":this.state.auctionStateInfo.id}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍域名领取\",\r\n            \"network\": this.props.store.network\r\n        }\r\n        // this.invoke_auction_doBidSettlement.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doBidSettlement.arguments[1].value = this.state.auctionStateInfo.id\r\n\r\n        // this.invoke_auction_doCollect.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doCollect.arguments[1].value = this.state.auctionStateInfo.id\r\n\r\n        var InvokeGroupInput = {merge:false,group:[{}]}\r\n        InvokeGroupInput.group.pop()\r\n        InvokeGroupInput.group.push(invoke_auction_doBidSettlement)\r\n        InvokeGroupInput.group.push(invoke_auction_doCollect)\r\n\r\n        //console.log(JSON.stringify(InvokeGroupInput,null,2))\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invokeGroup(JSON.parse(JSON.stringify(InvokeGroupInput)) as InvokeGroup)\r\n\r\n        //console.log(resp)\r\n        resp.forEach(res => {\r\n            this.props.store.addTxidSended(res.txid)\r\n        });\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(InvokeGroupInput,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doRenew_click = async() =>{\r\n        let invoke_auction_doRenew =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"renewDomain\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])},\r\n                {\"type\":\"String\",\"value\":this.props.store.nns.split('.')[0]}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS域名续期\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doRenew.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doRenew.arguments[1].value = await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])\r\n        // this.invoke_auction_doRenew.arguments[2].value = this.props.store.nns.split('.')[0]\r\n\r\n        console.log(invoke_auction_doRenew)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doRenew)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doRenew,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        })\r\n    }\r\n\r\n    CGASopChange(e:any){\r\n        this.setState({\r\n            CGASopValue:e.target.value\r\n        })\r\n    }\r\n\r\n    // addrChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueAddr:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // nnsChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueNns:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    amountChange(e:any){\r\n        this.setState({\r\n            inputAmount:e\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>NNS Auction</p>\r\n            <Switch checked={this.props.store.auctionMinPerDay == 5?true:false} checkedChildren=\"*.test\" unCheckedChildren=\"*.neo\" defaultChecked onChange={async (e)=>{\r\n                    console.log(e)\r\n                    if(e) \r\n                    {\r\n                        this.props.store.updateAuctionMinPerDay(5)\r\n                        var newNns = this.props.store.nns.replace('.neo','.test')\r\n                        this.props.store.updateNNS(newNns);\r\n                        // console.log(this.nnsInput.current)\r\n                        this.nnsInput.current.state.value = newNns\r\n                    }\r\n                    else {\r\n                        this.props.store.updateAuctionMinPerDay(1440)\r\n                        var newNns = this.props.store.nns.replace('.test','.neo')\r\n                        this.props.store.updateNNS(newNns);\r\n                        this.nnsInput.current.state.value = newNns\r\n                    }\r\n\r\n                    this.setState({\r\n                        CGASBalance:0,\r\n                        auctionBalance:0,\r\n                        bidBalance:0,\r\n                        auctionStateInfo:{\r\n                            \"id\": \"\",\r\n                            \"auctionStarter\": \"\",\r\n                            \"parenthash\": \"\",\r\n                            \"domain\": \"\",\r\n                            \"domainTTL\": \"\",\r\n                            \"startBlockSelling\": 0,\r\n                            \"endBlock\": \"\",\r\n                            \"maxPrice\": \"\",\r\n                            \"maxBuyer\": \"\",\r\n                            \"lastBlock\": \"\"\r\n                          },\r\n                        auctionDay:await this.calcAuctionDay(0),\r\n                        resDataRead:\"{}\"\r\n                    })\r\n                    this.getInvokeRead_getBanlance()                 \r\n                }} />选择根域(流速{this.props.store.auctionMinPerDay}分钟每天)\r\n            <Divider /> \r\n            <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                        <Statistic title=\"钱包账户\" value={this.state.CGASBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Spin>                  \r\n                </Col>\r\n                <Col span={8}>\r\n                    <Row gutter={16}>\r\n                        <Col span={8}>\r\n                            <Button onClick={this.butInvoke_doCGASout_click} ><Icon type=\"left\" />提取</Button>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Input placeholder=\"输入金额\" onChange={this.CGASopChange.bind(this)} defaultValue={this.state.CGASopValue.toString()} />   \r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Button onClick={this.butInvoke_doCGASin_click} >充值<Icon type=\"right\" /></Button>\r\n                        </Col>\r\n                    </Row>                                                     \r\n                </Col>\r\n                <Col span={8}>\r\n                    <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                    <Statistic title=\"合约账户\" value={this.state.auctionBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Spin>                  \r\n                </Col>\r\n            </Row>\r\n            {/* <Input placeholder=\"输入要查询的地址\" onChange={this.addrChange.bind(this)} defaultValue={this.props.store.address}/> */}\r\n            {/* <Input placeholder=\"输入要绑定的NNS\" onChange={this.nnsChange.bind(this)} defaultValue={this.props.store.nns}/> */}\r\n            <Input placeholder=\"输入地址\" onChange={(e)=>{this.props.store.updateAddress(e.target.value)}} defaultValue={this.props.store.address}/>\r\n            <Input ref={this.nnsInput} placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">刷新数据</Button>\r\n            <Divider type=\"vertical\" />\r\n            <Button onClick={this.butInvoke_doStartAuction_click}>开标</Button>           \r\n            <Divider type=\"vertical\" />\r\n            <InputNumber min={0} max={this.state.auctionBalance} step={0.1} onChange={this.amountChange.bind(this)} />=>\r\n            <Button onClick={this.butInvoke_doBid_click}>加价</Button> \r\n            <Divider type=\"vertical\" /> \r\n            <Button onClick={this.butInvoke_doBidSettlementAndCollect_click}>结算与领取</Button>\r\n            <Divider type=\"vertical\" /> \r\n            <Button onClick={this.butInvoke_doRenew_click} disabled={this.state.auctionDay>(365-90)?false:true}>续期{(this.state.auctionDay-(365-90)).toFixed(2)}</Button>             \r\n            <Divider />         \r\n            <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                <Row type=\"flex\" align=\"middle\" gutter={16}>\r\n                    <Col span={3}>\r\n                        <Statistic title=\"开拍天数\" value={this.state.auctionDay.toFixed(2)} suffix=\"天\" prefix={<Icon type=\"clock-circle\" />} />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Switch checked={this.state.drawerVisible} onChange={()=>{this.setState({drawerVisible: !this.state.drawerVisible})}} />显示时间轴  \r\n                    </Col>\r\n                    <Col span={13}>\r\n                        <Statistic title=\"加价总数\" value={this.state.bidBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Col>\r\n                </Row>                                             \r\n                \r\n                {/* <Button type=\"primary\" onClick={()=>{this.setState({drawerVisible: true})}}>查看竞拍阶段</Button> */}\r\n                <Drawer\r\n                    title=\"竞拍阶段\"\r\n                    placement=\"left\"\r\n                    closable={false}\r\n                    onClose={()=>{this.setState({drawerVisible: false})}}\r\n                    visible={this.state.drawerVisible}\r\n                    >\r\n                        <Timeline>\r\n                            <Timeline.Item color={this.state.auctionDay>0?'green':'blue'}>确定期（1-2）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>2?'green':'blue'}>确定期（3）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>3?'green':'blue'}>随机期（4-5）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>5?'green':'blue'}>竞拍结束（5）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>(365-90)?'green':'blue'}>续期期（365-90）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>365?'green':'blue'}>到期（365）</Timeline.Item>\r\n                        </Timeline>\r\n                    </Drawer>\r\n                <pre>{this.state.resDataRead}</pre>\r\n            </Spin>\r\n            {/* <pre>{this.state.reqDataWrite}</pre> */}\r\n            <Spin tip='请求中' spinning={this.state.loadingW}>\r\n                <pre>{this.state.resDataWrite}</pre>\r\n            </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivAuction;","import React, { Component } from 'react';\r\nimport {autorun} from 'mobx'\r\nimport {Button,Input,Spin} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\nimport {inject,observer} from 'mobx-react'\r\n\r\ninterface NNScredit\r\n{\r\n    namehash:string\r\n    fullDomainName:string \r\n    TTL:string\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass DivNnsCredit extends React.Component<any,any> {\r\n    state = {\r\n        resDataRead : '{}',\r\n        reqDataWrite : '{}',\r\n        resDataWrite : '{}',\r\n        loadingR : false,\r\n        loadingW : false\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener (\"newBlockEvent\", this.doOnEvent, false)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"newBlockEvent\", this.doOnEvent, false);\r\n    }\r\n\r\n    doOnEvent = (e:any) =>{\r\n        console.log('newBlockEvent',e)\r\n        if(e.detail.txidIndex > -1){\r\n            this.getInvokeRead()\r\n        }  \r\n    }\r\n\r\n    getInvokeRead = async () =>{\r\n        let invokeRead_credit =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_credit,\r\n            \"operation\": \"getCreditInfo\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":\"\"}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        invokeRead_credit.arguments[0].value =  this.props.store.address//await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        console.log(JSON.stringify(invokeRead_credit,null,2))\r\n        var creditData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_credit)) as InvokeReadInput)       \r\n        //console.log(creditData);\r\n\r\n        if(creditData.stack[0] != null){\r\n            var stack0:any = creditData.stack[0].value;\r\n            var creditInfo:NNScredit = {\r\n                namehash:stack0[0].value,\r\n                fullDomainName:stack0[1].value,\r\n                TTL:stack0[2].value,\r\n            }\r\n            creditInfo.fullDomainName = NeoHelper.hexToString(creditInfo.fullDomainName)\r\n            creditInfo.TTL = NeoHelper.hex2TimeStr(creditInfo.TTL)\r\n    \r\n            this.setState({\r\n                resDataRead:JSON.stringify(creditInfo, null, 2),\r\n                loadingR:false                                 \r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                resDataRead:\"从未映射\",\r\n                loadingR:false                                 \r\n            });\r\n        }\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        this.getInvokeRead()\r\n    }\r\n\r\n    butInvokeCreditAuthenticateClick = async(e:any) => {\r\n        let invoke_credit_authenticate =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_credit,\r\n            \"operation\": \"authenticate\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":\"\"},\r\n                {\"type\":\"Array\",\"value\":[]}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS反向解析绑定\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        invoke_credit_authenticate.arguments[0].value = this.props.store.address\r\n        invoke_credit_authenticate.arguments[1].value = []\r\n        for (const str of this.props.store.nns.split('.').reverse()) {\r\n            ((invoke_credit_authenticate.arguments as Argument[])[1].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        console.log(JSON.stringify(invoke_credit_authenticate,null,2))\r\n\r\n        var invokeCreditAuthenticateResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_authenticate)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditAuthenticateResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_authenticate,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditAuthenticateResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvokeCreditRevokeClick = async(e:any) => {\r\n        let invoke_credit_revoke =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_credit,\r\n            \"operation\": \"revoke\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":\"\"},\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS反向解析解绑\",\r\n            \"network\": this.props.store.network\r\n        }  \r\n\r\n        invoke_credit_revoke.arguments[0].value = this.props.store.address\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditRevokeResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_revoke)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditRevokeResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_revoke,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditRevokeResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                                                                 \r\n        });\r\n    }\r\n\r\n    // addrChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueAddr:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // nnsChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueNns:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>NNS Credit</p>\r\n            {/* <Input placeholder=\"输入要查询的地址\" onChange={this.addrChange.bind(this)} defaultValue={this.state.inputValueAddr}/>\r\n            <Input placeholder=\"输入要绑定的NNS\" onChange={this.nnsChange.bind(this)} defaultValue={this.state.inputValueNns}/> */}\r\n            <Input placeholder=\"输入地址\" onChange={(e)=>{this.props.store.updateAddress(e.target.value)}} defaultValue={this.props.store.address}/>\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS反向解析信息</Button>\r\n            <Button onClick={this.butInvokeCreditAuthenticateClick}>绑定</Button>\r\n            <Button onClick={this.butInvokeCreditRevokeClick}>解绑</Button>\r\n            <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                <pre>{this.state.resDataRead}</pre>\r\n            </Spin>\r\n            {/* <pre>{this.state.reqDataWrite}</pre> */}\r\n            <Spin tip='请求中' spinning={this.state.loadingW}>\r\n                <pre>{this.state.resDataWrite}</pre>\r\n            </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsCredit;","import {\r\n    List, message, Avatar, Spin,\r\n  } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async, timeout } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\nimport {inject,observer} from 'mobx-react';\r\nimport Item from 'antd/lib/list/Item';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass DivNFTtest extends React.Component<any,any> {\r\n    state={\r\n        NFTscripthash:'',\r\n        resData : '{}',\r\n        name:'',\r\n        symbol:'',\r\n        supportedStandards:'',\r\n        totalSupply:0,\r\n        tokens:[{\r\n            tokenID:0,\r\n            allowance:'',\r\n            ownerOf:'',\r\n            properties:'',\r\n            rwProperties:'',\r\n            token:'',\r\n            uri:''\r\n        }]\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.state.NFTscripthash = this.props.store.scriptHash.NFT_test_HashPuppies\r\n    }\r\n\r\n    getNFTinfos = async ()=>{\r\n        let input = {\r\n            scriptHash: this.state.NFTscripthash,\r\n            operation: \"\",\r\n            arguments: [],\r\n            network: this.props.store.network\r\n        }\r\n\r\n        let inputs = {group:[{}]}\r\n        inputs.group.pop()\r\n\r\n        let operations = ['name','symbol','supportedStandards','totalSupply']\r\n\r\n        operations.forEach(operation => {\r\n            input.operation = operation\r\n            inputs.group.push(JSON.parse(JSON.stringify(input)))\r\n        });\r\n\r\n        console.log(JSON.stringify(inputs,null,2))\r\n\r\n        let result:any = await Teemo.NEO.invokeReadGroup(JSON.parse(JSON.stringify(inputs))) as InvokeReadGroup\r\n\r\n        var NFTDataArray = this.state.tokens\r\n\r\n        if(NFTDataArray[0].tokenID == 0 ) NFTDataArray.shift()\r\n        //if(NFTDataArray.length>=50) NFTDataArray.pop()\r\n\r\n        let totalSupply = parseInt('0x' + result.stack[3].value)\r\n        for (var i=1;i<=totalSupply;i++)\r\n        {\r\n            let tokenResult =await this.getTokenInfo(i)\r\n            NFTDataArray.push(tokenResult)\r\n            if(i>=30) break;\r\n        }\r\n        \r\n        // result = result.stack[0].value\r\n        // result = NeoHelper.hexToString(result)\r\n        // console.log(result)\r\n        this.setState({\r\n            // resData:JSON.stringify(result,null,2),\r\n            name:NeoHelper.hexToString(result.stack[0].value),\r\n            symbol:NeoHelper.hexToString(result.stack[1].value),\r\n            supportedStandards:NeoHelper.hexToString(result.stack[2].value),//.replace('80010006','')),\r\n            totalSupply:parseInt('0x' + result.stack[3].value),\r\n            tokens:NFTDataArray\r\n        })\r\n    }\r\n\r\n    getTokenInfo=async (tokenID:number)=>{\r\n        let input = {\r\n            scriptHash: this.state.NFTscripthash,\r\n            operation: \"\",\r\n            arguments: [{type:\"Integer\",value:tokenID}],\r\n            network: this.props.store.network\r\n        }\r\n\r\n        let inputs = {group:[{}]}\r\n        inputs.group.pop()\r\n        let operations = ['allowance','ownerOf','properties','rwProperties','token','uri']\r\n        operations.forEach(operation => {\r\n            input.operation = operation\r\n            inputs.group.push(JSON.parse(JSON.stringify(input)))\r\n        });\r\n\r\n        let result:any = await Teemo.NEO.invokeReadGroup(JSON.parse(JSON.stringify(inputs))) as InvokeReadGroup\r\n\r\n        return {\r\n            tokenID:tokenID,\r\n            allowance:result.stack[0].value,\r\n            ownerOf:await Teemo.NEO.getAddressFromScriptHash(NeoHelper.hexReverse(result.stack[1].value)),\r\n            properties:NeoHelper.hexToString(result.stack[2].value),\r\n            rwProperties:NeoHelper.hexToString(result.stack[3].value),\r\n            token:result.stack[4].value,\r\n            uri:NeoHelper.hexToString(result.stack[5].value) \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <p>NFT test-{this.state.NFTscripthash}</p>\r\n            <Button onClick={this.getNFTinfos}>刷新数据</Button>\r\n            <pre>{this.state.resData}</pre>\r\n            <p>name:{this.state.name}</p>\r\n            <p>symbol:{this.state.symbol}</p>\r\n            <p>supportedStandards:{this.state.supportedStandards}</p>\r\n            <p>totalSupply:{this.state.totalSupply}</p>\r\n            <List\r\n              itemLayout=\"vertical\"\r\n              bordered = {true}\r\n              dataSource={this.state.tokens}\r\n              pagination={{\r\n                onChange: (page) => {\r\n                  console.log(page);\r\n                },\r\n                pageSize: 5,\r\n              }}\r\n              renderItem={(item: { \r\n                tokenID:number,\r\n                allowance:string,\r\n                ownerOf:string,\r\n                properties:string,\r\n                rwProperties:string,\r\n                token:string,\r\n                uri:string\r\n              }) => (\r\n                <List.Item \r\n                    key={item.tokenID}\r\n                    extra={<img width={272} alt=\"NFT URI\" src={item.uri} />}\r\n                >\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src='https://neo-cdn.azureedge.net/images/favicon.png' />}\r\n                    title={'tokenID: ' + item.tokenID}\r\n                    description={'owner: ' + item.ownerOf}//{item.token}\r\n                  />\r\n                  <div className=\"wrap\">\r\n                    properties:{item.properties}\r\n                    <br />\r\n                    rwProperties:{item.rwProperties}\r\n                  </div>\r\n                </List.Item>\r\n              )}\r\n            ></List>\r\n        </div>    \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DivNFTtest;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, observer } from \"mobx-react\";\nimport Store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router, Route,BrowserRouter } from 'react-router-dom'\n\nimport DivDefault from './components/divDefault';\nimport DivNnsCenter from './components/divNnsCenter';\nimport DivNnsResolver from './components/divNnsResolver';\nimport DivAuction from './components/divAuction';\nimport DivNnsCredit from './components/divNnsCredit';\nimport DivNFTtest from './components/divNFTtest';\n\nconst store = new Store();\n\nReactDOM.render(\n        <Provider store={store}>\n                <BrowserRouter basename=\"/nns\">\n                        <App>\n                                <Route path=\"/\" exact  component={DivDefault}/>\n                                <Route path=\"/nnscenter\" component={DivNnsCenter}/>\n                                <Route path=\"/nnsresolver\" component={DivNnsResolver}/>\n                                <Route path=\"/nnsauction\" component={DivAuction}/>\n                                <Route path=\"/nnscredit\" component={DivNnsCredit}/>\n                                <Route path=\"/nfttest\" component={DivNFTtest}/>\n                        </App>\n                </BrowserRouter>\n        </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}