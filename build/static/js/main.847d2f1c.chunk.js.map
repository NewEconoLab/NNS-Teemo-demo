{"version":3,"sources":["store.ts","Tools/neoHelper.tsx","Tools/nnsHelper.tsx","components/divDefault.tsx","components/divNnsCenter.tsx","components/divNnsResolver.tsx","components/divAuction.tsx","components/divNnsCredit.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Store","_this","this","Object","classCallCheck","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","updateLastWSmsgSec","lastWSmsgSec","Date","getTime","lastWSmsgTime","socketInit","socket","socketReadyState","readyState","time","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","pushEvent","eventName","eventData","event","CustomEvent","detail","window","dispatchEvent","getDelay","parseInt","toFixed","_descriptor18","_descriptor19","init","setInterval","network","observable","nns_domaincenter","nns_resolver","nns_auction","nns_credit","NEP_5_CGAS","NEP_5_NNC","action","addr","_this2","address","net","_this3","nns","_this4","computed","blockHeight","blockTime","blockHash","timeDiff","txid","_this5","txids","unshift","_this6","close","blockDatas","WebSocket","webSocketURL","onclose","console","log","notification","warning","message","description","onerror","error","onopen","send","success","onmessage","data","socketMsgs","JSON","parse","txidIndex","length","tx","findIndex","element","info","blockInsertTime","svrSystemTime","blockHeightDataArray","shift","pop","blockData","lastBlockTime","addEventListener","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","_this7","isTeemoReady","Teemo","NEO","getAccount","then","updateAddress","catch","isConnected","t0","getNetworks","t1","sent","defaultNetwork","updateNetwork","call","stop","_x","apply","arguments","_ref2","_callee2","_context2","_x2","NeoHelper","store","getBlock","blockIndex","result","fetch","rpcUrl","json","abrupt","getAddressFromScriptHash","hex2a","hexx","hex","toString","str","i","substr","String","fromCharCode","hex2Int","byte2Hex","hex2Byte","reverse","hex2TimeStr","timetrans","hexReverse","uint8arr","hexStr","toLowerCase","Uint8Array","len","push","timestamp","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","sec2HMS","sec","h","m","s","NNSHelper","invokeRead_nameHashArray","namehash","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","invokeResp","value","undefined","split","Symbol","iterator","done","type","return","finish","invokeRead","stringify","stack","scriptHash","operation","DivDefault","observer","NNSh","props","state","resData","react_default","createElement","Fragment","spin","tip","spinning","title","className","list","bordered","dataSource","pagination","onChange","page","pageSize","renderItem","item","Item","key","id","Meta","avatar","src","txCount","React","Component","DivNnsCenter","butGetInvokeReadClick","e","invokeGetOwnerInfo","nnsOwnerInfoData","stack0","nnsOwnerInfo","t2","t3","t4","owner","register","resolver","TTL","parentOwner","domain","parenthash","root","setState","input","placeholder","updateNNS","target","defaultValue","es_button","onClick","DivNnsResolver","invokeRead_resolve","resolverData","t5","DivAuction","resDataRead","reqDataWrite","resDataWrite","inputAmount","loadingR","loadingW","CGASBalance","auctionBalance","bidBalance","auctionDay","auctionStateInfo","auctionStarter","domainTTL","startBlockSelling","endBlock","maxPrice","maxBuyer","lastBlock","CGASopValue","drawerVisible","intervalID","doOnEvent","getInvokeRead_getBanlance","calcAuctionDay","startTimeS","invokeRead_CGAS_getBanlance","invokeRead_auction_getBanlance","invokeRead_auction_getAuctionState","invokeRead_auction_getBalanceOfBid","InvokeReadGroupInput","stack2","AuctionStateInfo","resData2","group","invokeReadGroup","Math","pow","t6","t7","t8","t9","t10","t11","t12","_callee3","_context3","butInvoke_doCGASin_click","_callee4","invoke_CGAS_doCGASinStep0","invoke_auction_doCGASinStep1","InvokeGroupInput","resp","_context4","fee","merge","invokeGroup","forEach","res","addTxidSended","butInvoke_doCGASout_click","_callee5","invoke_auction_doCGASout","_context5","invoke","butInvoke_doStartAuction_click","_callee6","invoke_auction_doStartAuction","_context6","butInvoke_doBid_click","_callee7","invoke_auction_doBid","_context7","butInvoke_doBidSettlementAndCollect_click","_callee8","invoke_auction_doBidSettlement","invoke_auction_doCollect","_context8","butInvoke_doRenew_click","_callee9","invoke_auction_doRenew","_context9","_callee10","_context10","removeEventListener","clearInterval","row","gutter","col","span","statistic","suffix","prefix","icon","CGASopChange","bind","divider","input_number","min","max","step","amountChange","disabled","align","es_switch","checked","drawer","placement","closable","onClose","visible","timeline","color","DivNnsCredit","getInvokeRead","invokeRead_credit","creditData","creditInfo","fullDomainName","butInvokeCreditAuthenticateClick","invoke_credit_authenticate","invokeCreditAuthenticateResp","butInvokeCreditRevokeClick","invoke_credit_revoke","invokeCreditRevokeResp","Header","Layout","Content","Footer","Sider","App","menuID","menuClick","div_main","divDefault","divNnsCenter","divNnsResolver","divAuction","divNnsCredit","layout","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","menu","theme","mode","defaultSelectedKeys","style","background","padding","margin","minHeight","textAlign","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.847d2f1c.chunk.js","sourcesContent":["import {observable, action, computed} from 'mobx';\r\nimport { notification } from 'antd';\r\nimport NeoHelper from './Tools/neoHelper';\r\n\r\nclass Store {\r\n    constructor(){\r\n        this.init()\r\n        setInterval(this.updateLastWSmsgSec,1000)\r\n    }\r\n\r\n    @observable isTeemoReady = false\r\n    @observable isConnected = true\r\n\r\n    @observable scriptHash = {\r\n        nns_domaincenter : \"348387116c4a75e420663277d9c02049907128c7\",\r\n        nns_resolver : \"6e2aea28af9c5febea0774759b1b76398e3167f1\",\r\n        nns_auction:\"5fd8c2aed0eec0fa103f6fba16748b453baf5b2e\",\r\n        nns_credit : \"77bf387c9b5f2e2c33ef8507478b103285c55b11\",\r\n        NEP_5_CGAS:\"74f2dc36a68fdc4682034178eb2220729231db76\",\r\n        NEP_5_NNC:\"fc732edee1efdf968c23c20a9628eaa5a6ccb934\"\r\n    }\r\n\r\n    @observable network = 'TestNet'\r\n    @observable address:string = 'A**********************'\r\n    @observable nns:string='qmz.test'\r\n    @action public updateAddress = (addr:string) =>{\r\n        this.address = addr\r\n    }\r\n    @action public updateNetwork = (net:string) =>{\r\n        this.network = net\r\n    }\r\n    @action public updateNNS = (nns:string) =>{\r\n        this.nns = nns\r\n    }\r\n    @computed get rpcUrl(){\r\n        if(this.network=='MainNet') return 'http://seed.nel.group:10332'\r\n        else return 'http://test.nel.group:20332'\r\n    }\r\n\r\n    @computed get webSocketURL(){\r\n        if(this.network=='MainNet') return 'ws://47.99.35.147:82/ws/mainnet'\r\n        else return 'ws://47.99.35.147:82/ws/testnet'\r\n    }\r\n\r\n    updateLastWSmsgSec = () =>{     \r\n        this.lastWSmsgSec=(new Date().getTime() - this.lastWSmsgTime)/1000\r\n\r\n        //webstock 如果2分钟取不到最新块，会发送心跳数据包\r\n        if(this.lastWSmsgSec>75){\r\n            \r\n            this.lastWSmsgTime=new Date().getTime(),\r\n            this.lastWSmsgSec=0\r\n\r\n            this.socketInit()\r\n        }\r\n\r\n        if(this.socket) this.socketReadyState = this.socket.readyState\r\n    }\r\n\r\n    socket: any;\r\n    time = new Date().getTime()\r\n    @observable socketReadyState = -1\r\n    @observable socketMsgs:Array<any> = []\r\n    @observable blockDatas=[{\r\n        blockHeight:-1,\r\n        blockTime:0,\r\n        blockHash:'',\r\n        timeDiff:0\r\n      }]\r\n    @observable lastBlockTime=0\r\n    @observable lastWSmsgTime=new Date().getTime()\r\n    @observable lastWSmsgSec=0\r\n\r\n    // @computed get lastBlockTime(){\r\n    //     if(this.blockData.length >1){\r\n    //         return this.blockData[0].time\r\n    //     }\r\n    //     else return 0\r\n    // }\r\n    @observable txids:string[] = []\r\n    @action public addTxidSended =(txid:string) =>{\r\n        this.txids.unshift('0x' + txid)\r\n    }\r\n\r\n    pushEvent =(eventName:string,eventData:any) =>{\r\n        var event = new CustomEvent(eventName, { \r\n            detail: eventData\r\n        });\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    getDelay = (time:number) =>{\r\n        return parseInt((new Date().getTime()/1000 - time).toFixed(0)) + 's'\r\n    }\r\n\r\n    @action socketInit =() =>{\r\n        if(this.socket){\r\n            this.socket.close()\r\n        }\r\n\r\n        this.blockDatas=[{\r\n            blockHeight:-1,\r\n            blockTime:0,\r\n            blockHash:'',\r\n            timeDiff:0\r\n          }]\r\n\r\n        this.socket = new WebSocket(this.webSocketURL);\r\n    \r\n        this.socket.onclose = (event:any) => {\r\n            console.log(event);\r\n            notification.warning({message:'websocket',description:'close'})\r\n        };\r\n        this.socket.onerror = (event:any) => {\r\n            console.log(event);\r\n            notification.error({message:'websocket',description:'error'})\r\n        };\r\n        this.socket.onopen = (event:any) =>{\r\n            console.log(event);\r\n            this.socket.send('Hello Server!');\r\n            notification.success({message:'websocket',description:'open on ' + this.webSocketURL})\r\n        }\r\n        this.socket.onmessage = (event:any) =>{\r\n            console.log(event);\r\n            console.log(event.data);\r\n\r\n            this.socketMsgs.unshift(event.data);\r\n\r\n            this.lastWSmsgTime = new Date().getTime()\r\n    \r\n            //let timeDiff = new Date().getTime() - this.time;\r\n            this.time = new Date().getTime()\r\n            //console.log(timeDiff.toString() + 'ms')\r\n            var data = JSON.parse(event.data).data\r\n            if(data.blockHeight != null){\r\n                var txidIndex = -1\r\n                if(this.txids.length>0){                  \r\n                    txidIndex = data.tx.findIndex((element:any)=>{\r\n                        return element.txid === this.txids[0]\r\n                    })\r\n                    //console.log({txid:this.txids[0]},data.tx,txidIndex)\r\n                }\r\n                notification.info({message:data.blockHeight,description:'delay: ' + this.getDelay(data.blockTime) + '/' + this.getDelay(data.blockInsertTime) + '/' + this.getDelay(data.svrSystemTime) + '||txidIndex:' + txidIndex})\r\n\r\n                var blockHeightDataArray = this.blockDatas\r\n\r\n                if(blockHeightDataArray[0].blockHeight == -1 ) blockHeightDataArray.shift()\r\n                if(blockHeightDataArray.length>=50) blockHeightDataArray.pop()\r\n\r\n                let timeDiff = 0\r\n                if(blockHeightDataArray.length > 0) timeDiff = (data.blockTime - blockHeightDataArray[0].blockTime)\r\n                let blockData = data // {height:data.blockHeight,time:data.blockTime,hash:data.blockHash,timeDiff:timeDiff}\r\n                blockData['timeDiff'] = timeDiff\r\n                blockData['txidIndex'] = txidIndex\r\n                blockData['txCount'] = data.tx.length\r\n                blockHeightDataArray.unshift(blockData)\r\n                this.pushEvent('newBlockEvent',blockData)            \r\n        \r\n                this.blockDatas = blockHeightDataArray\r\n                this.lastBlockTime = data.blockTime\r\n            }\r\n        }\r\n    }\r\n\r\n    @action init=()=>{\r\n        console.log(\"this is init\");\r\n        \r\n        window.addEventListener('Teemo.NEO.READY',async (data)=>{\r\n            console.log(\"inject READY \");\r\n            notification.success({message:'Teemo',description:'Teemo.NEO.READY'})     \r\n\r\n            this.isTeemoReady = true\r\n\r\n            var account\r\n            Teemo.NEO.getAccount()\r\n            .then((data)=>{\r\n                console.log('account',data)\r\n                this.updateAddress(data.address)\r\n            })\r\n            .catch((error)=>{\r\n                console.log('account',error)\r\n                this.isConnected=false\r\n            })         \r\n\r\n            this.updateNetwork((await Teemo.NEO.getNetworks()).defaultNetwork)          \r\n\r\n            this.socketInit()\r\n\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.NETWORK_CHANGED',(data:any)=>{\r\n            console.log(\"NETWORK_CHANGED\");\r\n            console.log(data);\r\n\r\n            this.updateNetwork(data.detail.defaultNetwork)\r\n            this.socketInit()\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.CONNECTED',async (data:any)=>{\r\n            console.log(\"CONNECTED\");\r\n            console.log(data);\r\n\r\n            notification.success({message:'Teemo',description:'Teemo.NEO.CONNECTED'})\r\n            this.isConnected = true\r\n            \r\n            this.updateAddress(data.detail.address)\r\n            this.updateNetwork((await Teemo.NEO.getNetworks()).defaultNetwork)\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.DISCONNECTED',(data:any)=>{\r\n            console.log(\"DISCONNECTED\");\r\n            console.log(data);\r\n\r\n            notification.warning({message:'Teemo',description:'Teemo.NEO.DISCONNECTED'})\r\n            this.isConnected = false\r\n\r\n            this.updateAddress('A**********************')\r\n            this.updateNetwork('TestNet')\r\n        })\r\n\r\n        window.addEventListener('Teemo.NEO.ACCOUNT_CHANGED',(data:any)=>{\r\n            console.log(\"ACCOUNT_CHANGED\");\r\n            console.log(data);\r\n\r\n            notification.warning({message:'Teemo',description:'Teemo.NEO.ACCOUNT_CHANGED'})\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport default Store","import { async } from \"q\";\r\n\r\nclass NeoHelper {\r\n    public static getAddressFromScriptHash = () =>{\r\n        //根据合约notify输出的scripthash，转换为NEO地址\r\n    }\r\n\r\n    store:any\r\n    constructor(store:any){\r\n        this.store=store\r\n    }\r\n\r\n    public getBlock = async (blockIndex:number) =>{\r\n      let result = await fetch(this.store.rpcUrl + '?jsonrpc=2.0&method=getblock&params=[' + blockIndex +',1]&id=1', {\r\n        // method: 'post',\r\n        // headers: {\r\n        //   'user-agent': 'Mozilla/4.0 MDN Example',\r\n        //   'content-type': 'application/json'\r\n        // },\r\n        // body: JSON.stringify({\r\n        //   \"jsonrpc\": \"2.0\",\r\n        //   \"method\": \"getblock\",\r\n        //   \"params\": [blockIndex, 1],\r\n        //   \"id\": 1\r\n        // })\r\n      });\r\n      let data = await result.json();\r\n      return data;\r\n    }\r\n\r\n    public static hex2a = (hexx:string) => {\r\n        var hex = hexx.toString();//force conversion\r\n        var str = '';\r\n        for (var i = 0; (i < hex.length && hex.substr(i, 2) !== '00'); i += 2)\r\n            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\r\n        return str;\r\n    }\r\n\r\n    public static hex2Int = (hexx:string) =>{\r\n      if(hexx=='') return 0\r\n      return parseInt(NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse()), 16)\r\n    }\r\n\r\n    public static hex2TimeStr = (hexx:string) =>{\r\n      return NeoHelper.timetrans(parseInt(NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse()), 16))\r\n    }\r\n\r\n    public static hexReverse = (hexx:string)=>{\r\n      return NeoHelper.byte2Hex(NeoHelper.hex2Byte(hexx).reverse())\r\n    }\r\n\r\n    public static byte2Hex = (uint8arr:Uint8Array) => {\r\n        if (!uint8arr) {\r\n          return '';\r\n        }\r\n        \r\n        var hexStr = '';\r\n        for (var i = 0; i < uint8arr.length; i++) {\r\n          var hex = (uint8arr[i] & 0xff).toString(16);\r\n          hex = (hex.length === 1) ? '0' + hex : hex;\r\n          hexStr += hex;\r\n        }\r\n        \r\n        return hexStr.toLowerCase();\r\n    }\r\n\r\n    public static hex2Byte = (str:string) => {\r\n        if (!str) {\r\n          return new Uint8Array();\r\n        }\r\n        \r\n        var a = [];\r\n        for (var i = 0, len = str.length; i < len; i+=2) {\r\n          a.push(parseInt(str.substr(i,2),16));\r\n        }\r\n        \r\n        return new Uint8Array(a);\r\n    }\r\n\r\n    public static timetrans = (timestamp:number)=>{\r\n        var date = new Date(timestamp*1000);//如果date为13位不需要乘1000\r\n        var Y = date.getFullYear() + '-';\r\n        var M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';\r\n        var D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\r\n        var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\r\n        var m = (date.getMinutes() <10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\r\n        var s = (date.getSeconds() <10 ? '0' + date.getSeconds() : date.getSeconds());\r\n        return Y+M+D+h+m+s;\r\n    }\r\n\r\n    public static sec2HMS = (sec:number) =>{\r\n      let h=0\r\n      let m=0\r\n      let s=0\r\n      if((sec % 3600) > 0){\r\n        h = parseInt((sec/3600).toString())\r\n        sec = sec - h*3600\r\n      } \r\n      if((sec % 60) > 0){\r\n        m = parseInt((sec/60).toString())\r\n        sec = sec - m*60\r\n      }\r\n      s = sec\r\n\r\n      let mStr='00'\r\n      let sStr='00'\r\n      if(m <10) mStr = '0' + m \r\n        else mStr=m.toString()\r\n      if(s <10) sStr = '0' + s\r\n        else sStr = s.toString()\r\n\r\n      return h + ':' + mStr + ':' + sStr\r\n    }\r\n}\r\n\r\nexport default NeoHelper;","import { async } from \"q\";\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\n\r\n\r\n\r\nclass NNSHelper {\r\n    store:any\r\n    invokeRead_nameHashArray:any\r\n    constructor(store:any) {\r\n        this.store = store\r\n        this.invokeRead_nameHashArray = {\r\n            \"scriptHash\": store.scriptHash.nns_domaincenter,\r\n            \"operation\": \"nameHashArray\",\r\n            \"arguments\": [\r\n                {\"type\":\"Array\",\"value\":[]},\r\n            ],\r\n            \"network\": store.network\r\n        }\r\n    }\r\n\r\n    public namehash = async (nns:string) => {\r\n        var namehash = \"\"\r\n\r\n        this.invokeRead_nameHashArray.arguments[0].value = [];\r\n        for (const str of nns.split('.').reverse()) {\r\n            ((this.invokeRead_nameHashArray.arguments as Argument[])[0].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n        //console.log(invokeRead_nameHashArray)\r\n        //console.log(JSON.stringify(invokeRead_nameHashArray))\r\n        var invokeResp:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(this.invokeRead_nameHashArray)) as InvokeReadInput)\r\n        //console.log(invokeResp)\r\n        namehash = invokeResp.stack[0].value\r\n\r\n        return namehash\r\n    }\r\n}\r\n\r\nexport default NNSHelper;","import {\r\n    List, message, Avatar, Spin,\r\n  } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\n@observer\r\nclass DivDefault extends React.Component<any,any> {\r\n    NNSh = new NNSHelper(this.props.store);\r\n\r\n    state = {\r\n      resData : '{}'\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <> \r\n        <Spin tip='连接Teemo……' spinning={!this.props.store.isTeemoReady}>          \r\n          <p>{this.props.title}</p>\r\n          <p>{this.props.store.address}</p>\r\n          <p>{this.props.store.network}||{this.props.store.rpcUrl}||{this.props.store.webSocketURL}||isConnected:{this.props.store.isConnected.toString()}||{this.props.store.nns}</p>\r\n          {/* <p>block: {this.props.blockHeight}</p>\r\n          <p>notify: {this.props.notifyHeight}</p> */}\r\n          <pre>{JSON.stringify(this.props.store.scriptHash,null,2)}</pre>          \r\n          <div>\r\n            <div className=\"demo-loading-container\">\r\n              <Spin />\r\n              {/* <p>readyState: {this.props.store.socketReadyState}</p> */}\r\n              <p>LastWSmsg: {this.props.store.lastWSmsgSec}s</p>\r\n              <p>LastBlockTime: {NeoHelper.timetrans(this.props.store.lastBlockTime)}(before {NeoHelper.sec2HMS(parseInt((new Date().getTime()/1000 - this.props.store.lastBlockTime).toFixed(0)))})</p>\r\n            </div>\r\n            <List\r\n              bordered = {true}\r\n              dataSource={this.props.store.blockDatas}\r\n              pagination={{\r\n                onChange: (page) => {\r\n                  console.log(page);\r\n                },\r\n                pageSize: 5,\r\n              }}\r\n              renderItem={(item: { id: number; blockHeight: number; timeDiff: number; blockTime:number; blockHash:string ; txCount:number }) => (\r\n                <List.Item key={item.id}>\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src=\"https://neo-cdn.azureedge.net/images/favicon.png\" />}\r\n                    title={item.blockHeight}\r\n                    description={item.blockHash + \" tx:\" + item.txCount}\r\n                  />\r\n                  <div>({item.timeDiff + 's'}){NeoHelper.timetrans(item.blockTime)}</div>\r\n                </List.Item>\r\n              )}\r\n            ></List>\r\n          </div>\r\n        </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivDefault;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface OwnerInfo\r\n{\r\n    owner:string//如果长度=0 表示没有初始化\r\n    register : string \r\n    resolver: string ;\r\n    TTL: string ;\r\n    parentOwner: string ;//当此域名注册时，他爹的所有者，记录这个，则可以检测域名的爹变了\r\n    domain: string ;//如果长度=0 表示没有初始化\r\n    parenthash: string ;\r\n    root: string ;//是不是根合约\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nclass DivNnsCenter extends React.Component<any,any> {\r\n    // NNSh = new NNSHelper(this.props.store); \r\n\r\n    state = {\r\n        resData : '{}'\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        let invokeGetOwnerInfo =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_domaincenter,\r\n            \"operation\": \"getOwnerInfo\",\r\n            \"arguments\": [\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns)},\r\n            ],\r\n            \"network\": this.props.store.network\r\n        } \r\n\r\n        // invokeGetOwnerInfo.arguments[0].value = await this.NNSh.namehash(this.props.store.nns)\r\n        //console.log(JSON.stringify(invokeGetOwnerInfo,null,2))\r\n\r\n        var nnsOwnerInfoData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeGetOwnerInfo)) as InvokeReadInput)\r\n        var stack0:any = nnsOwnerInfoData.stack[0].value;\r\n        //console.log(JSON.stringify(nnsOwnerInfoData,null,2))\r\n        var nnsOwnerInfo:OwnerInfo = {\r\n            owner:stack0[0].value,\r\n            register:stack0[1].value,\r\n            resolver:stack0[2].value,\r\n            TTL:stack0[3].value,\r\n            parentOwner:stack0[4].value,\r\n            domain:stack0[5].value,\r\n            parenthash:stack0[6].value,\r\n            root:stack0[7].value,\r\n        }\r\n        nnsOwnerInfo.domain = NeoHelper.hex2a(nnsOwnerInfo.domain)\r\n        nnsOwnerInfo.TTL = NeoHelper.hex2TimeStr(nnsOwnerInfo.TTL)\r\n        if(nnsOwnerInfo.owner != '') nnsOwnerInfo.owner = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.byte2Hex(NeoHelper.hex2Byte(nnsOwnerInfo.owner).reverse()))\r\n        this.setState({\r\n            resData: JSON.stringify(nnsOwnerInfo, null, 2)                                 \r\n        });\r\n\r\n        //this.invokeRead(JSON.stringify(invokeRead3))\r\n    }\r\n\r\n    // handelChange(e:any){\r\n    //     this.setState({\r\n    //         inputValue:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            {/* <Input id=\"NNSinput\" placeholder=\"输入要查询的NSS域名\" onChange={this.handelChange.bind(this)} defaultValue={this.state.inputValue}/> */}\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS所有者信息</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsCenter;","import React, { Component } from 'react';\r\nimport {Button,Input} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\n// interface IProps{\r\n//     title:string\r\n//     scriptHash:any\r\n// }\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nclass DivNnsResolver extends React.Component<any,any> {\r\n    // NNSh = new NNSHelper(this.props.store);\r\n    \r\n    state = {\r\n        resData : '{}'\r\n    }  \r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        let invokeRead_resolve =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_resolver,\r\n            \"operation\": \"resolve\",\r\n            \"arguments\": [\r\n                {\"type\":\"String\",\"value\":\"addr\"},\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns)}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // invokeRead_resolve.arguments[1].value = await this.NNSh.namehash(this.props.store.nns)\r\n\r\n        //console.log(this.invokeRead_resolve)\r\n        var resolverData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_resolve)) as InvokeReadInput)       \r\n        //console.log(resolverData);\r\n\r\n        this.setState({\r\n            resData:NeoHelper.hex2a(resolverData.stack[0].value)==''?'未映射':NeoHelper.hex2a(resolverData.stack[0].value)                                 \r\n        });\r\n    }\r\n\r\n    // handelChange(e:any){\r\n    //     this.setState({\r\n    //         inputValue:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            {/* <Input placeholder=\"输入要查询的NSS域名\" onChange={this.handelChange.bind(this)} defaultValue={this.state.inputValue}/> */}\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">解析NNS</Button>\r\n            <pre>{this.state.resData}</pre>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsResolver;","import React, { Component } from 'react';\r\nimport {autorun} from 'mobx'\r\nimport {Button,Input,Spin,Statistic, Row, Col, Icon,Timeline,Drawer,Switch,InputNumber,Divider} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface AuctionState\r\n{\r\n    id:string; //拍卖id,就是拍卖生成的auctionid\r\n    auctionStarter:string;//域名开拍的人\r\n    parenthash:string ;//拍卖内容\r\n    domain:string ;//拍卖内容\r\n    domainTTL:string ;//域名的TTL,用这个信息来判断域名是否发生了变化\r\n    startBlockSelling:number ;//开始销售块\r\n    endBlock:number ;//结束块\r\n    maxPrice:number ;//最高出价\r\n    maxBuyer:string ;//最大出价者\r\n    lastBlock:number ;//最后出价块\r\n}\r\n\r\ninterface NNScredit\r\n{\r\n    namehash:string\r\n    fullDomainName:string \r\n    TTL:string\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nclass DivAuction extends React.Component<any,any> {\r\n    //NNSh = new NNSHelper(this.props.store);\r\n    //NEOh = new NeoHelper(this.props.store);  \r\n\r\n    state = {\r\n        resDataRead : '{}',\r\n        reqDataWrite : '{}',\r\n        resDataWrite : '{}',\r\n        inputAmount: 0,\r\n        loadingR : true,\r\n        loadingW : false,\r\n        CGASBalance:0,\r\n        auctionBalance:0,\r\n        bidBalance:0,\r\n        auctionDay:0,\r\n        auctionStateInfo:{\r\n            \"id\": \"\",\r\n            \"auctionStarter\": \"\",\r\n            \"parenthash\": \"\",\r\n            \"domain\": \"\",\r\n            \"domainTTL\": \"\",\r\n            \"startBlockSelling\": 0,\r\n            \"endBlock\": \"\",\r\n            \"maxPrice\": \"\",\r\n            \"maxBuyer\": \"\",\r\n            \"lastBlock\": \"\"\r\n          },\r\n        CGASopValue:0,\r\n        drawerVisible: false\r\n    }  \r\n\r\n    intervalID:any\r\n    componentDidMount(){\r\n\r\n        this.intervalID = setInterval(async ()=>{\r\n            this.setState({\r\n                auctionDay :await this.calcAuctionDay(this.state.auctionStateInfo.startBlockSelling)\r\n            })           \r\n        },1000)\r\n\r\n        this.getInvokeRead_getBanlance()\r\n\r\n        // console.log(\"teemoReady:\" ,this.props.teemoReady)\r\n        // if(this.props.teemoReady)\r\n        // {\r\n        //     console.log(1)\r\n        //     this.getInvokeRead_getBanlance()\r\n        // }\r\n        // else{\r\n        //     console.log(0)\r\n        //     var intervalID = setInterval(()=>{\r\n        //         console.log(\"teemoReady:\" ,this.props.teemoReady)\r\n        //         if(this.props.teemoReady)\r\n        //         {\r\n        //             setTimeout(()=>{this.getInvokeRead_getBanlance()},1000)                   \r\n        //             clearInterval(intervalID)\r\n        //         }               \r\n        //     },1000) \r\n        // }      \r\n\r\n        window.addEventListener (\"newBlockEvent\", this.doOnEvent, false)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"newBlockEvent\", this.doOnEvent, false);\r\n        clearInterval(this.intervalID)\r\n    }\r\n\r\n    doOnEvent = (e:any) =>{\r\n        console.log('newBlockEvent',e)\r\n        if(e.detail.txidIndex > -1){\r\n            this.getInvokeRead_getBanlance()\r\n        }   \r\n    }\r\n\r\n    calcAuctionDay =async (blockIndex:number) =>{\r\n        var startTimeS = (await new NeoHelper(this.props.store).getBlock(blockIndex)).result.time as number\r\n        return  (new Date().getTime()/1000 - startTimeS)/ 60 / 5  //5分钟1天\r\n    }\r\n\r\n    getInvokeRead_getBanlance = async () =>{\r\n        let invokeRead_CGAS_getBanlance =  {\r\n            \"scriptHash\": this.props.store.scriptHash.NEP_5_CGAS,\r\n            \"operation\": \"balanceOf\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n        let invokeRead_auction_getBanlance =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"balanceOf\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }       \r\n        let invokeRead_auction_getAuctionState =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"getAuctionStateByFullhash\",\r\n            \"arguments\": [\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns)}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }        \r\n        let invokeRead_auction_getBalanceOfBid =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"balanceOfBid\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":\"\"}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // invokeRead_CGAS_getBanlance.arguments[0].value =  this.props.store.address//await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        // this.invokeRead_auction_getBanlance.arguments[0].value =  this.props.store.address\r\n\r\n        //this.invokeRead_auction_getAuctionState.arguments[0].value = await new NNSHelper(this.props.store).namehash(this.props.store.nns)\r\n\r\n        //console.log(invokeRead_resolve)\r\n        var InvokeReadGroupInput = {group:[{}]}\r\n        InvokeReadGroupInput.group.pop()\r\n        InvokeReadGroupInput.group.push(invokeRead_CGAS_getBanlance)\r\n        InvokeReadGroupInput.group.push(invokeRead_auction_getBanlance)\r\n        InvokeReadGroupInput.group.push(invokeRead_auction_getAuctionState)\r\n        \r\n        //console.log(JSON.stringify(InvokeReadGroupInput,null,2));\r\n        \r\n        var resData:InvokeScriptResp = await Teemo.NEO.invokeReadGroup(JSON.parse(JSON.stringify(InvokeReadGroupInput)) as InvokeReadGroup)       \r\n        //console.log(resData.stack[3].value);\r\n        //console.log(resData)\r\n\r\n        if(resData.stack[0] != null){\r\n            //console.log('stack',resData.stack)\r\n            var stack2:any = resData.stack[2].value;\r\n            //console.log('stack2',stack2)\r\n\r\n            var AuctionStateInfo:AuctionState = {\r\n                id:stack2[0].value, //拍卖id,就是拍卖生成的auctionid\r\n                auctionStarter:stack2[1].value,//域名开拍的人\r\n                parenthash:stack2[2].value,//拍卖内容\r\n                domain:stack2[3].value,//拍卖内容\r\n                domainTTL:stack2[4].value,//域名的TTL,用这个信息来判断域名是否发生了变化\r\n                startBlockSelling:stack2[5].value,//开始销售块\r\n                endBlock:stack2[6].value,//结束块\r\n                maxPrice:stack2[7].value,//最高出价\r\n                maxBuyer:stack2[8].value,//最大出价者\r\n                lastBlock:stack2[9].value//最后出价块\r\n            }\r\n            AuctionStateInfo.auctionStarter = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.hexReverse(AuctionStateInfo.auctionStarter))\r\n            AuctionStateInfo.domain = NeoHelper.hex2a(AuctionStateInfo.domain)\r\n            AuctionStateInfo.domainTTL = NeoHelper.hex2TimeStr(AuctionStateInfo.domainTTL)\r\n            AuctionStateInfo.maxPrice = AuctionStateInfo.maxPrice/10**8\r\n            if(AuctionStateInfo.maxBuyer != ''){\r\n                AuctionStateInfo.maxBuyer = await Teemo.NEO.getAddressFromScriptHash(NeoHelper.hexReverse(AuctionStateInfo.maxBuyer))\r\n            }      \r\n\r\n            //---第二轮invokescript\r\n\r\n            // this.invokeRead_auction_getBalanceOfBid.arguments[0].value = this.props.store.address\r\n            invokeRead_auction_getBalanceOfBid.arguments[1].value = AuctionStateInfo.id\r\n\r\n            var resData2:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_auction_getBalanceOfBid)) as InvokeArgs)\r\n\r\n            //console.log('AuctionStateInfo',AuctionStateInfo)\r\n\r\n            //var CGAS_balacnce = resData.stack[0].value\r\n            //console.log(NeoHelper.hex2Int(CGAS_balacnce)/10**8)\r\n\r\n            this.setState({\r\n                CGASBalance:NeoHelper.hex2Int(resData.stack[0].value)/10**8,\r\n                auctionBalance:NeoHelper.hex2Int(resData.stack[1].value)/10**8,\r\n                bidBalance:NeoHelper.hex2Int(resData2.stack[0].value)/10**8,\r\n                auctionStateInfo:AuctionStateInfo,\r\n                auctionDay:await this.calcAuctionDay(AuctionStateInfo.startBlockSelling),\r\n                resDataRead:JSON.stringify(AuctionStateInfo,null,2),\r\n                loadingR:false\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                resDataRead:\"查询异常\",\r\n                loadingR:false\r\n            })\r\n        }\r\n\r\n        \r\n\r\n        //console.log(this.state.auctionStateInfo)\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        this.getInvokeRead_getBanlance()\r\n    }\r\n\r\n    butInvoke_doCGASin_click = async () =>{\r\n        let invoke_CGAS_doCGASinStep0 =  {\r\n            \"scriptHash\": this.props.store.scriptHash.NEP_5_CGAS,\r\n            \"operation\": \"transfer\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"Address\",\"value\":await Teemo.NEO.getAddressFromScriptHash(this.props.store.scriptHash.nns_auction)},\r\n                {\"type\":\"Integer\",\"value\":this.state.CGASopValue * (10**8)}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍充值CGAS转账\",\r\n            \"network\": this.props.store.network\r\n        }\r\n        let invoke_auction_doCGASinStep1 =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"setmoneyin\",\r\n            \"arguments\": [\r\n                {\"type\":\"Hook_Txid\",\"value\":0}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍充值确认\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_CGAS_doCGASinStep0.arguments[0].value = this.props.store.address\r\n        // this.invoke_CGAS_doCGASinStep0.arguments[1].value = await Teemo.NEO.getAddressFromScriptHash(this.props.store.scriptHash.nns_auction)\r\n        // this.invoke_CGAS_doCGASinStep0.arguments[2].value = this.state.CGASopValue * (10**8)\r\n\r\n        //console.log(invoke_CGAS_doCGASinStep0)\r\n\r\n        var InvokeGroupInput = {merge:true,group:[{}]}\r\n        InvokeGroupInput.group.pop()\r\n        InvokeGroupInput.group.push(invoke_CGAS_doCGASinStep0)\r\n        InvokeGroupInput.group.push(invoke_auction_doCGASinStep1)\r\n\r\n        //console.log(InvokeGroupInput)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invokeGroup(JSON.parse(JSON.stringify(InvokeGroupInput)) as InvokeGroup)\r\n\r\n        //console.log(resp)\r\n\r\n        resp.forEach(res => {\r\n            this.props.store.addTxidSended(res.txid)\r\n        });\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(InvokeGroupInput,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doCGASout_click = async () =>{\r\n        let invoke_auction_doCGASout =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"getmoneyback\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"Integer\",\"value\":this.state.CGASopValue * (10**8)}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍CGAS提取\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doCGASout.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doCGASout.arguments[1].value = this.state.CGASopValue * (10**8)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doCGASout)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doCGASout,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doStartAuction_click = async () =>{\r\n        let invoke_auction_doStartAuction =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"startAuction\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])},\r\n                {\"type\":\"String\",\"value\":this.props.store.nns.split('.')[0]}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍开标\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doStartAuction.arguments[0].value = this.props.store.address;\r\n        // this.invoke_auction_doStartAuction.arguments[1].value = await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])\r\n        // this.invoke_auction_doStartAuction.arguments[2].value = this.props.store.nns.split('.')[0]\r\n\r\n        //console.log(invoke_auction_doStartAuction)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doStartAuction)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doStartAuction,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doBid_click = async() =>{\r\n        let invoke_auction_doBid =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"raise\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":this.state.auctionStateInfo.id},\r\n                {\"type\":\"Integer\",\"value\":(this.state.inputAmount*(10**8)).toString()}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍加价\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doBid.arguments[0].value = this.props.store.address;\r\n        // this.invoke_auction_doBid.arguments[1].value = this.state.auctionStateInfo.id\r\n        // this.invoke_auction_doBid.arguments[2].value = (this.state.inputAmount*(10**8)).toString()\r\n\r\n        console.log(invoke_auction_doBid)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doBid)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doBid,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        })\r\n    }\r\n\r\n    butInvoke_doBidSettlementAndCollect_click = async() =>{\r\n        let invoke_auction_doBidSettlement =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"bidSettlement\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":this.state.auctionStateInfo.id}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍域名领取\",\r\n            \"network\": this.props.store.network\r\n        }        \r\n        let invoke_auction_doCollect =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"collectDomain\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":this.state.auctionStateInfo.id}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS竞拍域名领取\",\r\n            \"network\": this.props.store.network\r\n        }\r\n        // this.invoke_auction_doBidSettlement.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doBidSettlement.arguments[1].value = this.state.auctionStateInfo.id\r\n\r\n        // this.invoke_auction_doCollect.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doCollect.arguments[1].value = this.state.auctionStateInfo.id\r\n\r\n        var InvokeGroupInput = {merge:false,group:[{}]}\r\n        InvokeGroupInput.group.pop()\r\n        InvokeGroupInput.group.push(invoke_auction_doBidSettlement)\r\n        InvokeGroupInput.group.push(invoke_auction_doCollect)\r\n\r\n        //console.log(JSON.stringify(InvokeGroupInput,null,2))\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invokeGroup(JSON.parse(JSON.stringify(InvokeGroupInput)) as InvokeGroup)\r\n\r\n        //console.log(resp)\r\n        resp.forEach(res => {\r\n            this.props.store.addTxidSended(res.txid)\r\n        });\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(InvokeGroupInput,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvoke_doRenew_click = async() =>{\r\n        let invoke_auction_doRenew =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_auction,\r\n            \"operation\": \"renewDomain\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":this.props.store.address},\r\n                {\"type\":\"ByteArray\",\"value\":await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])},\r\n                {\"type\":\"String\",\"value\":this.props.store.nns.split('.')[0]}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS域名续期\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        // this.invoke_auction_doRenew.arguments[0].value = this.props.store.address\r\n        // this.invoke_auction_doRenew.arguments[1].value = await new NNSHelper(this.props.store).namehash(this.props.store.nns.split('.')[1])\r\n        // this.invoke_auction_doRenew.arguments[2].value = this.props.store.nns.split('.')[0]\r\n\r\n        console.log(invoke_auction_doRenew)\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var resp = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_auction_doRenew)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(resp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_auction_doRenew,null,2),\r\n            resDataWrite:JSON.stringify(resp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        })\r\n    }\r\n\r\n    CGASopChange(e:any){\r\n        this.setState({\r\n            CGASopValue:e.target.value\r\n        })\r\n    }\r\n\r\n    // addrChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueAddr:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // nnsChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueNns:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    amountChange(e:any){\r\n        this.setState({\r\n            inputAmount:e\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                        <Statistic title=\"钱包账户\" value={this.state.CGASBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Spin>                  \r\n                </Col>\r\n                <Col span={8}>\r\n                    <Row gutter={16}>\r\n                        <Col span={8}>\r\n                            <Button onClick={this.butInvoke_doCGASout_click} ><Icon type=\"left\" />提取</Button>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Input placeholder=\"输入金额\" onChange={this.CGASopChange.bind(this)} defaultValue={this.state.CGASopValue.toString()} />   \r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Button onClick={this.butInvoke_doCGASin_click} >充值<Icon type=\"right\" /></Button>\r\n                        </Col>\r\n                    </Row>                                                     \r\n                </Col>\r\n                <Col span={8}>\r\n                    <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                    <Statistic title=\"合约账户\" value={this.state.auctionBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Spin>                  \r\n                </Col>\r\n            </Row>\r\n            {/* <Input placeholder=\"输入要查询的地址\" onChange={this.addrChange.bind(this)} defaultValue={this.props.store.address}/> */}\r\n            {/* <Input placeholder=\"输入要绑定的NNS\" onChange={this.nnsChange.bind(this)} defaultValue={this.props.store.nns}/> */}\r\n            <Input placeholder=\"输入地址\" onChange={(e)=>{this.props.store.updateAddress(e.target.value)}} defaultValue={this.props.store.address}/>\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">刷新数据</Button>\r\n            <Divider type=\"vertical\" />\r\n            <Button onClick={this.butInvoke_doStartAuction_click}>开标</Button>           \r\n            <Divider type=\"vertical\" />\r\n            <InputNumber min={0} max={this.state.auctionBalance} step={0.1} onChange={this.amountChange.bind(this)} />=>\r\n            <Button onClick={this.butInvoke_doBid_click}>加价</Button> \r\n            <Divider type=\"vertical\" /> \r\n            <Button onClick={this.butInvoke_doBidSettlementAndCollect_click}>结算与领取</Button>\r\n            <Divider type=\"vertical\" /> \r\n            <Button onClick={this.butInvoke_doRenew_click} disabled={this.state.auctionDay>(365-90)?false:true}>续期{(this.state.auctionDay-(365-90)).toFixed(2)}</Button>             \r\n            <Divider />         \r\n            <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                <Row type=\"flex\" align=\"middle\" gutter={16}>\r\n                    <Col span={3}>\r\n                        <Statistic title=\"开拍天数\" value={this.state.auctionDay.toFixed(2)} suffix=\"天\" prefix={<Icon type=\"clock-circle\" />} />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Switch checked={this.state.drawerVisible} onChange={()=>{this.setState({drawerVisible: !this.state.drawerVisible})}} />显示时间轴  \r\n                    </Col>\r\n                    <Col span={13}>\r\n                        <Statistic title=\"加价总数\" value={this.state.bidBalance} suffix=\"CGAS\" prefix={<Icon type=\"money-collect\" />} />\r\n                    </Col>\r\n                </Row>                                             \r\n                \r\n                {/* <Button type=\"primary\" onClick={()=>{this.setState({drawerVisible: true})}}>查看竞拍阶段</Button> */}\r\n                <Drawer\r\n                    title=\"竞拍阶段\"\r\n                    placement=\"left\"\r\n                    closable={false}\r\n                    onClose={()=>{this.setState({drawerVisible: false})}}\r\n                    visible={this.state.drawerVisible}\r\n                    >\r\n                        <Timeline>\r\n                            <Timeline.Item color={this.state.auctionDay>0?'green':'blue'}>确定期（1-2）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>2?'green':'blue'}>确定期（3）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>3?'green':'blue'}>随机期（4-5）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>5?'green':'blue'}>竞拍结束（5）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>(365-90)?'green':'blue'}>续期期（365-90）</Timeline.Item>\r\n                            <Timeline.Item color={this.state.auctionDay>365?'green':'blue'}>到期（365）</Timeline.Item>\r\n                        </Timeline>\r\n                    </Drawer>\r\n                <pre>{this.state.resDataRead}</pre>\r\n            </Spin>\r\n            {/* <pre>{this.state.reqDataWrite}</pre> */}\r\n            <Spin tip='请求中' spinning={this.state.loadingW}>\r\n                <pre>{this.state.resDataWrite}</pre>\r\n            </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivAuction;","import React, { Component } from 'react';\r\nimport {autorun} from 'mobx'\r\nimport {Button,Input,Spin} from 'antd';\r\nimport { async } from 'q';\r\nimport { any, number } from 'prop-types';\r\nimport NeoHelper from '../Tools/neoHelper'\r\nimport NNSHelper from '../Tools/nnsHelper'\r\n\r\ninterface NNScredit\r\n{\r\n    namehash:string\r\n    fullDomainName:string \r\n    TTL:string\r\n}\r\n\r\ninterface InvokeScriptRespStack{\r\n    type: string,\r\n    value: string\r\n}\r\ninterface InvokeScriptResp{\r\n    script: string,\r\n    state: string,\r\n    gas_consumed: string,\r\n    stack: InvokeScriptRespStack[]\r\n}\r\n\r\nclass DivNnsCredit extends React.Component<any,any> {\r\n    state = {\r\n        resDataRead : '{}',\r\n        reqDataWrite : '{}',\r\n        resDataWrite : '{}',\r\n        loadingR : false,\r\n        loadingW : false\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener (\"newBlockEvent\", this.doOnEvent, false)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"newBlockEvent\", this.doOnEvent, false);\r\n    }\r\n\r\n    doOnEvent = (e:any) =>{\r\n        console.log('newBlockEvent',e)\r\n        if(e.detail.txidIndex > -1){\r\n            this.getInvokeRead()\r\n        }  \r\n    }\r\n\r\n    getInvokeRead = async () =>{\r\n        let invokeRead_credit =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_credit,\r\n            \"operation\": \"getCreditInfo\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":\"\"}\r\n            ],\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        invokeRead_credit.arguments[0].value =  this.props.store.address//await this.NNSh.namehash(this.state.inputValue)\r\n\r\n        console.log(JSON.stringify(invokeRead_credit,null,2))\r\n        var creditData:InvokeScriptResp = await Teemo.NEO.invokeRead(JSON.parse(JSON.stringify(invokeRead_credit)) as InvokeReadInput)       \r\n        //console.log(creditData);\r\n\r\n        if(creditData.stack[0] != null){\r\n            var stack0:any = creditData.stack[0].value;\r\n            var creditInfo:NNScredit = {\r\n                namehash:stack0[0].value,\r\n                fullDomainName:stack0[1].value,\r\n                TTL:stack0[2].value,\r\n            }\r\n            creditInfo.fullDomainName = NeoHelper.hex2a(creditInfo.fullDomainName)\r\n            creditInfo.TTL = NeoHelper.hex2TimeStr(creditInfo.TTL)\r\n    \r\n            this.setState({\r\n                resDataRead:JSON.stringify(creditInfo, null, 2),\r\n                loadingR:false                                 \r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                resDataRead:\"从未映射\",\r\n                loadingR:false                                 \r\n            });\r\n        }\r\n    }\r\n\r\n    butGetInvokeReadClick = async (e:any) => {\r\n        this.getInvokeRead()\r\n    }\r\n\r\n    butInvokeCreditAuthenticateClick = async(e:any) => {\r\n        let invoke_credit_authenticate =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_credit,\r\n            \"operation\": \"authenticate\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":\"\"},\r\n                {\"type\":\"Array\",\"value\":[]}\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS反向解析绑定\",\r\n            \"network\": this.props.store.network\r\n        }\r\n\r\n        invoke_credit_authenticate.arguments[0].value = this.props.store.address\r\n        invoke_credit_authenticate.arguments[1].value = []\r\n        for (const str of this.props.store.nns.split('.').reverse()) {\r\n            ((invoke_credit_authenticate.arguments as Argument[])[1].value as Argument[]).push({type:\"String\",value:str});\r\n        }\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditAuthenticateResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_authenticate)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditAuthenticateResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_authenticate,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditAuthenticateResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                               \r\n        });\r\n    }\r\n\r\n    butInvokeCreditRevokeClick = async(e:any) => {\r\n        let invoke_credit_revoke =  {\r\n            \"scriptHash\": this.props.store.scriptHash.nns_credit,\r\n            \"operation\": \"revoke\",\r\n            \"arguments\": [\r\n                {\"type\":\"Address\",\"value\":\"\"},\r\n            ],\r\n            \"fee\":\"0\",\r\n            \"description\":\"NNS反向解析解绑\",\r\n            \"network\": this.props.store.network\r\n        }  \r\n\r\n        invoke_credit_revoke.arguments[0].value = this.props.store.address\r\n\r\n        this.setState({\r\n            loadingW:true                                \r\n        });\r\n\r\n        var invokeCreditRevokeResp:InvokeOutput = await Teemo.NEO.invoke(JSON.parse(JSON.stringify(invoke_credit_revoke)) as InvokeArgs)\r\n\r\n        this.props.store.addTxidSended(invokeCreditRevokeResp.txid)\r\n        this.setState({\r\n            reqDataWrite:JSON.stringify(invoke_credit_revoke,null,2),\r\n            resDataWrite:JSON.stringify(invokeCreditRevokeResp, null, 2),\r\n            loadingW:false,\r\n            loadingR:true                                                                 \r\n        });\r\n    }\r\n\r\n    // addrChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueAddr:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // nnsChange(e:any){\r\n    //     this.setState({\r\n    //         inputValueNns:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n      return ( \r\n        <>\r\n            <p>{this.props.title}</p>\r\n            {/* <Input placeholder=\"输入要查询的地址\" onChange={this.addrChange.bind(this)} defaultValue={this.state.inputValueAddr}/>\r\n            <Input placeholder=\"输入要绑定的NNS\" onChange={this.nnsChange.bind(this)} defaultValue={this.state.inputValueNns}/> */}\r\n            <Input placeholder=\"输入地址\" onChange={(e)=>{this.props.store.updateAddress(e.target.value)}} defaultValue={this.props.store.address}/>\r\n            <Input placeholder=\"输入NSS域名\" onChange={(e)=>{this.props.store.updateNNS(e.target.value)}} defaultValue={this.props.store.nns}/>\r\n            <Button onClick={this.butGetInvokeReadClick} type=\"primary\">获取NNS反向解析信息</Button>\r\n            <Button onClick={this.butInvokeCreditAuthenticateClick}>绑定</Button>\r\n            <Button onClick={this.butInvokeCreditRevokeClick}>解绑</Button>\r\n            <Spin tip='等待共识中' spinning={this.state.loadingR}>\r\n                <pre>{this.state.resDataRead}</pre>\r\n            </Spin>\r\n            {/* <pre>{this.state.reqDataWrite}</pre> */}\r\n            <Spin tip='请求中' spinning={this.state.loadingW}>\r\n                <pre>{this.state.resDataWrite}</pre>\r\n            </Spin>\r\n        </>\r\n        )    \r\n    }\r\n  }\r\n\r\nexport default DivNnsCredit;","import React, { Component } from 'react';\nimport './App.css';\nimport { createStore } from 'redux'\nimport { Layout, Menu, Icon, notification, Input,Spin } from 'antd';\nimport { any } from 'prop-types';\n\nimport Store from './store';\nimport DivDefault from './components/divDefault';\nimport DivNnsCenter from './components/divNnsCenter';\nimport DivNnsResolver from './components/divNnsResolver';\nimport DivAuction from './components/divAuction';\nimport DivNnsCredit from './components/divNnsCredit';\nimport MobxTest from './components/mobxTest';\nimport { updateLocale } from 'moment';\n\nimport { observable ,autorun} from \"mobx\";\nimport { Socket } from 'dgram';\nimport Title from 'antd/lib/typography/Title';\n\nconst {\n  Header, Content, Footer, Sider,\n} = Layout;\n\n// const webSocketURL = 'ws://47.99.35.147:82/ws/testnet'\n\nlet div_defult = () =>{\n  return <p>div_defult</p>\n}\n\n// let time = new Date().getTime()\n\nconst store = new Store();\n\nclass App extends Component {\n  state = {\n    menuID: 1\n  }\n\n  menuClick = (e:any) => {\n    console.log('menu Click', e);\n    this.setState({\n      menuID: e.key\n    });\n  } \n  \n  render() {\n    let div_main = null;\n    if (this.state.menuID == 1) {\n      div_main = <DivDefault store={store} title=\"default Page\" />\n    } \n    else if (this.state.menuID == 2) {\n      div_main = <DivNnsCenter store={store} title=\"NNS Domain Center\" />\n    }\n    else if (this.state.menuID == 3) {\n      div_main = <DivNnsResolver store={store} title=\"NNS Resolver\" />\n    }\n    else if (this.state.menuID == 4) {\n      div_main = <DivAuction store={store} title=\"NNS Auction(Only *.test)\" />\n    }\n    else if (this.state.menuID == 5) {\n      div_main = <DivNnsCredit store={store} title=\"NNS Credit\" />\n    }\n    else {\n      div_main = div_defult()\n    }\n\n    return (\n      <Layout>\n        <Sider\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          onBreakpoint={(broken) => { console.log(broken); }}\n          onCollapse={(collapsed, type) => { console.log(collapsed, type); }}\n        >\n          <div className=\"logo\" />\n          <Menu onClick={this.menuClick}  theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">Default Page</span>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS Center</span>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS resolver</span>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS Auction</span>\n            </Menu.Item>\n            <Menu.Item key=\"5\">\n              <Icon type=\"file\" />\n              <span className=\"nav-text\">NNS Credit</span>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <h1>--- NNS Teemo Demo ---</h1>\n          </Header>\n          <Content style={{ margin: '24px 16px 0' }}>\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                {div_main}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>\n            NNS ©2019 Created by NEL\n          </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n        <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}